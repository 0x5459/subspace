##
# This action runs trivy container scanning and anchore grype vulnerability
# scanner for docker images and packages.
##

name: sec-scan
on:
  workflow_dispatch:
  schedule:
    - cron: "40 14 * * 0"

jobs:
  trivy_scan_job:
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        image:
          - farmer
          - node
          - bootstrap-node
        platform:
          - arch: linux/amd64
            dockerfile-suffix: ""
            suffix: ubuntu-x86_64-${{ github.ref_name }}
            image-suffix: ""
            rustflags: "-C target-cpu=skylake"
          # We build AArch64
          - arch: linux/aarch64
            dockerfile-suffix: ".aarch64"
            suffix: ubuntu-aarch64-${{ github.ref_name }}
            image-suffix: "-aarch64"
        build:
          - os: ${{ fromJson(github.repository_owner == 'subspace' && '["self-hosted", "ubuntu-20.04-x86-64"]' || 'ubuntu-20.04') }}
            target: x86_64-unknown-linux-gnu
            suffix: ubuntu-x86_64-skylake-${{ github.ref_name }}
            rustflags: "-C target-cpu=skylake"
          - os: ${{ fromJson(github.repository_owner == 'subspace' && '["self-hosted", "ubuntu-20.04-x86-64"]' || 'ubuntu-20.04') }}
            target: aarch64-unknown-linux-gnu
            suffix: ubuntu-aarch64-${{ github.ref_name }}
            rustflags: "-C linker=aarch64-linux-gnu-gcc --cfg aes_armv8"

    name: Build Images
    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # @v2.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # @v2.2.1

      - name: Log into registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # @v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea # @v4.1.1
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}:${{ github.sha }}
          tags: |
            type=ref,event=tag
            type=ref,event=branch
            type=sha,format=long
          flavor: |
            latest=false
            suffix=${{ matrix.platform.image-suffix }}

      - name: Build and push ${{ matrix.image }} image
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # @v3.2.0
        with:
          file: Dockerfile-${{ matrix.image }}${{ matrix.platform.dockerfile-suffix }}
          platforms: ${{ matrix.platform.arch }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SUBSTRATE_CLI_GIT_COMMIT_HASH=${{ github.sha }}
            RUSTFLAGS=${{ matrix.platform.rustflags }}

      - name: Run Trivy vulnerability scanner on ${{ matrix.image }} image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}:${{ github.sha }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

  anchore_scan_job:
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        image:
          - farmer
          - node
          - bootstrap-node
        platform:
          - arch: linux/amd64
            dockerfile-suffix: ""
            suffix: ubuntu-x86_64-${{ github.ref_name }}
            image-suffix: ""
            rustflags: "-C target-cpu=skylake"
          # We build AArch64
          - arch: linux/aarch64
            dockerfile-suffix: ".aarch64"
            suffix: ubuntu-aarch64-${{ github.ref_name }}
            image-suffix: "-aarch64"
        build:
          - os: ${{ fromJson(github.repository_owner == 'subspace' && '["self-hosted", "ubuntu-20.04-x86-64"]' || 'ubuntu-20.04') }}
            target: x86_64-unknown-linux-gnu
            suffix: ubuntu-x86_64-skylake-${{ github.ref_name }}
            rustflags: "-C target-cpu=skylake"
          - os: ${{ fromJson(github.repository_owner == 'subspace' && '["self-hosted", "ubuntu-20.04-x86-64"]' || 'ubuntu-20.04') }}
            target: aarch64-unknown-linux-gnu
            suffix: ubuntu-aarch64-${{ github.ref_name }}
            rustflags: "-C linker=aarch64-linux-gnu-gcc --cfg aes_armv8"

    runs-on: ${{ matrix.build.os }}
    name: Anchore grype security scan
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Scan current project
        id: scan
        uses: anchore/scan-action@v2
        with:
          path: "./"
          fail-build: true
          acs-report-enable: true

      - name: upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # @v2.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # @v2.2.1

      - name: Log into registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # @v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea # @v4.1.1
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}:${{ github.sha }}
          tags: |
            type=ref,event=tag
            type=ref,event=branch
            type=sha,format=long
          flavor: |
            latest=false
            suffix=${{ matrix.platform.image-suffix }}

      - name: Build and push ${{ matrix.image }} image
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # @v3.2.0
        with:
          file: Dockerfile-${{ matrix.image }}${{ matrix.platform.dockerfile-suffix }}
          platforms: ${{ matrix.platform.arch }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SUBSTRATE_CLI_GIT_COMMIT_HASH=${{ github.sha }}
            RUSTFLAGS=${{ matrix.platform.rustflags }}

      - name: Scan ${{ matrix.image }} image
        uses: anchore/scan-action@v3
        id: imagescan
        with:
          image: ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}:${{ github.sha }}
          acs-report-enable: "true"
          fail-build: false

      - name: upload Anchore ${{ matrix.image }} image scan SARIF report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.imagescan.outputs.sarif }}
