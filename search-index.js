var searchIndex = JSON.parse('{\
"cross_domain_message_gossip":{"doc":"","t":"GDDDLLLLLLLLLLFMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ChainTxPoolSink","GossipWorker","GossipWorkerBuilder","Message","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cdm_gossip_peers_set_config","chain_id","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","encoded_data","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gossip_msg_sink","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","new","push_chain_tx_pool_sink","run","size_hint","start_cross_chain_message_listener","to_keyed_vec","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip"],"q":[[0,"cross_domain_message_gossip"]],"d":["Unbounded sender to send encoded ext to listeners.","Gossip worker to gossip incoming and outgoing messages to …","Gossip worker builder","A cross chain message with encoded data.","","","","","","","","","","Build gossip worker","Returns the network configuration for cross chain message …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get the gossip message sink","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Construct a gossip worker builder","Collect the chain tx pool sink that will be used by the …","Starts the Gossip message worker.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,16,16,16,5,13,16,5,13,16,5,0,16,16,16,16,16,5,13,16,5,13,16,5,13,16,16,16,16,5,13,16,5,5,13,13,16,16,5,5,13,13,16,16,5,16,5,13,16,5,13,16,5,13,16,5,13,16,5,13,16,5,13,16,5,13,16,5,5,13,16,0,16,5,13,16,5,13,16,16,16,16,5,13,16,5,13,16,5,13,16,5,13,16,5,13,16],"f":[0,0,0,0,[[],[[2,[1]]]],[[],[[4,[1,3]]]],[[],[[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,[0,[[7,[6]],8,9,10]],[12,[[11,[6]]]]],[[13,[6]]]],[[],14],0,[15,[[18,[16,17]]]],[[[19,[1]]],[[18,[17]]]],[[20,[19,[1]]],[[18,[17]]]],[[20,15],[[18,[17]]]],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[16,[0,[22,23]]]],0,[[16,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[26,[16]]]],[[],[[4,[1,3]]]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[[27,[3]]],[[27,[28,3]]]],[[[27,[3]]],[[27,[28,3]]]],[[[27,[3]]],[[27,[28,3]]]],[[[12,[3]]],[[12,[28,3]]]],[[[12,[3]]],[[12,[28,3]]]],[[[12,[3]]],[[12,[28,3]]]],[[[29,[3]]],[[29,[28,3]]]],[[[29,[3]]],[[29,[28,3]]]],[[[29,[3]]],[[29,[28,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[5,30,31]],[[[13,[6]]]],[16,21],[[30,[12,[32]],[12,[33]],[0,[34,35]]]],[[[19,[1]]],[[4,[1,3]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[4,[1,3]]]],[[],36],[[],36],[[],36],[[],37],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"GossipWorkerBuilder"],[8,"Block"],[8,"Network"],[8,"Send"],[8,"Sync"],[8,"Clone"],[8,"Syncing"],[3,"Arc"],[3,"GossipWorker"],[3,"NonDefaultSetConfig"],[8,"Input"],[3,"Message"],[3,"Error"],[4,"Result"],[15,"slice"],[15,"u32"],[15,"usize"],[8,"Output"],[8,"Sized"],[3,"Formatter"],[6,"Result"],[3,"TracingUnboundedSender"],[3,"Box"],[8,"Any"],[3,"Rc"],[4,"ChainId"],[6,"ChainTxPoolSink"],[8,"HeaderBackend"],[8,"TransactionPool"],[8,"Stream"],[8,"Unpin"],[3,"TypeId"],[15,"str"]]},\
"domain_block_builder":{"doc":"Substrate block builder","t":"DIIDNENLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLMMLLLLLLLLLLLLLLLLLLLL","n":["BlockBuilder","BlockBuilderApi","BlockBuilderProvider","BuiltBlock","No","RecordProof","Yes","__clone_box","apply_extrinsic","apply_extrinsic_before_version_6","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","check_inherents","clear","clone","clone_into","create_inherents","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","estimate_block_size","finalize_block","from","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","inherent_extrinsics","init","init","init","into","into","into","into_inner","is_clear","new","new_block","new_block_at","prepare_storage_changes_before","prepare_storage_changes_before_finalize_block","proof","storage_changes","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","yes"],"q":[[0,"domain_block_builder"]],"d":["Utility for building new (valid) blocks from a stream of …","The <code>BlockBuilder</code> api trait that provides the required …","Block builder provider","A block that was build by <code>BlockBuilder</code> plus some …","<code>No</code>, don’t record any proof.","Used as parameter to <code>BlockBuilderProvider</code> to express if …","<code>Yes</code>, record a proof.","","Apply the given extrinsic.","","The actual block that was build.","","","","","","","Consume the builder to build a valid <code>Block</code> containing all …","Check that the inherents are valid. The inherent data will …","","","","Create the inherents for the block.","","","","","","","","","","","","","","","Estimate the size of the block in the current state.","Finish the current block.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Generate inherent extrinsics. The inherent data will vary …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert into the inner values.","","Create a new instance of builder based on the given …","Create a new block, built on the head of the chain.","Create a new block, built on top of <code>parent</code>.","Returns the state before executing the extrinsic at given …","Returns the state before finalizing the block.","An optional proof that was recorded while building the …","The changes that need to be applied to the backend to get …","","","","","","","","","","","","","","","","","","","","Returns if <code>Self</code> == <code>Yes</code>."],"i":[0,0,0,0,15,0,15,15,27,27,11,11,10,15,11,10,15,10,27,15,15,15,10,15,11,10,15,11,10,15,11,10,15,15,15,15,15,10,27,11,10,15,15,11,10,15,11,10,15,27,11,10,15,11,10,15,11,15,10,28,28,10,10,11,11,15,11,10,15,11,10,15,11,10,15,11,10,15,11,10,15,11,10,15,15],"f":[0,0,0,0,0,0,0,[1],[[],[[3,[[3,[[3,[2]],4]],5]]]],[[],[[3,[[3,[[3,[6]],4]],5]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[7,[8,[7]],[9,[7]]]]],[[3,[[11,[7]],12]]]],[13,[[3,[14,5]]]],[[]],[15,15],[[]],[[[10,[7,[8,[7]],[9,[7]]]],13],[[3,[16,12]]]],[[],15],[17],[17],[17],[17],[17],[17],[17],[17],[17],[[15,15],18],[[],18],[[],18],[[],18],[[[10,[7,[8,[7]],[9,[7]]]],18],17],[[],[[3,[5]]]],[[]],[[]],[18,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,[[3,[[16,[19]],5]]]],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[[11,[7]]]],[[],18],[[[8,[7]],[20,[7]],15,21,[9,[7]],16],[[3,[[10,[7,[8,[7]],[9,[7]]]],12]]]],[21,[[22,[10]]]],[[23,21,[24,[15]]],[[22,[10]]]],[[[10,[7,[8,[7]],[9,[7]]]],17],[[3,[[25,[7]],12]]]],[[[10,[7,[8,[7]],[9,[7]]]]],[[3,[[25,[7]],12]]]],0,0,[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,18]],"c":[9],"p":[[3,"Private"],[4,"DispatchError"],[4,"Result"],[4,"TransactionValidityError"],[4,"ApiError"],[4,"DispatchError"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"Backend"],[3,"BlockBuilder"],[3,"BuiltBlock"],[4,"Error"],[3,"InherentData"],[3,"CheckInherentsResult"],[4,"RecordProof"],[3,"Vec"],[15,"usize"],[15,"bool"],[3,"Global"],[6,"NumberFor"],[3,"Digest"],[6,"Result"],[4,"BlockId"],[8,"Into"],[6,"StorageChanges"],[3,"TypeId"],[8,"BlockBuilderApi"],[8,"BlockBuilderProvider"]]},\
"domain_block_preprocessor":{"doc":"This crate provides a preprocessor for the domain block, …","t":"DDILLLLLLLLLLLLLMMLLLLLLLLLLALLLLLLLLMLLAAALLLLLLLLLLLKLLADLLLLLLLLLLLLLLLLLLLLLLLLLLLGGIIIIKKKKDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLF","n":["DomainBlockPreprocessor","PreprocessResult","ValidateReceipt","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","extrinsics","extrinsics_roots","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","inherents","init","init","into","into","into_mut","into_mut","into_ref","into_ref","invalid_bundles","new","preprocess_consensus_block","runtime_api","runtime_api_full","runtime_api_light","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","validate_receipt","vzip","vzip","xdm_verifier","CreateInherentDataProvider","__clone_box","borrow","borrow_mut","clone","clone_into","create_inherent_data_providers","deref","deref_mut","drop","fmt","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","new","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","ExtractSignerResult","ExtractedStateRoots","InherentExtrinsicConstructor","SetCodeConstructor","SignerExtractor","StateRootExtractor","construct_set_code_extrinsic","construct_timestamp_inherent_extrinsic","extract_signer","extract_state_roots","RuntimeApiFull","__clone_box","borrow","borrow_mut","clone","clone_into","construct_set_code_extrinsic","construct_timestamp_inherent_extrinsic","deref","deref_mut","drop","extract_signer","extract_state_roots","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","new","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","RuntimeApiLight","borrow","borrow_mut","construct_set_code_extrinsic","construct_timestamp_inherent_extrinsic","deref","deref_mut","drop","extract_signer","extract_state_roots","fetch_runtime_code","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","new","set_storage","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","is_valid_xdm"],"q":[[0,"domain_block_preprocessor"],[58,"domain_block_preprocessor::inherents"],[86,"domain_block_preprocessor::runtime_api"],[96,"domain_block_preprocessor::runtime_api_full"],[126,"domain_block_preprocessor::runtime_api_light"],[154,"domain_block_preprocessor::xdm_verifier"]],"d":["","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Provides functionality of adding inherent extrinsics to …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Trait to construct inherent extrinsics","Trait to wrap the new domain runtime as an extrinsic of …","Trait to extract the signer of the extrinsic.","Trait to extract XDM state roots from the Extrinsic.","","Returns Inherent timestamp extrinsic if the Runtime …","","Extracts the state roots from the extrinsic.","A runtime api with full backend.","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Lightweight runtime api based on the runtime code and …","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","Create a new instance of <code>RuntimeApiLight</code> with empty …","Set the storage.","","","","","","","Verifies if the xdm has the correct proof generated from …"],"i":[0,0,0,3,18,3,18,3,3,3,18,3,18,3,18,3,18,18,18,3,18,18,3,3,18,18,3,3,0,18,3,18,3,18,3,18,3,18,3,3,0,0,0,3,18,3,18,3,18,3,18,3,18,3,17,18,3,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,15,16,13,14,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0],"f":[0,0,0,[1],[[]],[[]],[[]],[[]],[[[3,[2,2]]],[[3,[2,2]]]],[[]],[4],[4],[4],[4],[4],[4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],0,[[5,[8,[[7,[6]]]],[8,[[0,[[9,[6]],[10,[6]],[7,[6]],11,12]]]],[0,[[13,[6]],[14,[6]],[15,[6]],[16,[6]]]],[17,[6,6]]],[[3,[6,6,[7,[6]],[0,[[9,[6]],[10,[6]],[7,[6]],11,12]],[0,[[13,[6]],[14,[6]],[15,[6]],[16,[6]]]],[17,[6,6]]]]]],[[[3,[6,6,[7,[6]],[0,[[9,[6]],[10,[6]],[7,[6]],11,12]],[0,[[13,[6]],[14,[6]],[15,[6]],[16,[6]]]],[17,[6,6]]]]],[[20,[[19,[[18,[6]]]]]]]],0,0,0,[[]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]],[[]],[[]],[[[25,[23,23,24]]],[[20,[26]]]],[[]],[[]],0,0,[1],[[]],[[]],[[[27,[2]]],[[27,[2]]]],[[]],[[[27,[[0,[[7,[6]],[9,[6]]]],6]]],[[30,[[29,[28]]]]]],[4],[4],[4],[[[27,[31,31]],32],33],[[]],[[]],[[]],[[]],[[]],[[],4],[[]],[[]],[[]],[8,27],[[]],[[],21],[[],21],[[],22],[[]],[[]],[[]],0,0,0,0,0,0,[[[35,[34]]],[[21,[[35,[34]],36]]]],[37,[[21,[19,36]]]],[35,[[21,[38,36]]]],[[],[[21,[39,36]]]],0,[1],[[]],[[]],[40,40],[[]],[[[40,[[7,[6]]]],[35,[34]]],[[21,[[35,[34]],36]]]],[[[40,[[7,[6]]]],37],[[21,[19,36]]]],[4],[4],[4],[[[40,[[7,[6]]]],35],[[21,[[38,[6]],36]]]],[[[40,[[7,[6]]]]],[[21,[[39,[6]],36]]]],[[]],[[]],[[]],[[]],[[]],[[],4],[[]],[[]],[[]],[8,40],[[]],[[],21],[[],21],[[],22],[[]],[[]],[[]],0,[[]],[[]],[[[42,[41]],[35,[34]]],[[21,[[35,[34]],36]]]],[[[42,[41]],37],[[21,[19,36]]]],[4],[4],[4],[[[42,[41]],35],[[21,[[38,[6]],36]]]],[[[42,[41]]],[[21,[[39,[6]],36]]]],[42,[[19,[[44,[[43,[34]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[],4],[[]],[[]],[[]],[[[8,[41]],[44,[[43,[34]]]]],[[42,[41]]]],[[[42,[41]],45]],[[],21],[[],21],[[],22],[[]],[[]],[[]],[[[8,[[0,[[9,[6]],[7,[6]]]]]],[14,[6]]],[[21,[46,47]]]]],"c":[],"p":[[3,"Private"],[8,"Clone"],[3,"DomainBlockPreprocessor"],[15,"usize"],[3,"DomainId"],[8,"Block"],[8,"ProvideRuntimeApi"],[3,"Arc"],[8,"HeaderBackend"],[8,"BlockBackend"],[8,"Send"],[8,"Sync"],[8,"SignerExtractor"],[8,"StateRootExtractor"],[8,"SetCodeConstructor"],[8,"InherentExtrinsicConstructor"],[8,"ValidateReceipt"],[3,"PreprocessResult"],[4,"Option"],[6,"Result"],[4,"Result"],[3,"TypeId"],[6,"NumberFor"],[6,"Balance"],[3,"ExecutionReceipt"],[4,"ReceiptValidity"],[3,"CreateInherentDataProvider"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"u8"],[3,"Vec"],[4,"ApiError"],[6,"Moment"],[6,"ExtractSignerResult"],[6,"ExtractedStateRoots"],[3,"RuntimeApiFull"],[8,"CodeExecutor"],[3,"RuntimeApiLight"],[15,"slice"],[4,"Cow"],[3,"Storage"],[15,"bool"],[4,"Error"]]},\
"domain_client_consensus_relay_chain":{"doc":"The relay-chain provided consensus algoritm for parachains.","t":"DDLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DomainBlockImport","Verifier","borrow","borrow","borrow_mut","borrow_mut","check_block","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_ref","from_ref","import_block","import_queue","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","verify","vzip","vzip"],"q":[[0,"domain_client_consensus_relay_chain"]],"d":["Domain specific block import. We use it to wrap Custom …","A verifier that just checks the inherents.","","","","","","Create a new instance.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Start an import queue for a Cumulus collator that does not …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Create a new instance.","","","","","","","","","","","","","","",""],"i":[0,0,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,0,4,9,4,9,4,9,4,9,4,9,4,4,9,4,9,4,9,4,9,4,9,4,9,9,4,9],"f":[0,0,[[]],[[]],[[]],[[]],[[[4,[[0,[[2,[1]],3]]]],[5,[1]]],[[8,[[7,[6]]]]]],[[],9],[10],[10],[10],[10],[10],[10],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[[0,[[2,[1]],3]]]],[11,[1]]],[[8,[[7,[6]]]]]],[[[0,[[2,[1]],3,12]],13,[15,[14]]],[[17,[[16,[1]]]]]],[[],10],[[],10],[[]],[[]],[[[7,[18]]],[[7,[19,18]]]],[[[7,[18]]],[[7,[19,18]]]],[[[20,[18]]],[[20,[19,18]]]],[[[20,[18]]],[[20,[19,18]]]],[[[21,[18]]],[[21,[19,18]]]],[[[21,[18]]],[[21,[19,18]]]],[[],4],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],24],[[],24],[[]],[[]],[[]],[[]],[[[9,[1]],[11,[1]]],[[8,[[7,[6]]]]]],[[]],[[]]],"c":[],"p":[[8,"Block"],[8,"BlockImport"],[8,"Send"],[3,"DomainBlockImport"],[3,"BlockCheckParams"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Verifier"],[15,"usize"],[3,"BlockImportParams"],[8,"Sync"],[8,"SpawnEssentialNamed"],[3,"Registry"],[4,"Option"],[3,"BasicQueue"],[6,"Result"],[3,"Global"],[8,"Any"],[3,"Arc"],[3,"Rc"],[4,"Result"],[3,"TypeId"],[15,"str"]]},\
"domain_client_message_relayer":{"doc":"","t":"NNNNNNENNGNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLAFF","n":["ApiError","ArithmeticError","BlockchainError","ConstructStorageProof","DomainNonConfirmedOnConsensusChain","DomainStateRootInvalid","Error","FailedToConstructExtrinsic","FetchAssignedMessages","GossipMessageSink","InvalidChainId","StoreRelayedBlockNumber","UnableToFetchDomainId","UnableToFetchRelayConfirmationDepth","UnableToSubmitCrossDomainMessage","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from","from","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","worker","relay_consensus_chain_messages","relay_domain_messages"],"q":[[0,"domain_client_message_relayer"],[44,"domain_client_message_relayer::worker"]],"d":["Api related error.","Arithmetic related error.","Blockchain related error.","Emits when storage proof construction fails.","Emits when the core domain block is not yet confirmed on …","Emits when the core domain block state root is invalid.","Relayer error types.","Emits when unsigned extrinsic construction fails.","Emits when failed to fetch assigned messages for a given …","Sink used to submit all the gossip messages.","Invalid ChainId","Emits when failed to store the processed block number.","Emits when unable to fetch domain_id.","Emits when unable to fetch relay confirmation depth.","Failed to submit a cross domain message","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Starts relaying consensus chain messages to other domains. …","Starts relaying domain messages to other chains. If the …"],"i":[2,2,2,2,2,2,0,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1],[1],[1],[[2,3],4],[5,2],[6,2],[7,2],[[]],[[]],[[]],[[]],[[]],[[],1],[[]],[[[9,[8]]],[[9,[10,8]]]],[[[11,[8]]],[[11,[10,8]]]],[[[12,[8]]],[[12,[10,8]]]],[[]],[[]],[[],13],[[],13],[[],14],[[],15],[[]],[[]],[[]],0,[[[11,[[0,[[17,[16]],[18,[16]],19,[20,[16]],[21,[16]]]]]],22,23]],[[[11,[[0,[[18,[16]],[21,[16]],[20,[16]]]]]],[11,[[0,[[17,[16]],[18,[16]],19,[20,[16]],[21,[16]]]]]],[0,[22,24]],23]]],"c":[],"p":[[15,"usize"],[4,"Error"],[3,"Formatter"],[6,"Result"],[4,"ApiError"],[4,"Error"],[4,"ArithmeticError"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"Arc"],[3,"Rc"],[4,"Result"],[3,"TypeId"],[15,"str"],[8,"Block"],[8,"BlockchainEvents"],[8,"HeaderBackend"],[8,"AuxStore"],[8,"ProofProvider"],[8,"ProvideRuntimeApi"],[8,"SyncOracle"],[6,"GossipMessageSink"],[8,"Send"]]},\
"domain_client_operator":{"doc":"Domain Operator","t":"DDDGDDDDLLLMMMMLLLLLLLLLLLLLLMMLLLLLLMMMMMMLLLLLLLLLLLLLLMAMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BootstrapResult","Bootstrapper","DomainBlockImportNotification","DomainImportNotifications","DomainParentChain","Operator","OperatorParams","OperatorStreams","__clone_box","__clone_box","__clone_box","_phantom","backend","block_import","block_importing_notification_stream","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle_sender","client","clone","clone","clone","clone_into","clone_into","clone_into","code_executor","consensus_block_hash","consensus_block_import_throttling_buffer_size","consensus_client","consensus_network_sync_oracle","consensus_offchain_tx_pool_factory","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","domain_block_hash","domain_bundle_producer","domain_confirmation_depth","domain_created_at","domain_created_at","domain_id","domain_instance_data","drop","drop","drop","drop","drop","drop","drop","fetch_domain_bootstrap_info","fmt","fraud_proof_generator","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","import_notification_stream","imported_block_notification_stream","imported_block_notification_stream","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_authority","keystore","load_execution_receipt","new","new","new","new_slot_notification_stream","operator_streams","to_owned","to_owned","to_owned","transaction_pool","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"domain_client_operator"]],"d":["","Domain instance bootstrapper","","","The parent chain of the domain.","Domain operator.","","Notification streams from the consensus chain driving the …","","","","","","","Notification about to be imported.","","","","","","","","","","","","","","","","","","","","","","","","","Pause the consensus block import when the consensus chain …","","","","","","","","","","","","","","","","","","","","","The consensus chain block number when the domain first …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get system domain block import notification stream.","","Consensus block import notification from the client.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Load the execution receipt for given consensus block hash.","","Create a new instance.","","New slot arrives.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,3,4,6,47,43,43,47,15,13,3,4,47,43,6,15,13,3,4,47,43,6,43,43,3,4,6,3,4,6,43,6,47,43,43,43,15,13,3,4,47,43,6,15,13,3,4,47,43,6,6,0,43,15,43,43,15,15,13,3,4,47,43,6,13,6,3,15,13,3,4,47,43,6,15,15,13,13,3,3,4,4,47,47,43,43,6,6,15,15,13,13,3,3,4,4,47,47,43,43,6,6,3,15,47,15,13,3,4,47,43,6,15,13,3,4,47,43,6,15,13,3,4,47,43,6,15,13,3,4,47,43,6,15,13,3,4,47,43,6,15,13,3,4,47,43,6,15,13,3,4,47,43,6,43,43,0,13,3,4,47,43,3,4,6,43,15,13,3,4,47,43,6,15,13,3,4,47,43,6,15,13,3,4,47,43,6,15,13,3,4,47,43,6,15,13,3,4,47,43,6,15,13,3,4,47,43,6,15,13,3,4,47,43,6],"f":[0,0,0,0,0,0,0,0,[1],[1],[1],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[3,[2,2]]],[[3,[2,2]]]],[4,4],[[[6,[[0,[5,2]],[0,[5,2]]]]],[[6,[[0,[5,2]],[0,[5,2]]]]]],[[]],[[]],[[]],0,0,0,0,0,0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,0,0,0,0,0,0,[7],[7],[7],[7],[7],[7],[7],[[[13,[2,2,[0,[[8,[2]],[9,[2]],[10,[2]],11,12]]]],14],[[18,[[15,[2]],[17,[16]]]]]],[[[6,[[0,[19,2]],[0,[19,2]]]],20],21],[[[3,[2,2,[0,[[8,[2]],[22,[2]],23,[9,[2]],[24,[2]],[26,[2,[0,[[25,[2]],11,12]]]]]],[0,[[8,[2]],[27,[2]],[22,[2]],[9,[2]],[10,[2]],11,12]],28,[0,[[25,[2]],11,12]],29,[0,[11,12]]]]],[[0,[2,2,[0,[[8,[2]],[22,[2]],23,[9,[2]],[24,[2]],[26,[2,[0,[[25,[2]],11,12]]]]]],[0,[[8,[2]],[27,[2]],[22,[2]],[9,[2]],[10,[2]],11,12]],[0,[[25,[2]],11,12]],29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2,2,[0,[[8,[2]],[22,[2]],23,[9,[2]],[24,[2]],[26,[2,[0,[[25,[2]],11,12]]]]]],[0,[[8,[2]],[27,[2]],[22,[2]],[9,[2]],[10,[2]],11,12]],28,[0,[[25,[2]],11,12]],29,[0,[11,12]]]]],[[30,[2,2]]]],0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[17,[31]]],[[17,[32,31]]]],[[[17,[31]]],[[17,[32,31]]]],[[[17,[31]]],[[17,[32,31]]]],[[[17,[31]]],[[17,[32,31]]]],[[[17,[31]]],[[17,[32,31]]]],[[[17,[31]]],[[17,[32,31]]]],[[[17,[31]]],[[17,[32,31]]]],[[[33,[31]]],[[33,[32,31]]]],[[[33,[31]]],[[33,[32,31]]]],[[[33,[31]]],[[33,[32,31]]]],[[[33,[31]]],[[33,[32,31]]]],[[[33,[31]]],[[33,[32,31]]]],[[[33,[31]]],[[33,[32,31]]]],[[[33,[31]]],[[33,[32,31]]]],[[[34,[31]]],[[34,[32,31]]]],[[[34,[31]]],[[34,[32,31]]]],[[[34,[31]]],[[34,[32,31]]]],[[[34,[31]]],[[34,[32,31]]]],[[[34,[31]]],[[34,[32,31]]]],[[[34,[31]]],[[34,[32,31]]]],[[[34,[31]]],[[34,[32,31]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[23,[[39,[[38,[[37,[[35,[2]],[35,[2]],36]]]]]]]],[[[33,[[0,[[8,[2]],[9,[2]],[10,[2]],11,12]]]]],[[13,[2,2,[0,[[8,[2]],[9,[2]],[10,[2]],11,12]]]]]],[[[17,[40]],[41,[2]],[43,[2,2,[0,[[8,[2]],[22,[2]],23,[9,[2]],[24,[2]],[26,[2,[0,[[25,[2]],11,12]]]]]],[0,[[8,[2]],[27,[2]],[22,[2]],[9,[2]],[10,[2]],11,12]],28,[0,[[25,[2]],11,12]],29,[0,[42,11]],[0,[42,11]],[0,[42,11]],[0,[11,12]]]]],[[18,[[3,[2,2,[0,[[8,[2]],[22,[2]],23,[9,[2]],[24,[2]],[26,[2,[0,[[25,[2]],11,12]]]]]],[0,[[8,[2]],[27,[2]],[22,[2]],[9,[2]],[10,[2]],11,12]],28,[0,[[25,[2]],11,12]],29,[0,[11,12]]]],44]]]],[[14,33],4],0,0,[[]],[[]],[[]],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Block"],[3,"Operator"],[3,"DomainParentChain"],[8,"Clone"],[3,"DomainBlockImportNotification"],[15,"usize"],[8,"HeaderBackend"],[8,"ProvideRuntimeApi"],[8,"BlockchainEvents"],[8,"Send"],[8,"Sync"],[3,"Bootstrapper"],[3,"DomainId"],[3,"BootstrapResult"],[8,"Error"],[3,"Box"],[4,"Result"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"BlockBackend"],[8,"AuxStore"],[8,"ProofProvider"],[8,"Backend"],[8,"Finalizer"],[8,"HeaderMetadata"],[8,"TransactionPool"],[8,"CodeExecutor"],[6,"DomainImportNotifications"],[3,"Global"],[8,"Any"],[3,"Arc"],[3,"Rc"],[6,"NumberFor"],[6,"Balance"],[3,"ExecutionReceipt"],[4,"Option"],[6,"Result"],[8,"SpawnEssentialNamed"],[8,"SelectChain"],[8,"Stream"],[3,"OperatorParams"],[4,"Error"],[3,"TypeId"],[15,"str"],[3,"OperatorStreams"]]},\
"domain_client_subnet_gossip":{"doc":"This crate is intended to provide the feature of gossiping …","t":"ENNQDEIDNNLLLLLLLLLLLMLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLKMLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Action","Bundle","Empty","Error","ExecutorGossipParams","GossipMessage","GossipMessageHandler","GossipValidator","RebroadcastBundle","RebroadcastExecutionReceipt","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle_receiver","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","domain_subnet_gossip_peers_set_config","drop","drop","drop","drop","encode_to","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","message_allowed","message_expired","network","new","new_peer","on_bundle","operator","peer_disconnected","size_hint","start_gossip_worker","sync","to_keyed_vec","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate","vzip","vzip","vzip","vzip"],"q":[[0,"domain_client_subnet_gossip"]],"d":["What to do with the successfully verified gossip message.","","The message does not have to be re-gossiped.","Error type.","Parameters to run the executor gossip service.","Operator gossip message type.","Handler for the messages received from the domain subnet.","Validator for the gossip messages.","Gossip the bundle message to other peers.","Gossip the execution exceipt message to other peers.","","","","","","","","","","","","Stream of transaction bundle produced locally.","","","","","","","","","","","","","Returns the configuration value to use in …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Produce a closure for filtering egress messages.","Produce a closure for validating messages on a given topic.","Substrate network service.","","","Validates and applies when a transaction bundle was …","Operator instance.","","","Starts the executor gossip worker.","Syncing service an event stream for peers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,7,19,27,0,0,0,0,19,19,7,7,7,30,38,7,19,30,38,7,19,38,7,7,7,7,30,38,7,19,30,38,7,19,0,30,38,7,19,7,7,19,30,38,7,7,19,30,30,38,38,7,7,19,19,30,30,38,38,7,7,19,19,7,30,38,7,19,30,38,7,19,30,38,7,19,30,38,7,19,30,38,7,19,30,38,7,19,30,38,7,19,30,30,38,30,30,27,38,30,7,0,38,7,30,38,7,19,30,38,7,19,7,7,7,30,38,7,19,30,38,7,19,30,38,7,19,30,38,7,19,30,30,38,7,19],"f":[0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],[[],[[4,[1,3]]]],[[],[[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[5,[[9,[[7,[6,6]],8]]]],[[[10,[1]]],[[9,[8]]]],[[11,[10,[1]]],[[9,[8]]]],[[11,5],[[9,[8]]]],[12],[12],[12],[12],[12],[12],[12],[12],[[],13],[12],[12],[12],[12],[[[7,[6,6]],[0,[14,15]]]],[[[7,[[0,[16,6]],[0,[16,6]]]],17],18],[[19,17],18],[[]],[[]],[[[22,[[20,[6]],[20,[6]],21]]],[[7,[6,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[1,3]]]],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[[23,[3]]],[[23,[24,3]]]],[[[23,[3]]],[[23,[24,3]]]],[[[23,[3]]],[[23,[24,3]]]],[[[23,[3]]],[[23,[24,3]]]],[[[25,[3]]],[[25,[24,3]]]],[[[25,[3]]],[[25,[24,3]]]],[[[25,[3]]],[[25,[24,3]]]],[[[25,[3]]],[[25,[24,3]]]],[[[26,[3]]],[[26,[24,3]]]],[[[26,[3]]],[[26,[24,3]]]],[[[26,[3]]],[[26,[24,3]]]],[[[26,[3]]],[[26,[24,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[6,6,[0,[[27,[6,6]],28,29]]]]],[[23,[31]]]],[[[30,[6,6,[0,[[27,[6,6]],28,29]]]]],[[23,[31]]]],0,[[[27,[6,6]]],[[30,[6,6,[27,[6,6]]]]]],[[[30,[6,6,[0,[[27,[6,6]],28,29]]]],32,33,34]],[[[22,[20,20,21]]],[[9,[19]]]],0,[[[30,[6,6,[0,[[27,[6,6]],28,29]]]],32,33]],[[[7,[6,6]]],12],[[[38,[6,6,[0,[[35,[6]],28,29,36]],[37,[6]],[0,[[27,[6,6]],28,29]]]]]],0,[[[10,[1]]],[[4,[1,3]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[4,[1,3]]]],[[],39],[[],39],[[],39],[[],39],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[6,6,[0,[[27,[6,6]],28,29]]]],32,33,[10,[1]]],41],[[]],[[]],[[]],[[]]],"c":[],"p":[[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[8,"Input"],[8,"Block"],[4,"GossipMessage"],[3,"Error"],[4,"Result"],[15,"slice"],[15,"u32"],[15,"usize"],[3,"NonDefaultSetConfig"],[8,"Output"],[8,"Sized"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Action"],[6,"NumberFor"],[6,"Balance"],[3,"Bundle"],[3,"Box"],[8,"Any"],[3,"Arc"],[3,"Rc"],[8,"GossipMessageHandler"],[8,"Send"],[8,"Sync"],[3,"GossipValidator"],[8,"FnMut"],[8,"ValidatorContext"],[3,"PeerId"],[4,"ObservedRole"],[8,"Network"],[8,"Clone"],[8,"Syncing"],[3,"ExecutorGossipParams"],[3,"TypeId"],[15,"str"],[4,"ValidationResult"]]},\
"domain_eth_service":{"doc":"","t":"DDLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAMLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DefaultEthConfig","EthConfiguration","__clone_box","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","enable_dev_signer","eth_log_block_cache","eth_statuses_cache","execute_gas_limit_multiplier","fee_history_limit","fmt","from","from","from_arg_matches","from_arg_matches_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","group_id","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","max_past_logs","provider","target_gas_price","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","EthProvider","block_import","borrow","borrow_mut","deps","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","new","rpc_builder","rpc_id","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","with_configuration"],"q":[[0,"domain_eth_service"],[72,"domain_eth_service::provider"]],"d":["","The ethereum-compatibility configuration used to run a …","","","","","","","","","","","","","","","","","","","Size in bytes of the LRU cache for block data.","Size in bytes of the LRU cache for transactions statuses …","Maximum allowed gas limit will be …","Maximum fee history cache size.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Maximum number of logs in a query.","","The dynamic-fee pallet target gas price set by block author","","","","","","","","","","","","","","","","","","Ethereum specific providers.","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,3,3,3,51,3,51,3,3,3,3,3,51,3,51,3,51,3,3,3,3,3,3,3,51,3,3,3,51,51,3,3,51,51,3,3,3,51,3,51,3,51,3,51,3,51,3,51,3,51,3,3,0,3,3,51,3,51,3,51,3,51,3,51,3,51,3,3,3,51,3,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19],"f":[0,0,[1],[2,2],[2,2],[[]],[[]],[[]],[[]],[3,3],[[]],[[],2],[[],2],[4],[4],[4],[4],[4],[4],0,0,0,0,0,[[3,5],6],[[]],[[]],[7,[[9,[3,8]]]],[7,[[9,[3,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[10]]]],[[],4],[[],4],[[]],[[]],[[[13,[12]]],[[13,[14,12]]]],[[[13,[12]]],[[13,[14,12]]]],[[[15,[12]]],[[15,[14,12]]]],[[[15,[12]]],[[15,[14,12]]]],[[[16,[12]]],[[16,[14,12]]]],[[[16,[12]]],[[16,[14,12]]]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[],9],[[],9],[[],9],[[],9],[[],17],[[],17],[[],18],[[],18],[[]],[[]],[[]],[[]],[[3,7],[[9,[8]]]],[[3,7],[[9,[8]]]],[[]],[[]],0,[[19,[15,[[25,[20,[0,[[21,[20,[25,[20,[0,[[21,[20,[25,[20,[0,[21,22,23]],24]]]],22,23]],24]]]],22,23]],24]]]]]],[[]],[[]],[[[19,[[0,[26,27,28,22,23]],[38,[20,[0,[[29,[20]],[30,[20]],[32,[20,[31,[20]]]],[33,[20]],[34,[20]],[35,[20]],[36,[20]],37,22,23]]]]]],[42,[20,[0,[[29,[20]],[30,[20]],[32,[20,[31,[20]]]],[33,[20]],[34,[20]],[35,[20]],[36,[20]],37,22,23]],[0,[39,23,22]],40,[31,[20]],[0,[[41,[20]],22,27]]]]],[[9,[43]]]],[4],[4],[4],[[]],[[]],[[]],[[]],[[]],[[],4],[[]],[[[13,[12]]],[[13,[14,12]]]],[[[15,[12]]],[[15,[14,12]]]],[[[16,[12]]],[[16,[14,12]]]],[[]],[[]],[[[11,[44]],45],19],[[[19,[[0,[26,27,28,22,23]],[38,[20,[0,[[29,[20]],[30,[20]],[32,[20,[31,[20]]]],[33,[20]],[34,[20]],[35,[20]],[36,[20]],37,22,23]]]]]],46,[0,[47,27]]],[[9,[48,[13,[49]]]]]],[[[19,[[0,[26,27,28,22,23]],[38,[20,[0,[[29,[20]],[30,[20]],[32,[20,[31,[20]]]],[33,[20]],[34,[20]],[35,[20]],[36,[20]],37,22,23]]]]]]],[[11,[[13,[50]]]]]],[[],9],[[],9],[[],17],[[],18],[[]],[[]],[[]],[[[11,[44]],3],19]],"c":[],"p":[[3,"Private"],[3,"Command"],[3,"EthConfiguration"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[15,"str"],[3,"EthProvider"],[8,"Block"],[8,"ConstructRuntimeApi"],[8,"Send"],[8,"Sync"],[8,"NativeExecutionDispatch"],[6,"FullClient"],[8,"ConvertTransaction"],[8,"Clone"],[8,"Default"],[8,"ProvideRuntimeApi"],[8,"BlockchainEvents"],[8,"Backend"],[8,"StorageProvider"],[8,"HeaderBackend"],[8,"CallApiAt"],[8,"HeaderMetadata"],[8,"BlockBackend"],[8,"AuxStore"],[8,"EthConfig"],[8,"TransactionPool"],[8,"ChainApi"],[8,"CreateInherentDataProviders"],[3,"FullDeps"],[4,"Error"],[3,"BasePath"],[8,"Iterator"],[6,"SubscriptionTaskExecutor"],[8,"SpawnEssentialNamed"],[3,"RpcModule"],[8,"Error"],[8,"IdProvider"],[3,"DefaultEthConfig"]]},\
"domain_pallet_executive":{"doc":"Domain Executive Module","t":"EGGIEDGGDQQNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALNLLLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFDLLLLLLLLLLLLLLLLLLLL","n":["Call","CallOf","CheckedOf","Config","Event","Executive","Module","OriginOf","Pallet","RuntimeCall","RuntimeEvent","Sudid","__clone_box","__clone_box","__clone_box","apply_extrinsic","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_block","execute_block","execute_on_runtime_upgrade","finalize_block","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","infos","init","init","init","init","initialize_block","integrity_test","intermediate_roots","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","module_name","name","new_call_variant_sudo_unchecked_weight_unsigned","offchain_worker","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","size_hint","size_hint","storage_info","storage_root","storage_types","sudo_unchecked_weight_unsigned","sudo_unchecked_weight_unsigned","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_transaction","vzip","vzip","vzip","vzip","whitelisted_storage_keys","call","weight","sudo_result","sudo_unchecked_weight_unsigned","IntermediateRoots","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"domain_pallet_executive"],[191,"domain_pallet_executive::Call"],[193,"domain_pallet_executive::Event"],[194,"domain_pallet_executive::dispatchables"],[195,"domain_pallet_executive::storage_types"]],"d":["Contains a variant per dispatchable extrinsic that this …","","","Configuration trait of this pallet.","The <code>Event</code> enum of this pallet","Same semantics with <code>frame_executive::Executive</code>.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","The <code>Pallet</code> struct, the main type that implements traits …","","","A sudo just took place.","","","","Wrapped <code>frame_executive::Executive::apply_extrinsic</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","Wrapped <code>frame_executive::Executive::execute_block</code>.","","Wrapped …","Wrapped <code>frame_executive::Executive::finalize_block</code>.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","Wrapped <code>frame_executive::Executive::initialize_block</code>.","","An auto-generated getter for <code>IntermediateRoots</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create a call with the variant …","Wrapped <code>frame_executive::Executive::offchain_worker</code>.","","","","","","","","","","","","Returns the latest storage root.","Auto-generated docs-only module listing all (public and …","Unsigned version of <code>frame_sudo::sudo_unchecked_weight</code>.","See <code>Pallet::sudo_unchecked_weight_unsigned</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapped <code>frame_executive::Executive::validate_transaction</code>.","","","","","","","","","Unsigned version of <code>frame_sudo::sudo_unchecked_weight</code>.","Intermediate storage roots collected during the block …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,7,9,10,43,9,10,9,10,9,10,43,7,9,10,43,7,9,10,7,9,10,7,9,10,7,7,7,9,10,9,10,9,10,9,10,43,7,9,10,43,7,9,10,10,0,43,7,9,10,9,10,7,9,10,7,7,7,9,9,9,10,10,10,43,43,43,43,7,9,10,43,7,9,10,43,43,7,7,9,9,10,10,43,43,7,7,9,9,10,10,10,10,10,10,10,9,10,7,7,43,7,9,10,43,7,7,43,7,9,10,43,7,9,10,43,7,9,10,7,7,10,43,7,7,7,7,7,7,7,7,9,10,7,43,0,7,10,9,10,7,9,10,43,7,9,10,43,7,9,10,0,0,0,9,10,9,10,9,10,43,7,9,10,9,10,43,7,9,10,43,7,9,10,43,43,7,9,10,7,44,44,45,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],2],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[[[9,[8]]],[[9,[8]]]],[[[10,[8]]],[[10,[8]]]],[[]],[[]],[[]],[[],11],[[],12],[[]],[13,[[15,[[9,[8]],14]]]],[13,[[15,[[10,[8]],14]]]],[[[16,[3]]],[[15,[14]]]],[[[16,[3]]],[[15,[14]]]],[[17,[16,[3]]],[[15,[14]]]],[[17,[16,[3]]],[[15,[14]]]],[[17,13],[[15,[14]]]],[[17,13],[[15,[14]]]],[11],[11],[11],[11],[11],[11],[11],[11],[[[10,[8]]],18],0,[11],[11],[11],[11],[[[9,[8]],[0,[19,20]]]],[[[10,[8]],[0,[19,20]]]],[[7,7],21],[[[9,[8]],[9,[8]]],21],[[[10,[8]],[10,[8]]],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[22],[22],[[],23],[[],[[26,[[0,[24,[25,[22]]]]]]]],[[7,27],28],[[[9,[8]],27],28],[[[10,[8]],27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[8]]],3],[[],[[16,[3]]]],[[[10,[8]]],29],[[],[[16,[29]]]],[[[10,[8]]],30],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],11],[[],[[6,[31]]]],[[],11],[[],11],[[],11],[[],11],[[[26,[[0,[24,[25,[22]]]]]]]],[[]],[[],[[6,[[4,[3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[32,23],[[10,[8]]]],[[[26,[[0,[24,[25,[22]]]]]]]],[[[33,[8]]]],[[],34],[[[33,[8]]]],[[]],[[[33,[8]],23],23],[[[33,[8]]],23],[[[33,[8]]],23],[[],23],[[[9,[8]]],11],[[[10,[8]]],11],[[],[[6,[35]]]],[[],[[6,[3]]]],0,[[[36,[8]],32,23],37],0,[[[16,[3]]],[[6,[3,5]]]],[[[16,[3]]],[[6,[3,5]]]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,41],[[]],[[]],[[]],[[]],[[],[[6,[42]]]],0,0,0,[[32,23]],0,[[]],[[]],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[],11],[[]],[[]],[[]],[[],15],[[],15],[[],38],[[]],[[]],[[]]],"c":[6],"p":[[3,"Private"],[6,"ApplyExtrinsicResult"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[8,"Config"],[4,"Event"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"slice"],[15,"u32"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[15,"bool"],[8,"Block"],[3,"Weight"],[8,"Config"],[8,"EnsureInherentsAreFirst"],[6,"HeaderFor"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[3,"Box"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"StorageInfo"],[6,"OriginFor"],[6,"DispatchResult"],[3,"TypeId"],[3,"Type"],[4,"TransactionSource"],[6,"TransactionValidity"],[3,"TrackedStorageKey"],[3,"Executive"],[13,"sudo_unchecked_weight_unsigned"],[13,"Sudid"],[3,"IntermediateRoots"]]},\
"domain_runtime_primitives":{"doc":"Common primitives for subspace domain runtime.","t":"GNNDGGGEINGINNEGNRGIIELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMGGGGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AccountId","AccountId20","AccountId32","AccountIdConverter","Address","Balance","BlockNumber","CheckTxValidityError","DomainCoreApi","FailedToDecodeAccountId","Hash","InherentExtrinsicApi","InvalidTransaction","Lookup","MultiAccountId","Nonce","Raw","SLOT_DURATION","Signature","Signer","TryConvertBack","VerifyTxValidityError","__clone_box","apply_extrinsic_with_post_state_root","block_rewards","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_transaction_validity","clone","clone_into","construct_inherent_timestamp_extrinsic","construct_set_code_extrinsic","convert","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_signer","extrinsic_weight","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","init","init","initialize_block_with_post_state_root","intermediate_roots","into","into","into","into","is_within_tx_range","opaque","signer","size_hint","size_hint","size_hint","storage_keys_for_verifying_transaction_validity","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","try_convert_back","try_convert_back","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","error","storage_keys","AccountId","Block","BlockId","Header","UncheckedExtrinsic","__clone_box","borrow","borrow_mut","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from","from_bytes","from_mut","from_ref","init","into","is_clear","serialize","size_hint","to_keyed_vec","to_owned","try_from","try_into","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","vzip"],"q":[[0,"domain_runtime_primitives"],[146,"domain_runtime_primitives::CheckTxValidityError"],[148,"domain_runtime_primitives::opaque"]],"d":["Some way of identifying an account on the chain. We …","20 byte account Id. Ex: Ethereum","32 byte account Id.","An AccountId32 to MultiAccount converter.","The address format for describing accounts.","Balance of an account.","An index to a block.","","Base API that every domain runtime must implement.","Failed to decode the opaque account id into the runtime …","A hash of some data used by the chain.","Api that construct inherent extrinsics.","Transaction is invalid.","Can not find the sender from address.","MultiAccountId used by all the domains to describe their …","Index of a transaction in the chain.","Some raw bytes","Slot duration that is same as consensus chain runtime.","Alias to 512-bit hash when used in the context of a …","Extracts the signer from an unchecked extrinsic.","Extensible conversion trait. Generic over both source and …","","","Returns the storage root after applying the extrinsic.","The accumulated transaction fee of all transactions …","","","","","","","","","Checks the validity of extrinsic in a bundle.","","","Api to construct inherent timestamp extrinsic from given …","Returns an encoded extrinsic aiming to upgrade the runtime …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts the optional signer per extrinsic.","Return the extrinsic weight","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Returns the storage root after initializing the block.","Returns the intermediate storage roots in an encoded form.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Opaque types. These are used by the CLI to instantiate …","Returns the AccountId of signer.","","","","Returns the storage keys of states accessed in the API …","","","","","Make conversion back.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Concrete transaction validity error type.","Storage keys of state accessed in the validation.","Opaque account identifier type.","Opaque block type.","Opaque block identifier type.","Opaque block header type.","Simple blob to hold an extrinsic without committing to its …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,8,8,0,0,0,0,0,0,14,0,0,7,7,0,0,8,0,0,0,0,0,8,40,40,41,8,7,14,41,8,7,14,40,8,8,42,40,41,8,7,14,8,7,14,8,7,14,8,7,14,41,8,7,14,41,8,7,14,41,8,7,14,8,7,14,8,7,14,8,8,8,7,7,7,14,14,14,40,40,8,7,14,41,8,7,7,14,41,8,7,14,41,8,7,14,41,8,7,14,40,40,41,8,7,14,40,0,43,8,7,14,40,8,7,14,8,44,41,41,8,7,14,41,8,7,14,41,8,7,14,8,7,14,41,8,7,14,41,8,7,14,41,8,7,14,45,45,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],[[5,[[3,[2]],4]]]],[[],[[5,[6,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[[5,[7]],4]]]],[8,8],[[]],[9,[[5,[10,4]]]],[[[3,[2]]],[[5,[[3,[2]],4]]]],[11,8],[12,[[5,[8,13]]]],[12,[[5,[7,13]]]],[12,[[5,[14,13]]]],[[[15,[2]]],[[5,[13]]]],[[[15,[2]]],[[5,[13]]]],[[[15,[2]]],[[5,[13]]]],[[16,[15,[2]]],[[5,[13]]]],[[16,[15,[2]]],[[5,[13]]]],[[16,[15,[2]]],[[5,[13]]]],[[16,12],[[5,[13]]]],[[16,12],[[5,[13]]]],[[16,12],[[5,[13]]]],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[[8,[0,[18,19]]]],[[7,[0,[18,19]]]],[[14,[0,[18,19]]]],[[8,8],20],[[7,7],20],[[14,14],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[3,[[5,[3,4]]]],[[],[[5,[21,4]]]],[[8,22],23],[[7,22],23],[[14,22],23],[[]],[[]],[[]],[24,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],[[5,[[3,[2]],4]]]],[[],[[5,[[3,[[25,[2]]]],4]]]],[[]],[[]],[[]],[[]],[[26,26],[[5,[20,4]]]],0,[[],10],[8,17],[7,17],[14,17],[27,[[5,[[5,[[3,[[3,[2]]]],14]],4]]]],[[[15,[2]]],[[3,[2,28]]]],[[[15,[2]]],[[3,[2,28]]]],[[[15,[2]]],[[3,[2,28]]]],[[]],[[],10],[8,[[10,[11]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],29],[[],29],[[],29],[[],29],[[],30],[[],30],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[31,31],[[]],[12,[[5,[31,13]]]],[[[15,[2]]],[[5,[13]]]],[[16,[15,[2]]],[[5,[13]]]],[[16,12],[[5,[13]]]],[[],31],[17],[17],[32,[[5,[31]]]],[17],[31,[[3,[2,28]]]],[[31,[0,[18,19]]]],[[31,31],20],[[],20],[[],20],[[],20],[[31,22],[[5,[33]]]],[[[36,[34,34,34,35]]],31],[[]],[[[15,[2]]],[[5,[31,13]]]],[[]],[[]],[[],17],[[]],[[],20],[[31,37],5],[31,17],[[[15,[2]]],[[3,[2,28]]]],[[]],[[],5],[[],5],[[],29],[[],[[30,[38]]]],[[]],[[]],[[31,39]],[[]]],"c":[],"p":[[3,"Private"],[15,"u8"],[3,"Vec"],[4,"ApiError"],[4,"Result"],[6,"Balance"],[4,"CheckTxValidityError"],[4,"MultiAccountId"],[6,"Moment"],[4,"Option"],[6,"AccountId"],[8,"Input"],[3,"Error"],[4,"VerifyTxValidityError"],[15,"slice"],[15,"u32"],[15,"usize"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Weight"],[3,"Formatter"],[6,"Result"],[3,"LookupError"],[15,"array"],[3,"U256"],[6,"AccountId"],[3,"Global"],[3,"TypeId"],[3,"Type"],[3,"UncheckedExtrinsic"],[8,"Deserializer"],[3,"Error"],[8,"Encode"],[8,"SignedExtension"],[3,"UncheckedExtrinsic"],[8,"Serializer"],[4,"MetaForm"],[8,"FnOnce"],[8,"DomainCoreApi"],[3,"AccountIdConverter"],[8,"InherentExtrinsicApi"],[8,"Signer"],[8,"TryConvertBack"],[13,"InvalidTransaction"]]},\
"domain_service":{"doc":"Service and ServiceFactory implementation. Specialized …","t":"GDGGGDMLLLLFMMMMMLLLLMMMMLLLLLLLLLLLLMLLLLLLLLLLLLLMMFMMMAAMMMMLLLLLLLLLLLLLLQIDQILKLLLLLKLLLLLLLLLLLLLLLLKLKLLLLLLLLLDLMLLMMLLFMMMLLLLLLLLMLLLLLLLMMMMMMLLLLLLLL","n":["DomainOperator","DomainParams","FullBackend","FullClient","FullPool","NewFull","backend","borrow","borrow","borrow_mut","borrow_mut","build_network","client","code_executor","consensus_client","consensus_network_sync_oracle","consensus_offchain_tx_pool_factory","deref","deref","deref_mut","deref_mut","domain_config","domain_created_at","domain_id","domain_message_receiver","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","gossip_message_sink","init","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","network_service","network_starter","new_full","operator","operator_streams","provider","providers","rpc","rpc_handlers","select_chain","sync_service","task_manager","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","BI","BlockImportProvider","DefaultProvider","Deps","RpcProvider","__clone_box","block_import","block_import","borrow","borrow_mut","clone","clone_into","deps","deps","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","rpc_builder","rpc_builder","rpc_id","rpc_id","to_owned","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","FullDeps","__clone_box","backend","borrow","borrow_mut","chain_spec","client","clone","clone_into","create_full","create_inherent_data_provider","database_source","deny_unsafe","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","graph","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_authority","network","pool","prometheus_registry","sync","task_spawner","to_owned","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"domain_service"],[77,"domain_service::providers"],[118,"domain_service::rpc"]],"d":["","","","Domain full client.","","Domain full node along with some other components.","Backend.","","","","","Build the network service, the network status sinks and an …","Full client.","Code executor.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Network service.","Network starter.","Builds service for a domain full node.","Operator.","","","","A collection of node-specific RPC methods. Substrate …","RPCHandlers to make RPC queries.","","Sync service.","Task manager.","","","","","","","","","","","","","","","","","","","Provides adding custom ID to the RPC module.","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Full RPC dependencies.","","The chain backend.","","","A copy of the chain spec.","The client instance to use.","","","Instantiate all RPC extensions.","Create inherent data provider","Database source","Whether to deny unsafe calls","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Graph pool instance.","","Calls <code>U::from(self)</code>.","","","","","","Is node running as authority.","Network service","Transaction pool instance.","Prometheus registry","Chain syncing service","Task Spawner.","","","","","","","",""],"i":[0,0,0,0,0,0,45,45,43,45,43,0,45,45,43,43,43,45,43,45,43,43,43,43,43,45,43,45,43,45,45,43,43,45,45,43,43,43,45,43,45,43,45,43,43,45,43,45,43,45,43,45,45,0,45,43,43,0,0,45,43,45,45,45,43,45,43,45,43,45,43,45,43,45,43,45,43,42,0,0,41,0,50,42,50,50,50,50,50,41,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,41,50,41,50,50,50,50,50,50,50,50,50,0,51,51,51,51,51,51,51,51,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[12,[1,2,[3,[1]],[0,[[4,[1]],[5,[1]],[6,[1]],[7,[1]],[8,[1]],[9,[1]],[10,[1]],[11,[1]]]]]]],[[14,[13]]]],0,0,0,0,0,[15],[15],[15],[15],0,0,0,0,[15],[15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],15],[[],15],[[]],[[]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[19,[16]]],[[19,[18,16]]]],[[[20,[16]]],[[20,[18,16]]]],[[[20,[16]]],[[20,[18,16]]]],[[]],[[]],[[]],[[]],0,0,[[[43,[1,[0,[[10,[1]],[5,[1]],[7,[1]],[9,[1]],[4,[1]],[11,[1]],21,22]],[23,[1]],[0,[24,21]],[0,[24,21]],[0,[24,21]],[0,[[41,[25,[26,[25,[0,[[27,[25,[26,[25,[0,[[27,[25,26]],21,22]],28]]]],21,22]],28]],[29,[1,[0,[[10,[1]],[5,[1]],[7,[1]],[9,[1]],[4,[1]],[11,[1]],21,22]],[0,[[27,[25,[26,[25,[0,[[27,[25,26]],21,22]],28]]]],21,22]],28]],[31,[25,[26,[25,[0,[[27,[25,[26,[25,[0,[27,21,22]],28]]]],21,22]],28]],[0,[25,1,[26,[25,[0,[[27,[25,[26,[25]]]],21,22]],28]],[0,[[10,[1]],[5,[1]],[7,[1]],[9,[1]],[4,[1]],[11,[1]],21,22]],[30,[[26,[25,[0,[[27,[25,26]],21,22]],28]]]]]]]],[32,[25]],[0,[33,34,35,36,37,38,39,22,21]],[40,[[0,[[10,[1]],[5,[1]],[7,[1]],[9,[1]],[4,[1]],[11,[1]],21,22]],1]]]],[42,[25,[26,[25,[0,[[27,[25,[26,[25,[0,[[27,[25,26]],21,22]],28]]]],21,22]],28]]]]]]]]],[[46,[[45,[[19,[[26,[25,[0,[[27,[25,[26,[25,[0,[[27,[25,26]],21,22]],28]]]],21,22]],28]]]],[44,[28]],1,[0,[[10,[1]],[5,[1]],[7,[1]],[9,[1]],[4,[1]],[11,[1]],21,22]],[0,[[27,[25,[26,[25,[0,[[27,[25,[26,[25,[0,[27,21,22]],28]]]],21,22]],28]]]],21,22]],28,[0,[33,34,35,36,37,38,39,22,21]]]]]]]],0,0,0,0,0,0,0,0,0,[[],14],[[],14],[[],14],[[],14],[[],47],[[],47],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[49],[19],[[50,[19,[[26,[1,[0,[[27,[1,[26,[1,[0,[[27,[1,[26,[1,[0,[27,21,22]],28]]]],21,22]],28]]]],21,22]],28]]]]]],[[]],[[]],[50,50],[[]],[51,[[14,[13]]]],[[50,[51,[1,[0,[[4,[1]],[7,[1]],[10,[1]],52,[5,[1]],[54,[1,[53,[1]]]],21,22]],[0,[55,22,21]],56,[53,[1]],36]]],[[14,[13]]]],[15],[15],[15],[[]],[[]],[[]],[[]],[[]],[[],15],[[]],[[[17,[16]]],[[17,[18,16]]]],[[[19,[16]]],[[19,[18,16]]]],[[[20,[16]]],[[20,[18,16]]]],[[]],[[]],[[57,[0,[58,36]]],[[14,[59,[17,[60]]]]]],[[50,57,[0,[58,36]]],[[14,[59,[17,[60]]]]]],[[],[[62,[[17,[61]]]]]],[50,[[62,[[17,[61]]]]]],[[]],[[],14],[[],14],[[],47],[[],48],[[]],[[]],[[]],0,[49],0,[[]],[[]],0,0,[[[51,[1,56,36]]],[[51,[1,56,36]]]],[[]],[[[51,[1,[0,[[4,[1]],[7,[1]],[10,[1]],52,[5,[1]],21,22]],[0,[55,22,21]],56]]],[[14,[59,[17,[60]]]]]],0,0,0,[15],[15],[15],[[]],[[]],[[]],[[]],[[]],0,[[],15],[[]],[[[17,[16]]],[[17,[18,16]]]],[[[19,[16]]],[[19,[18,16]]]],[[[20,[16]]],[[20,[18,16]]]],[[]],[[]],0,0,0,0,0,0,[[]],[[],14],[[],14],[[],47],[[],48],[[]],[[]],[[]]],"c":[],"p":[[8,"Block"],[8,"MaintainedTransactionPool"],[8,"ImportQueue"],[8,"ProvideRuntimeApi"],[8,"HeaderMetadata"],[8,"Chain"],[8,"BlockBackend"],[8,"BlockIdTo"],[8,"ProofProvider"],[8,"HeaderBackend"],[8,"BlockchainEvents"],[3,"BuildNetworkParams"],[4,"Error"],[4,"Result"],[15,"usize"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"Arc"],[3,"Rc"],[8,"Send"],[8,"Sync"],[8,"SelectChain"],[8,"Stream"],[6,"Block"],[6,"FullClient"],[8,"ConstructRuntimeApi"],[8,"NativeExecutionDispatch"],[6,"FullPool"],[3,"RuntimeApiFull"],[3,"FullChainApiWrapper"],[6,"TFullBackend"],[8,"DeserializeOwned"],[8,"Encode"],[8,"Decode"],[8,"Clone"],[8,"Debug"],[8,"Display"],[8,"FromStr"],[3,"CreateInherentDataProvider"],[8,"RpcProvider"],[8,"BlockImportProvider"],[3,"DomainParams"],[3,"NativeElseWasmExecutor"],[3,"NewFull"],[6,"Result"],[3,"TypeId"],[15,"str"],[3,"Private"],[3,"DefaultProvider"],[3,"FullDeps"],[8,"AuxStore"],[8,"Backend"],[8,"StorageProvider"],[8,"TransactionPool"],[8,"ChainApi"],[6,"SubscriptionTaskExecutor"],[8,"SpawnEssentialNamed"],[3,"RpcModule"],[8,"Error"],[8,"IdProvider"],[4,"Option"]]},\
"domain_test_primitives":{"doc":"Test primitive crates that expose necessary extensions …","t":"IILLL","n":["OnchainStateApi","TimestampApi","free_balance","get_open_channel_for_chain","timestamp"],"q":[[0,"domain_test_primitives"]],"d":["Api for querying onchain state in the test","Api that returns the timestamp","Api to get the free balance of the given account","Returns the last open channel for a given domain.","Api to construct inherent timestamp extrinsic from given …"],"i":[0,0,7,7,8],"f":[0,0,[[],[[2,[1]]]],[3,[[2,[[5,[4]],1]]]],[[],[[2,[6,1]]]]],"c":[],"p":[[4,"ApiError"],[4,"Result"],[4,"ChainId"],[6,"ChannelId"],[4,"Option"],[6,"Moment"],[8,"OnchainStateApi"],[8,"TimestampApi"]]},\
"domain_test_service":{"doc":"Crate used for testing with Domain.","t":"NNNNCNNRNENLLLLLALLFFLLLALLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLAFLLLLLLLLLLLLLLLLLLLLLLFGDDGDGGILMMLLLLLLLMMLLLLLLLLLLLMLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMMLLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLNNNNNNENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Alice","Bob","Charlie","Dave","EcdsaKeyring","Eve","Ferdie","GENESIS_DOMAIN_ID","One","Sr25519Keyring","Two","__clone_box","as_ref","as_ref","borrow","borrow_mut","chain_spec","clone","clone_into","construct_extrinsic_generic","construct_unsigned_extrinsic","deref","deref","deref_mut","domain","drop","eq","equivalent","equivalent","equivalent","equivalent","evm_domain_test_runtime","fmt","fmt","from","from_account_id","from_h256_public","from_mut","from_mut","from_public","from_raw_public","from_ref","from_ref","from_str","from_subset","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_in_subset","iter","iter","keyring","node_config","numeric","numeric_id","pair","public","separate_by_policy","sign","to_account_id","to_h256_public","to_owned","to_raw_public","to_raw_public_vec","to_seed","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","create_domain_spec","Backend","DomainNode","DomainNodeBuilder","DomainOperator","EVMDomainExecutorDispatch","EvmDomainClient","EvmDomainNode","FromKeyring","account_nonce","addr","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_evm_node","client","code_executor","connect_to_domain_node","construct_and_send_extrinsic","construct_extrinsic","construct_extrinsic_with_tip","deref","deref","deref","deref_mut","deref_mut","deref_mut","dispatch","domain_id","drop","drop","drop","exclusively_connect_to_registered_parachain_nodes","free_balance","from","from","from","from_keyring","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_in_subset","is_in_subset","is_in_subset","key","native_version","network_service","new","operator","rpc_handlers","send_extrinsic","send_system_remark","sync_service","task_manager","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","tx_pool_sink","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","wait_for_blocks","Alice","Bob","Charlie","Dave","Eve","Ferdie","Keyring","One","Two","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","from_subset","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_in_subset","pair","public","sign","to_account_id","to_owned","to_seed","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"domain_test_service"],[81,"domain_test_service::chain_spec"],[82,"domain_test_service::domain"],[200,"domain_test_service::keyring"]],"d":["","","","","","","","The domain id of the genesis domain","","Set of test accounts.","","","","","","","Chain specification for the domain test runtime.","","","Construct an extrinsic that can be applied to the test …","Construct an unsigned extrinsic that can be applied to the …","","","","Utilities used for testing with the domain.","","","","","","","","","","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Returns an iterator over all test accounts.","Set of test accounts.","Create a domain node <code>Configuration</code>.","Create a crypto <code>Pair</code> from a numeric value.","Get account id of a <code>numeric</code> account.","","","","","","","","","","","","","","","","","","","","","Create chain spec","The backend type used by the test service.","A generic domain node instance used for testing.","A builder to create a <code>DomainNode</code>.","Domain executor for the test service.","Evm domain executor instance.","The evm domain client","The evm domain node","Trait for convert keyring to account id","Get the nonce of the node account","The <code>MultiaddrWithPeerId</code> to this node. This is useful if …","Client backend.","","","","","","","Build a evm domain node","Client’s instance.","Code executor.","Make the node connect to the given domain node.","Construct an extrinsic with the current nonce of the node …","Construct an extrinsic.","Construct an extrinsic with the given transaction tip.","","","","","","","","The domain id","","","","Instruct the node to exclusively connect to registered …","Get the free balance of the given account","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert keyring to account id","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","The node’s account key","","Network service.","Create a new instance of <code>Self</code>.","Domain oeprator.","RPCHandlers to make RPC queries.","Send an extrinsic to this node.","Sends an system.remark extrinsic to the pool.","Sync service.","TaskManager’s instance.","","","","","","","","","","","","","Sink to the node’s tx pool","","","","","","","","","","","","","","","","Wait for <code>count</code> blocks to be imported in the node and then …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","","","","","","","Return key pair.","Return public key.","Sign <code>msg</code>.","Return account id","","Return seed string.","","","","","","","","",""],"i":[2,2,2,2,0,2,2,0,2,0,2,2,2,2,2,2,0,2,2,0,0,2,2,2,0,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,67,67,67,67,68,82,67,68,82,68,67,67,68,67,67,67,67,68,82,67,68,82,82,67,67,68,82,68,67,67,68,82,66,67,67,68,68,82,82,67,67,68,68,82,82,67,68,82,67,68,82,67,68,82,67,68,82,68,82,67,68,82,67,68,82,67,68,82,67,68,82,67,82,67,68,67,67,67,67,67,67,67,68,82,67,68,82,67,68,82,67,68,82,67,67,68,82,67,68,82,67,68,82,67,68,82,67,68,82,67,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10],"f":[0,0,0,0,0,0,0,0,0,0,0,[1],[2,3],[2,[[5,[4]]]],[[]],[[]],0,[2,2],[[]],[[[8,[[7,[6]]]],9,10,11,12,12],[[15,[13,14]]]],[9,[[15,[13,14]]]],[16],[2,[[5,[4]]]],[16],0,[16],[[2,2],11],[[],11],[[],11],[[],11],[[],11],0,[[2,17],[[19,[18]]]],[[2,17],[[19,[18]]]],[[]],[20,[[21,[2]]]],[22,[[21,[2]]]],[[]],[[]],[3,[[21,[2]]]],[[[5,[4]]],[[21,[2]]]],[[]],[[]],[23,[[19,[2]]]],[[]],[[[0,[24,25]],26],27],[[2,28]],[[],16],[[]],[[[30,[29]]],[[30,[31,29]]]],[[[32,[29]]],[[32,[31,29]]]],[[[33,[29]]],[[33,[31,29]]]],[[]],[[]],[[],11],[[],34],[[],35],0,[[36,37,10,[39,[38]],11,40,41,[30,[42]]],[[19,[43,44]]]],[16,45],[16,20],[2,45],[2,3],[46,47],[[2,[48,[4]]],49],[2,20],[2,22],[[]],[2,[[5,[4]]]],[2,[[39,[4,29]]]],[2,47],[[],47],[[],21],[[]],[[],19],[[],19],[[],50],[[],23],[[]],[[]],[[]],[[36,51],[[30,[42]]]],0,0,0,0,0,0,0,0,[[[67,[[0,[52,53,54,55]],[0,[[57,[6,[56,[6,[0,[[57,[6,[56,[6,[0,[[57,[6,56]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]],[0,[59,60,61,62,63,64,65,55,54,66]]]]],12],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[68,40,36,69],70],0,0,[[68,38],68],[[[67,[[0,[52,53,54,55]],[0,[[57,[6,[56,[6,[0,[[57,[6,[56,[6,[0,[[57,[6,56]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]],[0,[59,60,61,62,63,64,65,55,54,66]]]],9],[[19,[71,72]]]],[[[67,[[0,[52,53,54,55]],[0,[[57,[6,[56,[6,[0,[[57,[6,[56,[6,[0,[[57,[6,56]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]],[0,[59,60,61,62,63,64,65,55,54,66]]]],12,9],[[15,[13,14]]]],[[[67,[[0,[52,53,54,55]],[0,[[57,[6,[56,[6,[0,[[57,[6,[56,[6,[0,[[57,[6,56]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]],[0,[59,60,61,62,63,64,65,55,54,66]]]],12,12,9],[[15,[13,14]]]],[16],[16],[16],[16],[16],[16],[[23,[48,[4]]],[[21,[[39,[4]]]]]],0,[16],[16],[16],[68,68],[[[67,[[0,[52,53,54,55]],[0,[[57,[6,[56,[6,[0,[[57,[6,[56,[6,[0,[[57,[6,56]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]],[0,[59,60,61,62,63,64,65,55,54,66]]]],[0,[59,60,61,62,63,64,65,55,54,66]]],73],[[]],[[]],[[]],[10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[[30,[29]]],[[30,[31,29]]]],[[[30,[29]]],[[30,[31,29]]]],[[[30,[29]]],[[30,[31,29]]]],[[[32,[29]]],[[32,[31,29]]]],[[[32,[29]]],[[32,[31,29]]]],[[[33,[29]]],[[33,[31,29]]]],[[[33,[29]]],[[33,[31,29]]]],[[[33,[29]]],[[33,[31,29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],0,[[],74],0,[[37,10,41],68],0,0,[[[67,[[0,[52,53,54,55]],[0,[[57,[6,[56,[6,[0,[[57,[6,[56,[6,[0,[[57,[6,56]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]],[0,[59,60,61,62,63,64,65,55,54,66]]]],[9,[75]]],[[19,[71,72]]]],[[[67,[[0,[52,53,54,55]],[0,[[57,[6,[56,[6,[0,[[57,[6,[56,[6,[0,[[57,[6,56]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]],[0,[59,60,61,62,63,64,65,55,54,66]]]]]],0,0,[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,[[],50],[[],50],[[],50],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[67,[[0,[52,53,54,55]],[0,[[57,[6,[56,[6,[0,[[57,[6,[56,[6,[0,[[57,[6,56]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]]]]]],54,55]],[0,[58,54,55]],[0,[59,60,61,62,63,64,65,55,54,66]]]],16],76],0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[10,10],[[]],[16],[16],[16],[[10,10],11],[[],11],[[],11],[[],11],[[],11],[[10,17],77],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[24,25]],26],27],[[10,28]],[[],16],[[]],[[[30,[29]]],[[30,[31,29]]]],[[[32,[29]]],[[32,[31,29]]]],[[[33,[29]]],[[33,[31,29]]]],[[]],[[]],[[],11],[10,78],[10,79],[[10,[48,[4]]],80],[10,81],[[]],[10,47],[[],21],[[]],[[],19],[[],19],[[],50],[[],23],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[4,"Sr25519Keyring"],[3,"Public"],[15,"u8"],[15,"array"],[6,"Block"],[8,"HeaderBackend"],[8,"AsRef"],[8,"Into"],[4,"Keyring"],[15,"bool"],[15,"u32"],[6,"Address"],[6,"Signature"],[3,"UncheckedExtrinsic"],[15,"usize"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"AccountId32"],[4,"Option"],[3,"H256"],[15,"str"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"Arc"],[3,"Rc"],[3,"KeyringIter"],[8,"Iterator"],[3,"DomainId"],[3,"Handle"],[3,"MultiaddrWithPeerId"],[3,"Vec"],[4,"Role"],[3,"BasePath"],[8,"ChainSpec"],[3,"Configuration"],[4,"Error"],[3,"Pair"],[3,"SeparatorPolicy"],[3,"String"],[15,"slice"],[3,"Signature"],[3,"TypeId"],[3,"DomainInstanceData"],[8,"Config"],[8,"Config"],[8,"Send"],[8,"Sync"],[6,"FullClient"],[8,"ConstructRuntimeApi"],[8,"NativeExecutionDispatch"],[8,"DeserializeOwned"],[8,"Encode"],[8,"Decode"],[8,"Clone"],[8,"Debug"],[8,"Display"],[8,"FromStr"],[8,"FromKeyring"],[3,"DomainNode"],[3,"DomainNodeBuilder"],[3,"MockConsensusNode"],[6,"EvmDomainNode"],[3,"RpcTransactionOutput"],[3,"RpcTransactionError"],[6,"Balance"],[3,"NativeVersion"],[3,"OpaqueExtrinsic"],[8,"Future"],[6,"Result"],[3,"Pair"],[3,"Public"],[3,"Signature"],[3,"AccountId20"],[3,"EVMDomainExecutorDispatch"]]},\
"evm_domain_runtime":{"doc":"","t":"GDDGNNGGGGGGGGNNNGGNNGDGDDGGDGDDGNNNGGGDRGNNNNGGGNNDDRGGNNRRDDGNNNEGDDGEDDDDGDNDDDDDDEEEEDEEDEDGGDGGGGNNNGGNNNGGNDDGNGGNNNDGRDNRRRRDLLLLLLLLLLLLLLLLLLLLALLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFGGGGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AccountId","AccountId20Converter","ActualPaidFeesHandler","Address","Address20","Address32","AllPallets","AllPalletsReversedWithSystemFirst","AllPalletsWithSystem","AllPalletsWithSystemReversed","AllPalletsWithoutSystem","AllPalletsWithoutSystemReversed","Balance","Balances","Balances","Balances","Balances","BalancesConfig","BaseFee","BaseFee","BaseFee","BaseFeeConfig","BaseFeeThreshold","Block","BlockGasLimit","BlockHashCount","BlockId","BlockNumber","BoundDivision","CheckedExtrinsic","DefaultBaseFeePerGas","DefaultElasticity","EVM","EVM","EVM","EVM","EVMChainId","EVMChainIdConfig","EVMConfig","EVMCurrencyAdapter","EXISTENTIAL_DEPOSIT","Ethereum","Ethereum","Ethereum","Ethereum","Ethereum","EthereumConfig","Executive","ExecutivePallet","ExecutivePallet","ExecutivePallet","ExistentialDeposit","FindAuthorTruncated","GAS_PER_SECOND","GenesisConfig","Hash","Id","Index","MAXIMUM_BLOCK_LENGTH","MAXIMUM_BLOCK_WEIGHT","MaxLocks","MaxReserves","Messenger","Messenger","Messenger","Messenger","MultiAddress","Nonce","OnXDMRewards","OperationalFeeMultiplier","OperatorRewards","OriginCaller","PalletInfo","Perbill","Permill","PostOnlyBlockHash","Precompiles","PrecompilesValue","Raw","RelayConfirmationDepth","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeBlockLength","RuntimeBlockWeights","RuntimeCall","RuntimeError","RuntimeEvent","RuntimeFreezeReason","RuntimeGenesisConfig","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","SelfChainId","SelfDomainId","SelfDomainIdConfig","SessionKeys","Signature","SignedBlock","SignedExtra","Sudo","Sudo","Sudo","Sudo","SudoConfig","System","System","System","System","SystemConfig","Timestamp","Timestamp","TransactionByteFee","TransactionConverter","TransactionPayment","TransactionPayment","TransactionPaymentConfig","Transporter","Transporter","Transporter","Transporter","TransporterEndpointId","UncheckedExtrinsic","VERSION","Version","Void","WASM_BINARY","WASM_BINARY_BLOATY","WEIGHT_MILLISECS_PER_BLOCK","WEIGHT_PER_GAS","WeightPerGas","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account_basic","account_code_at","account_nonce","add","add","add_filter","api","api_version","apply_extrinsic","apply_extrinsic_with_post_state_root","apply_self_contained","as_system_ref","assimilate_storage","author","balances","base_fee","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_messages","block_rewards","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","call","caller","chain_id","chain_id","check_inherents","check_self_contained","check_transaction_validity","checked_add","checked_add","checked_mul","checked_mul","checked_sub","checked_sub","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","construct_inherent_timestamp_extrinsic","construct_runtime_api","construct_set_code_extrinsic","convert","convert_transaction","convert_transaction","convert_transaction","correct_and_deposit_fee","crate_version","create","current_all","current_block","current_receipts","current_transaction_statuses","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_from","decode_from","decode_into_raw_public_keys","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","deconstruct","deconstruct","deconstruct","default","default","default","default","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_add","defensive_saturating_add","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_sub","defensive_saturating_sub","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","dispatch","dispatch_bypass_filter","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","elasticity","encode","encode","encode","encode_as","encode_as","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","ethereum","evm","evm_chain_id","execute_block","execute_in_transaction","executor","extract_proof","extract_signer","extract_signer","extract_xdm_proof_state_roots","extrinsic_filter","extrinsic_weight","filter_call","finalize_block","find_author","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_dispatch_error","from_fd","from_filelike","from_float","from_float","from_float","from_float","from_into_filelike","from_into_socketlike","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_parts","from_parts","from_parts","from_percent","from_percent","from_perthousand","from_perthousand","from_rational","from_rational","from_rational_approximation","from_rational_approximation","from_rational_with_rounding","from_rational_with_rounding","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_socketlike","gas_limit_multiplier_support","gas_price","generate","generate_session_keys","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_metadata","get_call_names","get_dispatch_info","get_endpoint_handler","get_hash","get_module_names","get_raw","has_api","has_api_with","hash","ideal","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inbox_response_message_unsigned","index","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize_block","initialize_block_with_post_state_root","int_div","int_div","int_mul","int_mul","intermediate_roots","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_caller","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_raw_public_keys","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","into_system","is_clear","is_clear","is_domain_info_confirmed","is_one","is_one","is_self_contained","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_within_tx_range","is_zero","is_zero","is_zero","is_zero","key_ids","lower","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_value","max_value","max_value","max_value","metadata","metadata","metadata_at_version","metadata_at_version","metadata_versions","metadata_versions","min_value","min_value","min_value","min_value","module_name","mul","mul","mul","mul","mul","mul","mul_ceil","mul_ceil","mul_floor","mul_floor","name","native_version","none","none","offchain_worker","on_unbalanceds","on_xdm_rewards","one","one","one","one","opaque","outbox_message_unsigned","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pay_priority_fee","pending_block","pow","pow","pre_dispatch","pre_dispatch_self_contained","proof_recorder","query_fee_details","query_info","query_length_to_fee","query_weight_to_fee","record_proof","register_extension","relay_confirmation_depth","reset_filter","root","root","saturating_add","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_pow","saturating_pow","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_sub","saturating_sub","saturating_sub","saturating_sub","self_domain_id","serialize","serialize","serialize","serialize","set_call_context","set_caller_from","should_relay_inbox_message_response","should_relay_outbox_message","signed","signed","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","square","square","storage_at","storage_keys_for_verifying_transaction_validity","sub","sub","sudo","system","system","tcmp","tcmp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction_payment","try_convert_back","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_from","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upper","using_encoded","using_encoded","using_encoded","validate_self_contained","validate_transaction","validate_unsigned","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","withdraw_fee","zero","zero","zero","zero","dispatch","AccountId","Block","BlockId","Header","UncheckedExtrinsic","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from_bytes","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_mut","into_ref","is_clear","serialize","size_hint","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","vzip"],"q":[[0,"evm_domain_runtime"],[1756,"evm_domain_runtime::api"],[1757,"evm_domain_runtime::opaque"]],"d":["Some way of identifying an account on the chain. We …","","<code>ActualPaidFeesHandler</code> used to collect all the fee in …","The address format for describing accounts.","Its a 20 byte representation.","It’s a 32 byte representation.","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","Balance of an account.","","","","","","","","","","","Block type as expected by this runtime.","EVM gas limit","","BlockId type as expected by this runtime.","An index to a block.","","Extrinsic type that has already been checked.","","","","","","","","","","","The existential deposit. Same with the one on primary …","","","","","","","Executive: handles dispatch to the various modules.","","","","","","Current approximation of the gas/s consumption considering …","","A hash of some data used by the chain.","It’s an account ID (pubkey).","It’s an account index.","","","","","","","","","A multi-format address wrapper for on-chain accounts.","Index of a transaction in the chain.","","","","","Provides an implementation of <code>PalletInfo</code> to provide …","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","","Precompiles we use for EVM","","It’s some arbitrary raw bytes.","","","","Implements all runtime apis for the client side.","","","","","","A reason for placing a freeze on funds.","","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing funds.","","","","","Alias to 512-bit hash when used in the context of a …","A Block signed with a Justification","The SignedExtension to the basic transaction logic.","","","","","","","","","","","","","","","","","","","","","","","Unchecked extrinsic type as expected by this runtime.","","","","","","We allow for 2000ms of compute with a 6 second average …","Approximate ratio of the amount of Weight per Gas. u64 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …","","","","","","","","","","","","","","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thingrimarily used for adding the executor authority key into …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","Convert to runtime origin, using as filter: …","Returns the argument unchanged.","Convert to runtime origin using […","","Convert to runtime origin with caller being system signed …","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Optionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.","","","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Generate a set of keys with optionally using the given …","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","","","","","","","","","","","","","","See <code>PerThing::is_zero</code>.","","See <code>PerThing::is_zero</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","","The version information used to identify this runtime when …","","Create with system none origin and …","","","","See <code>PerThing::one</code>","","","See <code>PerThing::one</code>","Opaque types. These are used by the CLI to instantiate …","","","","","","","","","","","","","","","","","","","","","","","Create with system root origin and …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","","","","","","","","","Create with system signed origin and …","","","","","","","","","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::zero</code>.","","See <code>PerThing::zero</code>.","","Opaque account identifier type.","Opaque block type.","Opaque block identifier type.","Opaque block header type.","Simple blob to hold an extrinsic without committing to its …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,52,52,0,0,0,0,0,0,0,0,45,67,20,0,0,45,20,0,0,0,0,0,0,0,0,0,0,0,0,45,67,20,0,0,0,0,0,0,45,67,23,20,0,0,0,45,20,0,0,0,0,0,52,52,0,0,0,0,0,45,67,20,0,0,0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,67,20,0,0,45,67,20,0,0,20,0,0,0,45,0,0,45,67,20,0,0,0,0,23,0,0,0,0,0,43,44,45,10,23,20,46,47,48,49,50,8,9,52,44,44,44,8,9,10,0,14,44,44,20,23,25,44,25,25,43,45,67,23,20,46,47,48,49,8,9,52,43,45,67,23,20,46,47,48,49,8,9,52,43,45,67,23,20,46,47,48,49,8,9,52,44,44,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,25,44,10,44,44,44,20,44,8,9,8,9,8,9,8,9,43,44,45,10,23,20,46,47,48,49,50,8,9,52,43,44,45,10,23,20,46,47,48,49,50,8,9,52,46,47,48,49,8,9,44,214,44,190,44,50,50,192,213,44,44,44,44,44,43,45,67,23,20,46,47,48,49,8,9,52,43,45,67,23,20,46,47,48,49,8,9,52,43,45,67,23,20,46,47,48,49,8,9,52,8,9,43,44,43,45,67,23,20,46,47,48,49,8,9,52,8,8,9,9,25,50,8,9,46,47,48,49,8,9,46,47,48,49,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,46,47,48,49,8,9,46,47,48,49,8,9,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,43,25,8,9,20,20,8,8,9,9,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,44,43,8,9,8,9,43,45,67,23,20,8,9,52,44,43,44,45,23,20,46,47,48,49,8,9,52,43,43,43,44,44,44,45,45,45,23,23,23,20,20,20,46,46,46,47,47,47,48,48,48,49,49,49,8,8,8,9,9,9,52,52,52,25,25,25,44,14,43,14,0,44,44,44,44,10,44,191,43,44,45,67,10,23,20,46,47,48,49,8,9,52,52,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,45,45,45,45,45,45,45,45,45,45,67,67,67,67,67,67,67,67,10,10,10,10,10,23,23,23,20,20,20,20,20,20,20,20,20,20,20,25,46,47,48,49,50,214,14,8,8,9,9,52,52,52,67,52,52,8,8,9,9,52,52,188,188,189,189,190,190,191,191,192,192,193,193,43,43,194,194,195,195,196,196,197,197,198,198,199,199,200,200,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,44,44,45,45,67,67,10,10,23,23,20,20,25,25,46,46,47,47,48,48,49,49,50,50,214,214,14,14,8,8,9,9,52,52,8,8,9,9,8,9,8,9,8,9,8,9,8,9,188,188,189,189,190,190,191,191,192,192,193,193,43,43,194,194,195,195,196,196,197,197,198,198,199,199,200,200,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,44,44,45,45,67,67,10,10,23,23,20,20,25,25,46,46,47,47,48,48,49,49,50,50,214,214,14,14,8,8,9,9,52,52,52,44,44,43,44,194,194,194,195,195,195,196,196,196,197,197,197,198,198,198,199,199,199,200,200,200,201,201,201,202,202,202,203,203,203,204,204,204,205,205,205,206,206,206,207,207,207,208,208,208,209,209,209,210,210,210,211,211,211,212,212,212,20,20,20,44,52,20,43,14,14,52,193,43,45,67,23,20,46,47,48,49,8,9,52,44,213,44,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,44,44,8,9,8,9,44,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,10,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,43,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,14,23,8,9,44,8,9,20,20,20,20,20,20,20,20,20,20,20,44,8,8,9,9,43,193,23,46,47,48,49,8,9,8,8,9,9,44,44,44,44,44,44,8,8,9,9,213,8,8,8,9,9,9,8,9,8,9,213,0,10,10,44,188,189,8,8,9,9,0,44,46,47,48,49,8,9,192,44,8,9,44,20,14,44,44,44,44,14,14,44,10,10,10,8,8,9,9,8,9,8,9,8,9,8,9,8,9,8,9,8,8,9,9,25,43,25,8,9,14,10,44,44,10,10,43,45,67,23,20,8,9,52,8,9,44,44,8,9,25,25,23,8,9,43,45,67,23,20,46,47,48,49,8,9,52,43,44,45,10,23,20,46,47,48,49,50,8,9,52,52,25,190,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,45,45,45,45,45,45,45,45,45,45,67,67,67,67,67,67,67,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,10,43,45,67,23,20,46,47,48,49,8,9,52,43,45,67,23,20,46,47,48,49,8,9,52,43,45,67,23,20,46,47,48,49,8,9,52,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,43,44,45,67,23,20,46,47,48,49,8,9,52,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,8,9,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,193,43,8,9,20,44,44,44,188,189,190,191,192,193,43,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,44,45,67,10,23,20,25,46,47,48,49,50,214,14,8,9,52,192,8,8,9,9,0,0,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[2,3],[2,[[5,[4]]]],[6,7],[[8,8]],[[9,9]],[[10,11]],0,[[[14,[12,[13,[12]]]]],[[18,[[16,[15]],17]]]],[[],19],[[],[[5,[4]]]],[20,[[16,[[22,[[21,[20]]]]]]]],[23,[[16,[24]]]],[[25,26],[[18,[27]]]],[[],2],0,0,[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],30],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[[2,2,[5,[4]],32,32,[16,[32]],[16,[32]],[16,[32]],33,[16,[5]]],[[18,[34,35]]]],[10],[[],36],[[],37],[[38,39],40],[20,[[16,[[18,[41]]]]]],[[],[[18,[42]]]],[[8,8],[[16,[8]]]],[[9,9],[[16,[9]]]],[[8,8],[[16,[8]]]],[[9,9],[[16,[9]]]],[[8,8],[[16,[8]]]],[[9,9],[[16,[9]]]],[[]],[[]],[43,43],[44,44],[45,45],[10,10],[23,23],[20,20],[46,46],[47,47],[48,48],[49,49],[50,50],[8,8],[9,9],[[[52,[51,51]]],[[52,[51,51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[46,46],53],[[47,47],53],[[48,48],53],[[49,49],53],[[8,8],53],[[9,9],53],[54,16],[[[13,[12]]],55],[[[5,[4]]],[[5,[4]]]],[6,56],[57],[[50,57],58],[[50,57],59],[[2,32,32]],[[],[[16,[60]]]],[[2,[5,[4]],32,32,[16,[32]],[16,[32]],[16,[32]],33,[16,[5]]],[[18,[61,35]]]],[[]],[[],[[16,[62]]]],[[],[[16,[[5,[63]]]]]],[[],[[16,[[5,[64]]]]]],[65,[[18,[43,66]]]],[65,[[18,[45,66]]]],[65,[[18,[67,66]]]],[65,[[18,[23,66]]]],[65,[[18,[20,66]]]],[65,[[18,[46,66]]]],[65,[[18,[47,66]]]],[65,[[18,[48,66]]]],[65,[[18,[49,66]]]],[65,[[18,[8,66]]]],[65,[[18,[9,66]]]],[65,[[18,[[52,[68,69]],66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[],[[18,[8,66]]]],[[],[[18,[9,66]]]],[[[70,[4]]],[[16,[5]]]],[[[5,[4]]],[[16,[5]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[8],[8,15],[9,15],[9],[[],25],[[],50],[[],8],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[72,[[18,[43]]]],[72,[[18,[25]]]],[72,[[18,[8]]]],[72,[[18,[9]]]],[[20,10],73],[[20,10],73],[[8,8]],[8],[9],[[9,9]],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[[],[[16,[8]]]],[43,[[5,[4]]]],[8,[[5,[4,29]]]],[9,[[5,[4,29]]]],[8],[9],[[43,[0,[74,75]]]],[[45,[0,[74,75]]]],[[67,[0,[74,75]]]],[[23,[0,[74,75]]]],[[20,[0,[74,75]]]],[[8,[0,[74,75]]]],[[9,[0,[74,75]]]],[[[52,[76,69]],[0,[74,75]]]],[[],[[18,[15]]]],[[43,43],33],[[44,44],33],[[45,45],33],[[23,23],33],[[20,20],33],[[46,46],33],[[47,47],33],[[48,48],33],[[49,49],33],[[8,8],33],[[9,9],33],[[[52,[[77,[[77,[[77,[77]]]]]],[77,[[77,[[77,[77]]]]]]]],[52,[[77,[[77,[[77,[77]]]]]],[77,[[77,[[77,[77]]]]]]]]],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,0,0,[38],[[[14,[12,[13,[12]]]],78]],0,[[[14,[12,[13,[12]]]]],[[16,[79]]]],[[[5,[59]]],5],[5,5],[[[5,[4]]],[[16,[[81,[80]]]]]],[5,[[5,[57]]]],[[],82],[10,33],[[]],[83,[[16,[2]]]],[[43,84],85],[[44,84],85],[[45,84],85],[[67,84],85],[[10,84],[[18,[86]]]],[[23,84],85],[[20,84],85],[[46,84],85],[[47,84],85],[[48,84],85],[[49,84],85],[[8,84],[[18,[86]]]],[[9,84],[[18,[86]]]],[[[52,[87,87]],84],[[18,[86]]]],[[[52,[87,87]],84],[[18,[86]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[88,[44]]],45],[[[89,[44]]],45],[[[90,[44]]],45],[[[91,[44]]],45],[[[92,[44]]],45],[[[93,[44]]],45],[[]],[[[94,[44]]],45],[95,45],[[[96,[44]]],45],[97,45],[[]],[[[98,[44]]],67],[[[99,[44]]],67],[[[100,[44]]],67],[[[101,[44]]],67],[[[102,[44]]],67],[[[103,[44]]],67],[[[104,[44]]],67],[[[105,[44]]],10],[[]],[106,10],[23,10],[16,10],[106,23],[[[105,[44]]],23],[[]],[[[108,[107,44]]],20],[[[108,[109,44]]],20],[[[108,[110,44]]],20],[[[108,[111,44]]],20],[[[108,[112,44]]],20],[[[108,[113,44]]],20],[[[108,[114,44]]],20],[[[108,[115,44]]],20],[[]],[[[108,[116,44]]],20],[[[108,[117,44]]],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[118,[8]]],8],[[]],[[]],[[[118,[9]]],9],[[],52],[119],[[]],[35,[[16,[67]]]],[120],[120],[121,8],[121,8],[121,9],[121,9],[122],[123],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,8],[[],8],[[],9],[15,9],[15,8],[15,9],[15,8],[15,9],[[[0,[124,[125,[15]],[125,[36]]]],[0,[124,[125,[15]],[125,[36]]]]],8],[[[0,[124,[125,[15]],[125,[36]]]],[0,[124,[125,[15]],[125,[36]]]]],9],[[[0,[124,[125,[15]],[125,[36]]]],[0,[124,[125,[15]],[125,[36]]]]],8],[[[0,[124,[125,[15]],[125,[36]]]],[0,[124,[125,[15]],[125,[36]]]]],9],[[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]],[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]],135],[[18,[8]]]],[[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]],[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]],135],[[18,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[120],[[]],[[],32],[[[16,[[5,[4]]]]],[[5,[4]]]],[[[16,[[5,[4]]]]],[[5,[4]]]],[[],136],[[],136],[[],[[137,[136]]]],[[],[[137,[80]]]],[[],80],[[],80],[[],138],[[],138],[[],[[137,[138]]]],[[],139],[[],139],[[],[[137,[139]]]],[[],31],[[],31],[[],[[137,[31]]]],[[],15],[[],15],[[],[[137,[15]]]],[[],15],[[],[[137,[15]]]],[[],15],[[],31],[[],31],[[],[[137,[31]]]],[[],4],[[],[[137,[4]]]],[[],4],[[],80],[[],80],[[],[[137,[80]]]],[[],37],[[],[[137,[37]]]],[[],37],[[],140],[[],[[137,[140]]]],[[],140],[[],[[137,[32]]]],[[],32],[[],32],[[],141],[[],[[137,[141]]]],[[],141],[[],82],[[],[[137,[82]]]],[[],82],[[],142],[[],142],[[],[[137,[142]]]],[[],32],[[],[[137,[32]]]],[[],32],[[],32],[[],[[137,[32]]]],[[],32],[[],[[137,[8]]]],[[],8],[[],8],[20,143],[144,[[70,[144]]]],[20,145],[146,[[16,[[148,[147]]]]]],[[[0,[149,75]],150],36],[[],[[70,[144]]]],[[43,151],[[70,[4]]]],[[[14,[12,[13,[12]]]]],[[18,[33,17]]]],[[[14,[12,[13,[12]]]],11],[[18,[33,17]]]],[[[52,[149,149]],152]],[[],8],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[[153,[80]]],16],[[],[[16,[71]]]],[39,5],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[]],[[],[[5,[4]]]],[[8,8],15],[[9,9],15],[[8,15],8],[[9,15],9],[[],[[5,[[28,[4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[12,[13,[12]]]],[155,[[154,[12]]]]],[[18,[[156,[12]],27]]]],[23,[[16,[24]]]],[[],33],[[],33],[[157,[158,[80]]],33],[8,33],[9,33],[20,33],[20,[[16,[[108,[109,44]]]]]],[20,[[16,[[108,[110,44]]]]]],[20,[[16,[[108,[112,44]]]]]],[20,[[16,[[108,[113,44]]]]]],[20,[[16,[[108,[115,44]]]]]],[20,[[16,[[108,[114,44]]]]]],[20,[[16,[[108,[116,44]]]]]],[20,[[16,[[108,[117,44]]]]]],[20,[[16,[[108,[111,44]]]]]],[20,[[16,[[108,[107,44]]]]]],[[159,159],33],[8,33],[8,33],[9,33],[9,33],[[],[[70,[151]]]],[[],8],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[]],[[],8],[[],9],[[]],[[],160],[[],161],[15,[[16,[160]]]],[15,[[16,[160]]]],[[],[[5,[15]]]],[[],[[5,[15]]]],[[],8],[[]],[[]],[[],9],[[],[[16,[144]]]],[[8,82],82],[[8,[0,[[127,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],51,[162,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],131]]]],51,[162,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],51,[162,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],51,[162,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],51,[162,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],131]]]],131]]]],[[8,8]],[[9,82],82],[[9,9]],[[9,[0,[[127,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],51,[162,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],131]]]],51,[162,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],51,[162,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],51,[162,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],51,[162,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],51,[162,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[163,[15]],[129,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,162,163,129,128,131]]]],51,[162,[[0,[127,51,162,163,129,128,131]]]],[163,[15]],[129,[[0,[127,51,162,163,129,128,131]]]],[128,[[0,[127,51,162,163,129,128,131]]]],131]]]],131]]]],131]]]],131]]]],[[8,[0,[164,[163,[15]]]]],[[0,[164,[163,[15]]]]]],[[9,[0,[164,[163,[15]]]]],[[0,[164,[163,[15]]]]]],[[8,[0,[164,[163,[15]]]]],[[0,[164,[163,[15]]]]]],[[9,[0,[164,[163,[15]]]]],[[0,[164,[163,[15]]]]]],[[],[[16,[144]]]],[[],165],[[],10],[[],10],[[]],[166],[31],[[],8],[[],8],[[],9],[[],9],0,[[[153,[80]]],16],[[46,46],[[16,[53]]]],[[47,47],[[16,[53]]]],[[48,48],[[16,[53]]]],[[49,49],[[16,[53]]]],[[8,8],[[16,[53]]]],[[9,9],[[16,[53]]]],[[]],[5],[[8,71]],[[9,71]],[[],[[18,[41]]]],[[20,[167,[20]],71],[[16,[[18,[41]]]]]],[[[14,[12,[13,[12]]]]],[[16,[[168,[12]]]]]],[15,[[169,[31]]]],[15,[[170,[31]]]],[15,31],[82,31],[[[14,[12,[13,[12]]]]]],[[[14,[12,[13,[12]]]],171]],[[],80],[10],[[],10],[[],10],[[8,8],8],[[8,8],8],[[9,9],9],[[9,9],9],[[8,8,135],8],[[9,9,135],9],[[8,8],8],[[9,9],9],[[8,71],8],[[9,71],9],[[8,[0,[172,[163,[15]]]]],[[0,[172,[163,[15]]]]]],[[9,[0,[172,[163,[15]]]]],[[0,[172,[163,[15]]]]]],[[8,[0,[172,[163,[15]]]]],[[0,[172,[163,[15]]]]]],[[9,[0,[172,[163,[15]]]]],[[0,[172,[163,[15]]]]]],[[8,[0,[172,[163,[15]]]]],[[0,[172,[163,[15]]]]]],[[9,[0,[172,[163,[15]]]]],[[0,[172,[163,[15]]]]]],[[8,8],8],[[8,8],8],[[9,9],9],[[9,9],9],0,[[43,173],18],[[25,173],18],[[8,173],18],[[9,173],18],[[[14,[12,[13,[12]]]],174]],[[10,[175,[10]]]],[[37,176],33],[[37,176],33],[[],10],[[],10],[43,71],[45,71],[67,71],[23,71],[20,71],[8,71],[9,71],[[[52,[76,69]]],71],[8,8],[9,9],[[2,32],177],[178,[[18,[[5,[[5,[4]]]],179]]]],[[8,8]],[[9,9]],0,0,0,[[],53],[[],53],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],0,[56,[[16,[6]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[45,[[18,[[89,[44]]]]]],[45,[[18,[[90,[44]]]]]],[45,[[18,[[91,[44]]]]]],[45,[[18,[97]]]],[45,[[18,[[96,[44]]]]]],[45,[[18,[[92,[44]]]]]],[45,[[18,[[94,[44]]]]]],[45,[[18,[95]]]],[45,[[18,[[88,[44]]]]]],[45,[[18,[[93,[44]]]]]],[[],18],[[],18],[67,[[18,[[101,[44]]]]]],[67,[[18,[[102,[44]]]]]],[67,[[18,[[98,[44]]]]]],[67,[[18,[[99,[44]]]]]],[67,[[18,[[100,[44]]]]]],[67,[[18,[[103,[44]]]]]],[67,[[18,[[104,[44]]]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[10,78],[[18,[10]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],[[181,[182]]]],[[],[[181,[182]]]],[[],[[181,[182]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[43,78]],[[8,78]],[[9,78]],[[20,[167,[20]],71],[[16,[183]]]],[184,183],[184,183],[[],136],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,32],[[18,[[101,[44]]]]]],[[],8],[[],8],[[],9],[[],9],[[144,[70,[4]]],[[16,[[5,[4]]]]]],0,0,0,0,0,[1],[[],[[28,[4]]]],[[],[[5,[4,29]]]],[[],[[28,[4]]]],[[]],[[]],[[]],[58,58],[[]],[65,[[18,[58,66]]]],[[[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,65],[[18,[66]]]],[[],58],[71],[71],[72,[[18,[58]]]],[71],[58,[[5,[4,29]]]],[[58,[0,[74,75]]]],[[58,58],33],[[],33],[[],33],[[],33],[[58,84],[[18,[86]]]],[[]],[[[186,[76,76,76,185]]],58],[[[187,[76,76,76,185]]],58],[[[70,[4]]],[[18,[58,66]]]],[[]],[[]],[[]],[[]],[[],[[5,[4,29]]]],[[],71],[[]],[[]],[[]],[[],33],[[58,173],18],[58,71],[[[70,[4]]],[[5,[4,29]]]],[[]],[[],18],[[],18],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[5,[4,29]]]],[[],180],[[],[[181,[182]]]],[[]],[[]],[[58,78]],[[]]],"c":[6,7,9,11,54,873,874],"p":[[3,"Private"],[3,"H160"],[3,"Basic"],[15,"u8"],[3,"Vec"],[6,"AccountId"],[6,"Nonce"],[3,"Permill"],[3,"Perbill"],[3,"RuntimeOrigin"],[8,"Fn"],[8,"Block"],[8,"CallApiAt"],[3,"RuntimeApiImpl"],[15,"u32"],[4,"Option"],[4,"ApiError"],[4,"Result"],[6,"ApplyExtrinsicResult"],[4,"RuntimeCall"],[6,"PostDispatchInfoOf"],[6,"DispatchResultWithInfo"],[4,"OriginCaller"],[4,"RawOrigin"],[3,"RuntimeGenesisConfig"],[3,"Storage"],[3,"String"],[15,"array"],[3,"Global"],[3,"BlockMessagesWithStorageKey"],[6,"Balance"],[3,"U256"],[15,"bool"],[6,"CallInfo"],[4,"DispatchError"],[15,"u64"],[4,"ChainId"],[6,"Block"],[3,"InherentData"],[3,"CheckInherentsResult"],[4,"TransactionValidityError"],[4,"CheckTxValidityError"],[3,"SessionKeys"],[3,"Runtime"],[4,"RuntimeEvent"],[4,"RuntimeFreezeReason"],[4,"RuntimeHoldReason"],[4,"RuntimeLockId"],[4,"RuntimeSlashReason"],[3,"TransactionConverter"],[8,"Clone"],[4,"MultiAddress"],[4,"Ordering"],[6,"Moment"],[3,"ApiRef"],[4,"MultiAccountId"],[4,"TransactionV2"],[3,"UncheckedExtrinsic"],[6,"UncheckedExtrinsic"],[3,"CrateVersion"],[6,"CreateInfo"],[6,"BlockV2"],[4,"ReceiptV3"],[3,"TransactionStatus"],[8,"Input"],[3,"Error"],[4,"RuntimeError"],[8,"Decode"],[8,"HasCompact"],[15,"slice"],[15,"usize"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[8,"Encode"],[8,"PartialEq"],[8,"FnOnce"],[3,"StorageProof"],[6,"BlockNumber"],[3,"ExtractedStateRootsFromProof"],[3,"Weight"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"Error"],[8,"Debug"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[6,"Origin"],[6,"Origin"],[6,"Ethereum"],[6,"CallableCallFor"],[6,"Timestamp"],[6,"EVM"],[6,"Transporter"],[6,"Sudo"],[6,"ExecutivePallet"],[6,"System"],[6,"Balances"],[6,"Messenger"],[6,"BaseFee"],[3,"Compact"],[15,"never"],[3,"OwnedFd"],[15,"f64"],[8,"IntoFilelike"],[8,"IntoSocketlike"],[8,"RationalArg"],[8,"TryInto"],[8,"Ord"],[8,"Div"],[8,"Rem"],[8,"Add"],[8,"AddAssign"],[8,"Unsigned"],[8,"Zero"],[8,"One"],[8,"MultiplyRational"],[4,"Rounding"],[3,"RuntimeVersion"],[8,"From"],[3,"BlockLength"],[3,"BlockWeights"],[6,"EndpointId"],[6,"Precompiles"],[4,"PostLogContent"],[3,"CallMetadata"],[15,"str"],[3,"DispatchInfo"],[4,"Endpoint"],[8,"EndpointHandler"],[3,"Box"],[8,"Hash"],[8,"BuildHasher"],[3,"KeyTypeId"],[8,"Hasher"],[3,"CrossDomainMessage"],[6,"HashingFor"],[8,"Backend"],[6,"StorageChanges"],[3,"DomainId"],[3,"BlockInfo"],[3,"U256"],[3,"OpaqueMetadata"],[3,"RuntimeMetadataPrefixed"],[8,"Mul"],[8,"UniqueSaturatedInto"],[8,"MultiplyArg"],[3,"NativeVersion"],[8,"Iterator"],[6,"DispatchInfoOf"],[6,"ProofRecorder"],[3,"FeeDetails"],[3,"RuntimeDispatchInfo"],[8,"Extension"],[8,"ReciprocalArg"],[8,"Serializer"],[4,"CallContext"],[8,"Into"],[6,"MessageId"],[3,"H256"],[6,"AccountId"],[4,"VerifyTxValidityError"],[3,"TypeId"],[3,"Type"],[4,"MetaForm"],[6,"TransactionValidity"],[4,"TransactionSource"],[8,"SignedExtension"],[3,"UncheckedExtrinsic"],[3,"UncheckedExtrinsic"],[3,"ActualPaidFeesHandler"],[3,"OnXDMRewards"],[3,"AccountId20Converter"],[3,"FindAuthorTruncated"],[3,"EVMCurrencyAdapter"],[3,"BaseFeeThreshold"],[3,"Version"],[3,"BlockHashCount"],[3,"RuntimeBlockLength"],[3,"RuntimeBlockWeights"],[3,"ExistentialDeposit"],[3,"MaxLocks"],[3,"MaxReserves"],[3,"TransactionByteFee"],[3,"OperationalFeeMultiplier"],[3,"RelayConfirmationDepth"],[3,"SelfChainId"],[3,"TransporterEndpointId"],[3,"BlockGasLimit"],[3,"PrecompilesValue"],[3,"WeightPerGas"],[3,"PostOnlyBlockHash"],[3,"BoundDivision"],[3,"DefaultBaseFeePerGas"],[3,"DefaultElasticity"],[3,"PalletInfo"],[3,"RuntimeApi"]]},\
"evm_domain_test_runtime":{"doc":"","t":"GDDGNNGGGGGGGGNNNGGNNGDGDDGGDGDDGNNNGGGDRGNNNNGGGNNDDRGGGNNRRDDGNNNEGDDGEDDDDGDNDDDDDDEEEEDEEDEDGGDGGGDGNNNGGNNNGGNDDGNGGNNNDGRDNRRRRDLLLLLLLLLLLLLLLLLLLLALLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFGGGGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AccountId","AccountId20Converter","ActualPaidFeesHandler","Address","Address20","Address32","AllPallets","AllPalletsReversedWithSystemFirst","AllPalletsWithSystem","AllPalletsWithSystemReversed","AllPalletsWithoutSystem","AllPalletsWithoutSystemReversed","Balance","Balances","Balances","Balances","Balances","BalancesConfig","BaseFee","BaseFee","BaseFee","BaseFeeConfig","BaseFeeThreshold","Block","BlockGasLimit","BlockHashCount","BlockId","BlockNumber","BoundDivision","CheckedExtrinsic","DefaultBaseFeePerGas","DefaultElasticity","EVM","EVM","EVM","EVM","EVMChainId","EVMChainIdConfig","EVMConfig","EVMCurrencyAdapter","EXISTENTIAL_DEPOSIT","Ethereum","Ethereum","Ethereum","Ethereum","Ethereum","EthereumConfig","Executive","ExecutivePallet","ExecutivePallet","ExecutivePallet","ExistentialDeposit","FindAuthorTruncated","GAS_PER_SECOND","GenesisConfig","Hash","Header","Id","Index","MAXIMUM_BLOCK_LENGTH","MAXIMUM_BLOCK_WEIGHT","MaxLocks","MaxReserves","Messenger","Messenger","Messenger","Messenger","MultiAddress","Nonce","OnXDMRewards","OperationalFeeMultiplier","OperatorRewards","OriginCaller","PalletInfo","Perbill","Permill","PostOnlyBlockHash","Precompiles","PrecompilesValue","Raw","RelayConfirmationDepth","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeBlockLength","RuntimeBlockWeights","RuntimeCall","RuntimeError","RuntimeEvent","RuntimeFreezeReason","RuntimeGenesisConfig","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","SelfChainId","SelfDomainId","SelfDomainIdConfig","SessionKeys","Signature","SignedBlock","SignedExtra","StateRootsBound","Sudo","Sudo","Sudo","Sudo","SudoConfig","System","System","System","System","SystemConfig","Timestamp","Timestamp","TransactionByteFee","TransactionConverter","TransactionPayment","TransactionPayment","TransactionPaymentConfig","Transporter","Transporter","Transporter","Transporter","TransporterEndpointId","UncheckedExtrinsic","VERSION","Version","Void","WASM_BINARY","WASM_BINARY_BLOATY","WEIGHT_MILLISECS_PER_BLOCK","WEIGHT_PER_GAS","WeightPerGas","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account_basic","account_code_at","account_nonce","add","add","add_filter","api","api_version","apply_extrinsic","apply_extrinsic_with_post_state_root","apply_self_contained","as_system_ref","assimilate_storage","author","balances","base_fee","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_messages","block_rewards","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","call","caller","chain_id","chain_id","check_inherents","check_self_contained","check_transaction_validity","checked_add","checked_add","checked_mul","checked_mul","checked_sub","checked_sub","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","construct_inherent_timestamp_extrinsic","construct_runtime_api","construct_set_code_extrinsic","convert","convert_transaction","convert_transaction","convert_transaction","correct_and_deposit_fee","crate_version","create","current_all","current_block","current_receipts","current_transaction_statuses","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_from","decode_from","decode_into_raw_public_keys","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","deconstruct","deconstruct","deconstruct","default","default","default","default","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_add","defensive_saturating_add","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_sub","defensive_saturating_sub","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","dispatch","dispatch_bypass_filter","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","elasticity","encode","encode","encode","encode_as","encode_as","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","ethereum","evm","evm_chain_id","execute_block","execute_in_transaction","executor","extract_proof","extract_signer","extract_signer","extract_xdm_proof_state_roots","extrinsic_filter","extrinsic_weight","filter_call","finalize_block","find_author","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_balance","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_dispatch_error","from_fd","from_filelike","from_float","from_float","from_float","from_float","from_into_filelike","from_into_socketlike","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_parts","from_parts","from_parts","from_percent","from_percent","from_perthousand","from_perthousand","from_rational","from_rational","from_rational_approximation","from_rational_approximation","from_rational_with_rounding","from_rational_with_rounding","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_socketlike","gas_limit_multiplier_support","gas_price","generate","generate_session_keys","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_metadata","get_call_names","get_dispatch_info","get_endpoint_handler","get_hash","get_module_names","get_open_channel_for_chain","get_raw","has_api","has_api_with","hash","ideal","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inbox_response_message_unsigned","index","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize_block","initialize_block_with_post_state_root","int_div","int_div","int_mul","int_mul","intermediate_roots","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_caller","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_raw_public_keys","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","into_system","is_clear","is_clear","is_domain_info_confirmed","is_one","is_one","is_self_contained","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_within_tx_range","is_zero","is_zero","is_zero","is_zero","key_ids","lower","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_value","max_value","max_value","max_value","metadata","metadata","metadata_at_version","metadata_at_version","metadata_versions","metadata_versions","min_value","min_value","min_value","min_value","module_name","mul","mul","mul","mul","mul","mul","mul_ceil","mul_ceil","mul_floor","mul_floor","name","native_version","none","none","offchain_worker","on_unbalanceds","on_xdm_rewards","one","one","one","one","opaque","outbox_message_unsigned","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pay_priority_fee","pending_block","pow","pow","pre_dispatch","pre_dispatch_self_contained","proof_recorder","query_fee_details","query_info","query_length_to_fee","query_weight_to_fee","record_proof","register_extension","relay_confirmation_depth","reset_filter","root","root","saturating_add","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_pow","saturating_pow","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_sub","saturating_sub","saturating_sub","saturating_sub","self_domain_id","serialize","serialize","serialize","serialize","set_call_context","set_caller_from","should_relay_inbox_message_response","should_relay_outbox_message","signed","signed","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","square","square","storage_at","storage_keys_for_verifying_transaction_validity","sub","sub","sudo","system","system","tcmp","tcmp","timestamp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction_payment","try_convert_back","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_from","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upper","using_encoded","using_encoded","using_encoded","validate_self_contained","validate_transaction","validate_unsigned","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","withdraw_fee","zero","zero","zero","zero","dispatch","AccountId","Block","BlockId","Header","UncheckedExtrinsic","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from_bytes","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_mut","into_ref","is_clear","serialize","size_hint","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","vzip"],"q":[[0,"evm_domain_test_runtime"],[1784,"evm_domain_test_runtime::api"],[1785,"evm_domain_test_runtime::opaque"]],"d":["Some way of identifying an account on the chain. We …","","<code>ActualPaidFeesHandler</code> used to collect all the fee in …","The address format for describing accounts.","Its a 20 byte representation.","It’s a 32 byte representation.","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","Balance of an account.","","","","","","","","","","","Block type as expected by this runtime.","EVM gas limit","","BlockId type as expected by this runtime.","An index to a block.","","Extrinsic type that has already been checked.","","","","","","","","","","","The existential deposit. Same with the one on primary …","","","","","","","Executive: handles dispatch to the various modules.","","","","","","Current approximation of the gas/s consumption considering …","","A hash of some data used by the chain.","Opaque block header type.","It’s an account ID (pubkey).","It’s an account index.","","","","","","","","","A multi-format address wrapper for on-chain accounts.","Index of a transaction in the chain.","","","","","Provides an implementation of <code>PalletInfo</code> to provide …","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","","Precompiles we use for EVM","","It’s some arbitrary raw bytes.","","","","Implements all runtime apis for the client side.","","","","","","A reason for placing a freeze on funds.","","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing funds.","","","","","Alias to 512-bit hash when used in the context of a …","A Block signed with a Justification","The SignedExtension to the basic transaction logic.","","","","","","","","","","","","","","","","","","","","","","","","Unchecked extrinsic type as expected by this runtime.","","","","","","We allow for 2000ms of compute with a 6 second average …","Approximate ratio of the amount of Weight per Gas. u64 …ecode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …","","","","","","","","","","","","","","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</coderimarily used for adding the executor authority key into …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Convert to runtime origin using […","Convert to runtime origin, using as filter: …","Returns the argument unchanged.","","Convert to runtime origin with caller being system signed …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Optionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.","","","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Generate a set of keys with optionally using the given …","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","","","","","","","","","","","","","See <code>PerThing::is_zero</code>.","","See <code>PerThing::is_zero</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","","The version information used to identify this runtime when …","","Create with system none origin and …","","","","","See <code>PerThing::one</code>","See <code>PerThing::one</code>","","Opaque types. These are used by the CLI to instantiate …","","","","","","","","","","","","","","","","","","","","","","","Create with system root origin and …","","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","","","","","","","","Create with system signed origin and …","","","","","","","","","","See <code>PerThing::square</code>.","See <code>PerThing::square</codeee <code>PerThing::zero</code>.","","See <code>PerThing::zero</code>.","","","Opaque account identifier type.","Opaque block type.","Opaque block identifier type.","Opaque block header type.","Simple blob to hold an extrinsic without committing to its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,52,52,0,0,0,0,0,0,0,0,45,67,20,0,0,45,20,0,0,0,0,0,0,0,0,0,0,0,0,45,67,20,0,0,0,0,0,0,45,67,23,20,0,0,0,45,20,0,0,0,0,0,0,52,52,0,0,0,0,0,45,67,20,0,0,0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,67,20,0,0,45,67,20,0,0,20,0,0,0,45,0,0,45,67,20,0,0,0,0,23,0,0,0,0,0,43,44,45,10,23,20,46,47,48,49,50,8,9,52,44,44,44,8,9,10,0,14,44,44,20,23,25,44,25,25,43,45,67,23,20,46,47,48,49,8,9,52,43,45,67,23,20,46,47,48,49,8,9,52,43,45,67,23,20,46,47,48,49,8,9,52,44,44,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,25,44,10,44,44,44,20,44,8,9,8,9,8,9,8,9,43,44,45,10,23,20,46,47,48,49,50,8,9,52,43,44,45,10,23,20,46,47,48,49,50,8,9,52,46,47,48,49,8,9,44,216,44,191,44,50,50,193,215,44,44,44,44,44,43,45,67,23,20,46,47,48,49,8,9,52,43,45,67,23,20,46,47,48,49,8,9,52,43,45,67,23,20,46,47,48,49,8,9,52,8,9,43,44,43,45,67,23,20,46,47,48,49,8,9,52,8,8,9,9,25,50,8,9,46,47,48,49,8,9,46,47,48,49,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,46,47,48,49,8,9,46,47,48,49,8,9,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,43,25,8,9,20,20,8,8,9,9,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,44,43,8,9,8,9,43,45,67,23,20,8,9,52,44,43,44,45,23,20,46,47,48,49,8,9,52,43,43,43,44,44,44,45,45,45,23,23,23,20,20,20,46,46,46,47,47,47,48,48,48,49,49,49,8,8,8,9,9,9,52,52,52,25,25,25,44,14,43,14,0,44,44,44,44,10,44,192,43,44,45,67,10,23,20,46,47,48,49,8,9,52,52,44,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,45,45,45,45,45,45,45,45,45,45,67,67,67,67,67,67,67,67,10,10,10,10,10,23,23,23,20,20,20,20,20,20,20,20,20,20,20,25,46,47,48,49,50,216,14,8,8,9,9,52,52,52,67,52,52,8,8,9,9,52,52,189,189,190,190,191,191,192,192,193,193,194,194,43,43,195,195,196,196,197,197,198,198,199,199,200,200,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,44,44,45,45,67,67,10,10,23,23,20,20,25,25,46,46,47,47,48,48,49,49,50,50,216,216,14,14,8,8,9,9,52,52,8,8,9,9,8,9,8,9,8,9,8,9,8,9,189,189,190,190,191,191,192,192,193,193,194,194,43,43,195,195,196,196,197,197,198,198,199,199,200,200,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,44,44,45,45,67,67,10,10,23,23,20,20,25,25,46,46,47,47,48,48,49,49,50,50,216,216,14,14,8,8,9,9,52,52,52,44,44,43,44,195,195,195,196,196,196,197,197,197,198,198,198,199,199,199,200,200,200,201,201,201,202,202,202,203,203,203,204,204,204,205,205,205,206,206,206,207,207,207,208,208,208,209,209,209,210,210,210,211,211,211,212,212,212,213,213,213,214,214,214,20,20,20,44,52,20,44,43,14,14,52,194,43,45,67,23,20,46,47,48,49,8,9,52,44,215,44,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,44,44,8,9,8,9,44,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,10,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,43,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,14,23,8,9,44,8,9,20,20,20,20,20,20,20,20,20,20,20,44,8,8,9,9,43,194,23,46,47,48,49,8,9,8,8,9,9,44,44,44,44,44,44,8,8,9,9,215,8,8,8,9,9,9,8,9,8,9,215,0,10,10,44,189,190,8,8,9,9,0,44,46,47,48,49,8,9,193,44,8,9,44,20,14,44,44,44,44,14,14,44,10,10,10,8,8,9,9,8,9,8,9,8,9,8,9,8,9,8,9,8,8,9,9,25,43,25,8,9,14,10,44,44,10,10,43,45,67,23,20,8,9,52,8,9,44,44,8,9,25,25,23,8,9,44,43,45,67,23,20,46,47,48,49,8,9,52,43,44,45,10,23,20,46,47,48,49,50,8,9,52,52,25,191,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,45,45,45,45,45,45,45,45,45,45,67,67,67,67,67,67,67,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,10,43,45,67,23,20,46,47,48,49,8,9,52,43,45,67,23,20,46,47,48,49,8,9,52,43,45,67,23,20,46,47,48,49,8,9,52,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,43,44,45,67,23,20,46,47,48,49,8,9,52,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,8,9,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,194,43,8,9,20,44,44,44,189,190,191,192,193,194,43,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,44,45,67,10,23,20,25,46,47,48,49,50,216,14,8,9,52,193,8,8,9,9,0,0,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[2,3],[2,[[5,[4]]]],[6,7],[[8,8]],[[9,9]],[[10,11]],0,[[[14,[12,[13,[12]]]]],[[18,[[16,[15]],17]]]],[[],19],[[],[[5,[4]]]],[20,[[16,[[22,[[21,[20]]]]]]]],[23,[[16,[24]]]],[[25,26],[[18,[27]]]],[[],2],0,0,[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],30],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],[[2,2,[5,[4]],32,32,[16,[32]],[16,[32]],[16,[32]],33,[16,[5]]],[[18,[34,35]]]],[10],[[],36],[[],37],[[38,39],40],[20,[[16,[[18,[41]]]]]],[[],[[18,[42]]]],[[8,8],[[16,[8]]]],[[9,9],[[16,[9]]]],[[8,8],[[16,[8]]]],[[9,9],[[16,[9]]]],[[8,8],[[16,[8]]]],[[9,9],[[16,[9]]]],[[]],[[]],[43,43],[44,44],[45,45],[10,10],[23,23],[20,20],[46,46],[47,47],[48,48],[49,49],[50,50],[8,8],[9,9],[[[52,[51,51]]],[[52,[51,51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[46,46],53],[[47,47],53],[[48,48],53],[[49,49],53],[[8,8],53],[[9,9],53],[54,16],[[[13,[12]]],55],[[[5,[4]]],[[5,[4]]]],[6,56],[57],[[50,57],58],[[50,57],59],[[2,32,32]],[[],[[16,[60]]]],[[2,[5,[4]],32,32,[16,[32]],[16,[32]],[16,[32]],33,[16,[5]]],[[18,[61,35]]]],[[]],[[],[[16,[62]]]],[[],[[16,[[5,[63]]]]]],[[],[[16,[[5,[64]]]]]],[65,[[18,[43,66]]]],[65,[[18,[45,66]]]],[65,[[18,[67,66]]]],[65,[[18,[23,66]]]],[65,[[18,[20,66]]]],[65,[[18,[46,66]]]],[65,[[18,[47,66]]]],[65,[[18,[48,66]]]],[65,[[18,[49,66]]]],[65,[[18,[8,66]]]],[65,[[18,[9,66]]]],[65,[[18,[[52,[68,69]],66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[],[[18,[8,66]]]],[[],[[18,[9,66]]]],[[[70,[4]]],[[16,[5]]]],[[[5,[4]]],[[16,[5]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[[15,65],[[18,[66]]]],[8,15],[8],[9],[9,15],[[],25],[[],50],[[],8],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[72,[[18,[43]]]],[72,[[18,[25]]]],[72,[[18,[8]]]],[72,[[18,[9]]]],[[20,10],73],[[20,10],73],[[8,8]],[8],[[9,9]],[9],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[71],[[],[[16,[8]]]],[43,[[5,[4]]]],[8,[[5,[4,29]]]],[9,[[5,[4,29]]]],[8],[9],[[43,[0,[74,75]]]],[[45,[0,[74,75]]]],[[67,[0,[74,75]]]],[[23,[0,[74,75]]]],[[20,[0,[74,75]]]],[[8,[0,[74,75]]]],[[9,[0,[74,75]]]],[[[52,[76,69]],[0,[74,75]]]],[[],[[18,[15]]]],[[43,43],33],[[44,44],33],[[45,45],33],[[23,23],33],[[20,20],33],[[46,46],33],[[47,47],33],[[48,48],33],[[49,49],33],[[8,8],33],[[9,9],33],[[[52,[[77,[[77,[[77,[77]]]]]],[77,[[77,[[77,[77]]]]]]]],[52,[[77,[[77,[[77,[77]]]]]],[77,[[77,[[77,[77]]]]]]]]],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,0,0,[38],[[[14,[12,[13,[12]]]],78]],0,[[[14,[12,[13,[12]]]]],[[16,[79]]]],[[[5,[59]]],5],[5,5],[[[5,[4]]],[[16,[[81,[80]]]]]],[5,[[5,[57]]]],[[],82],[10,33],[[]],[83,[[16,[2]]]],[[43,84],85],[[44,84],85],[[45,84],85],[[67,84],85],[[10,84],[[18,[86]]]],[[23,84],85],[[20,84],85],[[46,84],85],[[47,84],85],[[48,84],85],[[49,84],85],[[8,84],[[18,[86]]]],[[9,84],[[18,[86]]]],[[[52,[87,87]],84],[[18,[86]]]],[[[52,[87,87]],84],[[18,[86]]]],[6,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[88,[44]]],45],[[]],[[[89,[44]]],45],[90,45],[[[91,[44]]],45],[[[92,[44]]],45],[93,45],[[[94,[44]]],45],[[[95,[44]]],45],[[[96,[44]]],45],[[[97,[44]]],45],[[]],[[[98,[44]]],67],[[[99,[44]]],67],[[[100,[44]]],67],[[[101,[44]]],67],[[[102,[44]]],67],[[[103,[44]]],67],[[[104,[44]]],67],[105,10],[[[106,[44]]],10],[[]],[23,10],[16,10],[[[106,[44]]],23],[105,23],[[]],[[]],[[[108,[107,44]]],20],[[[108,[109,44]]],20],[[[108,[110,44]]],20],[[[108,[111,44]]],20],[[[108,[112,44]]],20],[[[108,[113,44]]],20],[[[108,[114,44]]],20],[[[108,[115,44]]],20],[[[108,[116,44]]],20],[[[108,[117,44]]],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[118,[8]]],8],[[]],[[]],[[[118,[9]]],9],[[]],[[],52],[119],[35,[[16,[67]]]],[120],[120],[121,8],[121,8],[121,9],[121,9],[122],[123],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,8],[[],8],[15,9],[[],9],[15,8],[15,9],[15,8],[15,9],[[[0,[124,[125,[15]],[125,[36]]]],[0,[124,[125,[15]],[125,[36]]]]],8],[[[0,[124,[125,[15]],[125,[36]]]],[0,[124,[125,[15]],[125,[36]]]]],9],[[[0,[124,[125,[15]],[125,[36]]]],[0,[124,[125,[15]],[125,[36]]]]],8],[[[0,[124,[125,[15]],[125,[36]]]],[0,[124,[125,[15]],[125,[36]]]]],9],[[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]],[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]],135],[[18,[8]]]],[[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]],[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[128,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[129,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],[130,[[0,[51,126,125,125,[127,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[128,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[129,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],[130,[[0,[51,126,125,125,127,128,129,130,131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]]]],131,132,133,134]],135],[[18,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[120],[[]],[[],32],[[[16,[[5,[4]]]]],[[5,[4]]]],[[[16,[[5,[4]]]]],[[5,[4]]]],[[],[[137,[136]]]],[[],136],[[],136],[[],80],[[],80],[[],[[137,[80]]]],[[],[[137,[138]]]],[[],138],[[],138],[[],[[137,[139]]]],[[],139],[[],139],[[],31],[[],[[137,[31]]]],[[],31],[[],15],[[],[[137,[15]]]],[[],15],[[],[[137,[15]]]],[[],15],[[],15],[[],31],[[],[[137,[31]]]],[[],31],[[],4],[[],4],[[],[[137,[4]]]],[[],15],[[],15],[[],[[137,[15]]]],[[],80],[[],80],[[],[[137,[80]]]],[[],37],[[],[[137,[37]]]],[[],37],[[],140],[[],[[137,[140]]]],[[],140],[[],[[137,[32]]]],[[],32],[[],32],[[],141],[[],[[137,[141]]]],[[],141],[[],82],[[],82],[[],[[137,[82]]]],[[],142],[[],[[137,[142]]]],[[],142],[[],[[137,[32]]]],[[],32],[[],32],[[],32],[[],[[137,[32]]]],[[],32],[[],8],[[],8],[[],[[137,[8]]]],[20,143],[144,[[70,[144]]]],[20,145],[146,[[16,[[148,[147]]]]]],[[[0,[149,75]],150],36],[[],[[70,[144]]]],[37,[[16,[151]]]],[[43,152],[[70,[4]]]],[[[14,[12,[13,[12]]]]],[[18,[33,17]]]],[[[14,[12,[13,[12]]]],11],[[18,[33,17]]]],[[[52,[149,149]],153]],[[],8],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[[154,[80]]],16],[[],[[16,[71]]]],[39,5],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[]],[[],[[5,[4]]]],[[8,8],15],[[9,9],15],[[8,15],8],[[9,15],9],[[],[[5,[[28,[4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[12,[13,[12]]]],[156,[[155,[12]]]]],[[18,[[157,[12]],27]]]],[23,[[16,[24]]]],[[],33],[[],33],[[158,[159,[80]]],33],[8,33],[9,33],[20,33],[20,[[16,[[108,[109,44]]]]]],[20,[[16,[[108,[107,44]]]]]],[20,[[16,[[108,[113,44]]]]]],[20,[[16,[[108,[110,44]]]]]],[20,[[16,[[108,[115,44]]]]]],[20,[[16,[[108,[111,44]]]]]],[20,[[16,[[108,[117,44]]]]]],[20,[[16,[[108,[116,44]]]]]],[20,[[16,[[108,[114,44]]]]]],[20,[[16,[[108,[112,44]]]]]],[[160,160],33],[8,33],[8,33],[9,33],[9,33],[[],[[70,[152]]]],[[],8],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],8],[[]],[[],9],[[]],[[],161],[[],162],[15,[[16,[162]]]],[15,[[16,[162]]]],[[],[[5,[15]]]],[[],[[5,[15]]]],[[],8],[[]],[[]],[[],9],[[],[[16,[144]]]],[[8,82],82],[[8,8]],[[8,[0,[[127,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],51,[163,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],131]]]],51,[163,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],51,[163,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],51,[163,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],51,[163,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],131]]]],131]]]],[[9,82],82],[[9,[0,[[127,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],51,[163,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],131]]]],51,[163,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],51,[163,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],51,[163,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],51,[163,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],[128,[[0,[[127,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],51,[163,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[164,[15]],[129,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],[128,[[0,[[127,[[0,[127,51,163,164,129,128,131]]]],51,[163,[[0,[127,51,163,164,129,128,131]]]],[164,[15]],[129,[[0,[127,51,163,164,129,128,131]]]],[128,[[0,[127,51,163,164,129,128,131]]]],131]]]],131]]]],131]]]],131]]]],[[9,9]],[[8,[0,[165,[164,[15]]]]],[[0,[165,[164,[15]]]]]],[[9,[0,[165,[164,[15]]]]],[[0,[165,[164,[15]]]]]],[[8,[0,[165,[164,[15]]]]],[[0,[165,[164,[15]]]]]],[[9,[0,[165,[164,[15]]]]],[[0,[165,[164,[15]]]]]],[[],[[16,[144]]]],[[],166],[[],10],[[],10],[[]],[167],[31],[[],8],[[],8],[[],9],[[],9],0,[[[154,[80]]],16],[[46,46],[[16,[53]]]],[[47,47],[[16,[53]]]],[[48,48],[[16,[53]]]],[[49,49],[[16,[53]]]],[[8,8],[[16,[53]]]],[[9,9],[[16,[53]]]],[[]],[5],[[8,71]],[[9,71]],[[],[[18,[41]]]],[[20,[168,[20]],71],[[16,[[18,[41]]]]]],[[[14,[12,[13,[12]]]]],[[16,[[169,[12]]]]]],[15,[[170,[31]]]],[15,[[171,[31]]]],[15,31],[82,31],[[[14,[12,[13,[12]]]]]],[[[14,[12,[13,[12]]]],172]],[[],80],[10],[[],10],[[],10],[[8,8],8],[[8,8],8],[[9,9],9],[[9,9],9],[[8,8,135],8],[[9,9,135],9],[[8,8],8],[[9,9],9],[[8,71],8],[[9,71],9],[[8,[0,[173,[164,[15]]]]],[[0,[173,[164,[15]]]]]],[[9,[0,[173,[164,[15]]]]],[[0,[173,[164,[15]]]]]],[[8,[0,[173,[164,[15]]]]],[[0,[173,[164,[15]]]]]],[[9,[0,[173,[164,[15]]]]],[[0,[173,[164,[15]]]]]],[[8,[0,[173,[164,[15]]]]],[[0,[173,[164,[15]]]]]],[[9,[0,[173,[164,[15]]]]],[[0,[173,[164,[15]]]]]],[[8,8],8],[[8,8],8],[[9,9],9],[[9,9],9],0,[[43,174],18],[[25,174],18],[[8,174],18],[[9,174],18],[[[14,[12,[13,[12]]]],175]],[[10,[176,[10]]]],[[37,177],33],[[37,177],33],[[],10],[[],10],[43,71],[45,71],[67,71],[23,71],[20,71],[8,71],[9,71],[[[52,[76,69]]],71],[8,8],[9,9],[[2,32],178],[179,[[18,[[5,[[5,[4]]]],180]]]],[[8,8]],[[9,9]],0,0,0,[[],53],[[],53],[[],54],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[[70,[4]]],[[5,[4,29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],0,[56,[[16,[6]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[45,[[18,[[89,[44]]]]]],[45,[[18,[[91,[44]]]]]],[45,[[18,[[96,[44]]]]]],[45,[[18,[93]]]],[45,[[18,[[94,[44]]]]]],[45,[[18,[[92,[44]]]]]],[45,[[18,[90]]]],[45,[[18,[[95,[44]]]]]],[45,[[18,[[88,[44]]]]]],[45,[[18,[[97,[44]]]]]],[[],18],[[],18],[67,[[18,[[102,[44]]]]]],[67,[[18,[[103,[44]]]]]],[67,[[18,[[99,[44]]]]]],[67,[[18,[[100,[44]]]]]],[67,[[18,[[98,[44]]]]]],[67,[[18,[[101,[44]]]]]],[67,[[18,[[104,[44]]]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[10,78],[[18,[10]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],[[5,[4,29]]]],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],181],[[],182],[[],182],[[],182],[[],182],[[],182],[[],182],[[],182],[[],182],[[],182],[[],182],[[],[[182,[183]]]],[[],[[182,[183]]]],[[],[[182,[183]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[43,78]],[[8,78]],[[9,78]],[[20,[168,[20]],71],[[16,[184]]]],[185,184],[185,184],[[],136],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,32],[[18,[[101,[44]]]]]],[[],8],[[],8],[[],9],[[],9],[[144,[70,[4]]],[[16,[[5,[4]]]]]],0,0,0,0,0,[1],[[],[[28,[4]]]],[[],[[5,[4,29]]]],[[],[[28,[4]]]],[[]],[[]],[[]],[58,58],[[]],[65,[[18,[58,66]]]],[[[70,[4]]],[[18,[66]]]],[[15,[70,[4]]],[[18,[66]]]],[[15,65],[[18,[66]]]],[[],58],[71],[71],[72,[[18,[58]]]],[71],[58,[[5,[4,29]]]],[[58,[0,[74,75]]]],[[58,58],33],[[],33],[[],33],[[],33],[[58,84],[[18,[86]]]],[[[187,[76,76,76,186]]],58],[[[188,[76,76,76,186]]],58],[[]],[[[70,[4]]],[[18,[58,66]]]],[[]],[[]],[[]],[[]],[[],[[5,[4,29]]]],[[],71],[[]],[[]],[[]],[[],33],[[58,174],18],[58,71],[[[70,[4]]],[[5,[4,29]]]],[[]],[[],18],[[],18],[[],[[28,[4]]]],[[],[[28,[4]]]],[[],[[5,[4,29]]]],[[],181],[[],[[182,[183]]]],[[]],[[]],[[58,78]],[[]]],"c":[6,7,9,11,54,884,885],"p":[[3,"Private"],[3,"H160"],[3,"Basic"],[15,"u8"],[3,"Vec"],[6,"AccountId"],[6,"Nonce"],[3,"Permill"],[3,"Perbill"],[3,"RuntimeOrigin"],[8,"Fn"],[8,"Block"],[8,"CallApiAt"],[3,"RuntimeApiImpl"],[15,"u32"],[4,"Option"],[4,"ApiError"],[4,"Result"],[6,"ApplyExtrinsicResult"],[4,"RuntimeCall"],[6,"PostDispatchInfoOf"],[6,"DispatchResultWithInfo"],[4,"OriginCaller"],[4,"RawOrigin"],[3,"RuntimeGenesisConfig"],[3,"Storage"],[3,"String"],[15,"array"],[3,"Global"],[3,"BlockMessagesWithStorageKey"],[6,"Balance"],[3,"U256"],[15,"bool"],[6,"CallInfo"],[4,"DispatchError"],[15,"u64"],[4,"ChainId"],[6,"Block"],[3,"InherentData"],[3,"CheckInherentsResult"],[4,"TransactionValidityError"],[4,"CheckTxValidityError"],[3,"SessionKeys"],[3,"Runtime"],[4,"RuntimeEvent"],[4,"RuntimeFreezeReason"],[4,"RuntimeHoldReason"],[4,"RuntimeLockId"],[4,"RuntimeSlashReason"],[3,"TransactionConverter"],[8,"Clone"],[4,"MultiAddress"],[4,"Ordering"],[6,"Moment"],[3,"ApiRef"],[4,"MultiAccountId"],[4,"TransactionV2"],[3,"UncheckedExtrinsic"],[6,"UncheckedExtrinsic"],[3,"CrateVersion"],[6,"CreateInfo"],[6,"BlockV2"],[4,"ReceiptV3"],[3,"TransactionStatus"],[8,"Input"],[3,"Error"],[4,"RuntimeError"],[8,"Decode"],[8,"HasCompact"],[15,"slice"],[15,"usize"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[8,"Encode"],[8,"PartialEq"],[8,"FnOnce"],[3,"StorageProof"],[6,"BlockNumber"],[3,"ExtractedStateRootsFromProof"],[3,"Weight"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"Error"],[8,"Debug"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[6,"Origin"],[6,"Origin"],[6,"Ethereum"],[6,"CallableCallFor"],[6,"Messenger"],[6,"Timestamp"],[6,"BaseFee"],[6,"Sudo"],[6,"Transporter"],[6,"Balances"],[6,"EVM"],[6,"ExecutivePallet"],[6,"System"],[3,"Compact"],[15,"never"],[3,"OwnedFd"],[15,"f64"],[8,"IntoFilelike"],[8,"IntoSocketlike"],[8,"RationalArg"],[8,"TryInto"],[8,"Ord"],[8,"Div"],[8,"Rem"],[8,"Add"],[8,"AddAssign"],[8,"Unsigned"],[8,"Zero"],[8,"One"],[8,"MultiplyRational"],[4,"Rounding"],[3,"RuntimeVersion"],[8,"From"],[3,"BlockLength"],[3,"BlockWeights"],[6,"EndpointId"],[6,"Precompiles"],[4,"PostLogContent"],[3,"CallMetadata"],[15,"str"],[3,"DispatchInfo"],[4,"Endpoint"],[8,"EndpointHandler"],[3,"Box"],[8,"Hash"],[8,"BuildHasher"],[6,"ChannelId"],[3,"KeyTypeId"],[8,"Hasher"],[3,"CrossDomainMessage"],[6,"HashingFor"],[8,"Backend"],[6,"StorageChanges"],[3,"DomainId"],[3,"BlockInfo"],[3,"U256"],[3,"RuntimeMetadataPrefixed"],[3,"OpaqueMetadata"],[8,"Mul"],[8,"UniqueSaturatedInto"],[8,"MultiplyArg"],[3,"NativeVersion"],[8,"Iterator"],[6,"DispatchInfoOf"],[6,"ProofRecorder"],[3,"FeeDetails"],[3,"RuntimeDispatchInfo"],[8,"Extension"],[8,"ReciprocalArg"],[8,"Serializer"],[4,"CallContext"],[8,"Into"],[6,"MessageId"],[3,"H256"],[6,"AccountId"],[4,"VerifyTxValidityError"],[3,"TypeId"],[3,"Type"],[4,"MetaForm"],[6,"TransactionValidity"],[4,"TransactionSource"],[8,"SignedExtension"],[3,"UncheckedExtrinsic"],[3,"UncheckedExtrinsic"],[3,"ActualPaidFeesHandler"],[3,"OnXDMRewards"],[3,"AccountId20Converter"],[3,"FindAuthorTruncated"],[3,"EVMCurrencyAdapter"],[3,"BaseFeeThreshold"],[3,"Version"],[3,"BlockHashCount"],[3,"RuntimeBlockLength"],[3,"RuntimeBlockWeights"],[3,"ExistentialDeposit"],[3,"MaxLocks"],[3,"MaxReserves"],[3,"TransactionByteFee"],[3,"OperationalFeeMultiplier"],[3,"StateRootsBound"],[3,"RelayConfirmationDepth"],[3,"SelfChainId"],[3,"TransporterEndpointId"],[3,"BlockGasLimit"],[3,"PrecompilesValue"],[3,"WeightPerGas"],[3,"PostOnlyBlockHash"],[3,"BoundDivision"],[3,"DefaultBaseFeePerGas"],[3,"DefaultElasticity"],[3,"PalletInfo"],[3,"RuntimeApi"]]},\
"orml_vesting":{"doc":"Vesting Module","t":"RDILLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMLMLLLLLLLLLLLLKKLNQENIQEEDNQNQGDQGNQNGNQNNLLLLLLLLLLLLLLLLLLLLLLLLLNLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLNMLLLLLLLLMMMMMMMMMMMFFFFDLLLLLLLLLLLLLLLLLLLL","n":["VESTING_LOCK_ID","VestingSchedule","WeightInfo","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","claim","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","drop","encode_to","end","eq","equivalent","equivalent","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_mut","into_ref","locked_amount","max_encoded_len","module","per_period","period","period_count","size_hint","start","to_keyed_vec","to_owned","total_amount","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","update_vesting_schedules","vested_transfer","vzip","AmountLow","BlockNumberProvider","Call","Claimed","Config","Currency","Error","Event","GenesisConfig","InsufficientBalanceToLock","MaxVestingSchedules","MaxVestingSchedulesExceeded","MinVestedTransfer","Module","Pallet","RuntimeEvent","ScheduledItem","TooManyVestingSchedules","VestedTransferOrigin","VestingScheduleAdded","VestingSchedules","VestingSchedulesUpdated","WeightInfo","ZeroVestingPeriod","ZeroVestingPeriodCount","__clone_box","__clone_box","__clone_box","assimilate_storage","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","claim","claim","claim_for","claim_for","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","module_name","name","new_call_variant_claim","new_call_variant_claim_for","new_call_variant_update_vesting_schedules","new_call_variant_vested_transfer","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","serialize","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_vesting_schedules","update_vesting_schedules","vested_transfer","vested_transfer","vesting","vesting_schedules","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","dest","dest","schedule","vesting_schedules","who","amount","from","to","vesting_schedule","who","who","claim","claim_for","update_vesting_schedules","vested_transfer","VestingSchedules","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"orml_vesting"],[59,"orml_vesting::module"],[305,"orml_vesting::module::Call"],[310,"orml_vesting::module::Event"],[316,"orml_vesting::module::dispatchables"],[320,"orml_vesting::module::storage_types"]],"d":["","The vesting schedule.","Weight functions needed for orml_vesting.","","","","","","","","","","","","","","","","","","Returns the end of all periods, <code>None</code> if calculation …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","Returns locked amount for a given <code>time</code>.","","The <code>pallet</code> module in each FRAME pallet hosts the most …","Amount of tokens to release per vest","Number of blocks between vest","Number of vest","","Vesting starting block","","","Returns all locked amount, <code>None</code> if calculation overflows.","","","","","","","","","","","","","The vested transfer amount is too low","","Contains a variant per dispatchable extrinsic that this …","Claimed vesting.","Configuration trait of this pallet.","","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Can be used to configure the genesis state of this pallet.","Insufficient amount of balance to lock","The maximum vesting schedules","Failed because the maximum vesting schedules was exceeded","The minimum amount transferred to call <code>vested_transfer</code>.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","","","This account have too many vesting schedules","Required origin for vested transfer.","Added new vesting schedule.","Vesting schedules of an account.","Updated vesting schedules.","Weight information for extrinsics in this module.","Vesting period is zero","Number of vests is zero","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::claim</code>.","","See <code>Pallet::claim_for</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Create a call with the variant <code>claim</code>.","Create a call with the variant <code>claim_for</code>.","Create a call with the variant <code>update_vesting_schedules</code>.","Create a call with the variant <code>vested_transfer</code>.","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::update_vesting_schedules</code>.","","See <code>Pallet::vested_transfer</code>.","","An auto-generated getter for <code>VestingSchedules</code>.","","","","","","","","","","","","","","","","","","","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Vesting schedules of an account.","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,11,11,11,11,11,11,56,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,56,56,11,41,31,0,37,0,31,0,0,0,41,31,41,31,0,0,31,0,41,31,37,0,37,31,41,41,37,38,39,32,41,37,39,41,37,39,41,37,39,41,37,32,38,39,41,37,32,38,39,32,38,39,38,39,37,38,39,37,38,39,38,38,38,41,37,39,41,37,39,41,37,39,41,37,39,32,41,37,32,38,39,41,37,32,38,39,32,39,0,41,37,32,38,39,41,37,39,37,38,39,37,37,37,38,38,38,39,39,39,41,37,38,39,41,37,32,38,39,41,41,37,37,32,32,38,38,39,39,41,41,37,37,32,32,38,38,39,39,39,39,39,39,39,41,37,39,38,38,41,37,32,38,39,38,41,37,32,38,39,41,37,32,38,39,41,37,32,38,39,38,38,39,39,39,39,38,38,38,38,38,38,38,32,41,37,39,38,0,41,37,39,37,38,39,41,37,32,38,39,41,37,32,38,39,0,0,0,41,37,39,41,37,39,41,37,39,41,37,32,38,39,41,37,39,41,37,32,38,39,41,37,32,38,39,38,39,38,39,32,38,41,37,32,38,39,38,41,57,58,57,59,59,60,61,61,61,60,62,0,0,0,0,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63],"f":[0,0,0,[1],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[3,[2]]]],[[]],[[]],[6,7],[[[11,[8,[0,[8,9,10]]]]],[[11,[8,[0,[8,9,10]]]]]],[[]],[12,[[15,[[11,[13,[0,[10,9,10]]]],14]]]],[[[16,[2]]],[[15,[14]]]],[[6,[16,[2]]],[[15,[14]]]],[[6,12],[[15,[14]]]],[17],[17],[17],[[[11,[18,[0,[10,9,10]]]],[0,[19,20]]]],[[[11,[[0,[21,22]],[0,[21,9,22]]]]],[[23,[[0,[21,22]]]]]],[[[11,[24,[0,[24,9,10]]]],[11,[24,[0,[24,9,10]]]]],25],[[],25],[[],25],[[],25],[[[11,[26,[0,[26,9,10]]]],27],28],[[]],[[]],[[]],[[]],[[]],[[],[[5,[2,4]]]],[[],17],[[]],[[]],[[]],[[[11,[[0,[21,22]],[0,[21,9,22]]]],[0,[21,22]]],[[0,[21,9,22]]]],[[],17],0,0,0,0,[[[11,[18,[0,[10,9,10]]]]],17],0,[[[16,[2]]],[[5,[2,4]]]],[[]],[[[11,[[0,[21,22]],[0,[21,9,22]]]]],[[23,[[0,[21,9,22]]]]]],[[],15],[[],15],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],29],[[],30],[[]],[[]],[6,7],[[],7],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[32,[31]],33],[[15,[34]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[32,[31]]]],[[[35,[31]]],36],0,[[[35,[31]]],36],0,[[[37,[31]]],[[37,[31]]]],[38,38],[[[39,[31]]],[[39,[31]]]],[[]],[[]],[[]],[[],17],[[],40],[[]],[12,[[15,[41,14]]]],[12,[[15,[[37,[31]],14]]]],[12,[[15,[[39,[31]],14]]]],[[[16,[2]]],[[15,[14]]]],[[[16,[2]]],[[15,[14]]]],[[[16,[2]]],[[15,[14]]]],[[6,[16,[2]]],[[15,[14]]]],[[6,[16,[2]]],[[15,[14]]]],[[6,[16,[2]]],[[15,[14]]]],[[6,12],[[15,[14]]]],[[6,12],[[15,[14]]]],[[6,12],[[15,[14]]]],[[],[[32,[31]]]],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[42,[[15,[[32,[31]]]]]],[[[39,[31]]],43],0,[17],[17],[17],[17],[17],[[41,[0,[19,20]]]],[[[37,[31]],[0,[19,20]]]],[[[39,[31]],[0,[19,20]]]],[[[37,[31]],[37,[31]]],25],[[38,38],25],[[[39,[31]],[39,[31]]],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[[41,[31]],27],28],[[[37,[31]],27],28],[[38,27],28],[[[39,[31]],27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[39,[31]]],2],[[],[[16,[2]]]],[[[39,[31]]],44],[[],[[16,[44]]]],[[[39,[31]]],45],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],17],[[],[[5,[46]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],44],[[],44],[[],[[39,[31]]]],[[],[[39,[31]]]],[[[5,[[11,[[47,[31]]]]]]],[[39,[31]]]],[[[11,[[47,[31]]]]],[[39,[31]]]],[[[47,[31]]]],[[],48],[[[47,[31]]]],[[]],[[[47,[31]],7],7],[[[47,[31]]],7],[[],7],[[[32,[31]],49],15],[41,17],[[[37,[31]]],17],[[[39,[31]]],17],[[],[[5,[50]]]],0,[[[16,[2]]],[[5,[2,4]]]],[[[16,[2]]],[[5,[2,4]]]],[[[16,[2]]],[[5,[2,4]]]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],30],[[],30],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[35,[31]],[5,[[11,[[47,[31]]]]]]],36],0,[[[35,[31]],[11,[[47,[31]]]]],36],0,0,[51,[[52,[[11,[[47,[31]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[53]]]],[7,[[55,[54]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[5,[[11,[[47,[31]]]]]]]],[[[11,[[47,[31]]]]]],0,[[]],[[]],[17],[17],[17],[[]],[[]],[[]],[[]],[[]],[[],17],[[]],[[]],[[]],[[],15],[[],15],[[],29],[[]],[[]],[[]]],"c":[72],"p":[[3,"Private"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[15,"u32"],[3,"Weight"],[8,"Clone"],[8,"MaxEncodedLen"],[8,"HasCompact"],[3,"VestingSchedule"],[8,"Input"],[8,"Decode"],[3,"Error"],[4,"Result"],[15,"slice"],[15,"usize"],[8,"Encode"],[8,"Output"],[8,"Sized"],[8,"AtLeast32Bit"],[8,"Copy"],[4,"Option"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[3,"Type"],[8,"Config"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[6,"OriginFor"],[6,"DispatchResult"],[4,"Event"],[3,"Pallet"],[4,"Call"],[3,"CrateVersion"],[4,"Error"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[8,"Serializer"],[3,"StorageInfo"],[8,"EncodeLike"],[3,"BoundedVec"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[13,"vested_transfer"],[13,"claim_for"],[13,"update_vesting_schedules"],[13,"Claimed"],[13,"VestingScheduleAdded"],[13,"VestingSchedulesUpdated"],[3,"VestingSchedules"]]},\
"pallet_domain_id":{"doc":"Pallet Domain Id","t":"EIDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLALLLLLLLLLCCCLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLL","n":["Call","Config","GenesisConfig","Module","Pallet","__clone_box","__clone_box","assimilate_storage","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","domain_id","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","index","infos","init","init","init","integrity_test","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","module_name","name","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","phantom","self_domain_id","serialize","storage_info","storage_types","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","whitelisted_storage_keys","SelfDomainId","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_domain_id"],[132,"pallet_domain_id::storage_types"]],"d":["Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Can be used to configure the genesis state of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Pallet domain-id to store self domain id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Warning: Doc-Only","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,11,12,3,12,12,12,11,3,12,11,3,12,3,11,12,11,12,11,11,11,12,12,12,12,3,11,3,12,11,3,12,3,12,0,3,11,3,12,11,12,11,11,11,12,12,12,11,12,11,3,12,11,11,3,3,12,12,11,11,3,3,12,12,12,12,12,12,12,12,11,11,11,3,12,11,11,3,12,11,3,12,11,3,12,11,11,11,11,11,11,11,11,11,3,11,3,11,0,12,11,12,11,3,12,11,3,12,0,0,0,12,12,12,11,3,12,12,11,3,12,11,3,12,11,3,12,11,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36],"f":[0,0,0,0,0,[1],[1],[[[3,[2]],4],[[6,[5]]]],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]]],[11,11],[[[12,[2]]],[[12,[2]]]],[[]],[[]],[[],13],[[],14],[[]],[15,[[6,[[12,[2]],16]]]],[[[17,[7]]],[[6,[16]]]],[[18,[17,[7]]],[[6,[16]]]],[[18,15],[[6,[16]]]],[[],3],[13],[13],[13],[13],[13],[13],[19,[[6,[3]]]],[[[12,[2]]],20],0,0,[13],[13],[13],[[11,11],21],[[[12,[2]],[12,[2]]],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[11,22],23],[[[12,[2]],22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[2]]],7],[[],[[17,[7]]]],[[[12,[2]]],24],[[],[[17,[24]]]],[[[12,[2]]],25],[[],[[10,[7,9]]]],[[],13],[[],[[10,[26]]]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[[27,[2]]]],[[],28],[[[27,[2]]]],[[]],[[[27,[2]],29],29],[[[27,[2]]],29],[[],29],0,[[],30],[[3,31],6],[[],[[10,[32]]]],0,[[[17,[7]]],[[10,[7,9]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],33],[[],33],[[],33],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[10,[35]]]],0,[[]],[[]],[13],[13],[13],[[]],[[]],[[]],[[]],[[]],[[],13],[[]],[[]],[[]],[[],6],[[],6],[[],33],[[]],[[]],[[]]],"c":[3],"p":[[3,"Private"],[8,"Config"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[4,"Result"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[15,"slice"],[15,"u32"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[3,"DomainId"],[8,"Serializer"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"SelfDomainId"]]},\
"pallet_domains":{"doc":"Pallet Domains","t":"NNNNNQENNENIQGQNNQNQQNNQNNQNEEGGNNENDIQQNNNNNQQQQQQGGNNNNNDNQNQNQQQNNNQNQDQNLLLLLNLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLALLLKALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLNLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLNLNLALLLLLLLKKKLALNLLNLLLNLLLLLLLLLLLLLLLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLALLLNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNDENNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFNDNDENNNNNNNNLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNNNNDNDNLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIKLLLLLKLLLLLLLLKLLLLKLKLKLKLKLKLLLLLLKLLKL","n":["BadBundleSignature","BadOperator","BadReceiptNotFound","BadVrfSignature","BlockTree","BlockTreePruningDepth","BundleError","BundleStored","BundleTooLarge","Call","ChallengingGenesisReceipt","Config","ConfirmationDepthK","ConsensusBlockHash","Currency","DescendantsOfFraudulentERNotPruned","DomainEpochCompleted","DomainHash","DomainInstantiated","DomainInstantiationDeposit","DomainNumber","DomainRegistry","DomainRuntimeCreated","DomainRuntimeUpgradeDelay","DomainRuntimeUpgradeScheduled","DomainRuntimeUpgraded","DomainTxRangeAdjustmentInterval","DuplicatedBundle","Error","Event","ExecutionInbox","ExecutionReceiptOf","FailedToDecodeDomainBlockHash","FraudProof","FraudProofError","FraudProofProcessed","GenesisConfig","HoldIdentifier","HoldIdentifier","InitialDomainTxRange","InvalidDomainId","InvalidExtrinsicRoot","InvalidOperatorId","InvalidTotalRewardsFraudProof","InvalidTotalRewardsProof","MaxBundlesPerBlock","MaxDomainBlockSize","MaxDomainBlockWeight","MaxDomainNameLength","MaxPendingStakingOperation","MinOperatorStake","Module","OpaqueBundleOf","OperatorDeregistered","OperatorNominated","OperatorRegistered","OperatorRewarded","OperatorSwitchedDomain","Pallet","PreferredOperator","Randomness","Receipt","RuntimeEvent","RuntimeRegistry","Share","StakeEpochDuration","StakeWithdrawalLockingPeriod","Staking","StakingEpoch","StaleBundle","SudoId","ThresholdUnsatisfied","TreasuryAccount","TxRangeState","WeightInfo","WithdrewStake","__clone_box","__clone_box","__clone_box","assimilate_storage","auto_stake_block_rewards","auto_stake_block_rewards","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_tree","block_tree_pruning_depth","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","bundle_producer_election_params","calculate_tx_range","clear","clone","clone","clone","clone_into","clone_into","clone_into","consensus_hash","count","crate_version","current_storage_version","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deregister_operator","deregister_operator","deserialize","dispatch_bypass_filter","dispatchables","domain_best_number","domain_block_limit","domain_instance_data","domain_instantiation_id","domain_registry","domain_runtime_code","domain_state_root","domain_tx_range","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extrinsics_shuffling_seed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_domain","genesis_state_root","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","head_receipt_number","identity","identity","identity","identity","identity","identity","index","infos","init","init","init","init","init","init","init","init","instantiate_domain","instantiate_domain","integrity_test","interval_blocks","interval_bundles","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","module_name","name","new_call_variant_auto_stake_block_rewards","new_call_variant_deregister_operator","new_call_variant_instantiate_domain","new_call_variant_nominate_operator","new_call_variant_register_domain_runtime","new_call_variant_register_operator","new_call_variant_submit_bundle","new_call_variant_submit_fraud_proof","new_call_variant_switch_domain","new_call_variant_upgrade_domain_runtime","new_call_variant_withdraw_stake","nominate_operator","nominate_operator","non_empty_er_exists","offchain_worker","oldest_receipt_number","on_block_reward","on_bundle","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","operator","pre_dispatch","register_domain_runtime","register_domain_runtime","register_operator","register_operator","runtime_id","runtime_registry","serialize","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","staking_pending_deposit","staking_pending_unlock","staking_staked","storage_info","storage_types","submit_bundle","submit_bundle","submit_bundle_unsigned","submit_fraud_proof","submit_fraud_proof","submit_fraud_proof_unsigned","successful_bundles","switch_domain","switch_domain","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","tx_range","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upgrade_domain_runtime","upgrade_domain_runtime","validate_unsigned","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weights","whitelisted_storage_keys","with_weight","withdraw_stake","withdraw_stake","amount","amount","code","code","config","domain_config","domain_id","fraud_proof","new_domain_id","opaque_bundle","operator_id","operator_id","operator_id","operator_id","operator_id","raw_genesis","runtime_id","runtime_name","runtime_type","withdraw","bundle_author","bundle_hash","completed_epoch_index","domain_id","domain_id","domain_id","domain_id","domain_id","new_domain_id","new_head_receipt_number","nominator_id","nominator_id","nominator_id","old_domain_id","operator_id","operator_id","operator_id","operator_id","operator_id","operator_id","reward","runtime_id","runtime_id","runtime_id","runtime_type","scheduled_at","BadGenesisReceipt","BuiltOnUnknownConsensusBlock","DomainBlock","Error","InFutureReceipt","InvalidExtrinsicsRoots","InvalidTraceRoot","MaxHeadDomainNumber","MissingDomainBlock","MultipleERsAfterChallengePeriod","PrunedReceipt","UnavailableConsensusBlockHash","UnexpectedReceiptType","UnknownParentBlockReceipt","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","execution_receipt","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","identity","init","init","into","into","into_mut","into_mut","into_ref","into_ref","operator_ids","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","auto_stake_block_rewards","deregister_operator","instantiate_domain","nominate_operator","register_domain_runtime","register_operator","submit_bundle","submit_fraud_proof","switch_domain","upgrade_domain_runtime","withdraw_stake","BalanceFreeze","DomainConfig","DomainNameTooLong","DomainObject","Error","ExceedMaxDomainBlockSize","ExceedMaxDomainBlockWeight","FailedToGenerateGenesisStateRoot","InsufficientFund","InvalidBundlesPerBlock","InvalidSlotProbability","MaxDomainId","RuntimeNotFound","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bundle_slot_probability","clone","clone","clone_into","clone_into","created_at","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","domain_config","domain_name","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_receipt_hash","identity","identity","identity","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","max_block_size","max_block_weight","owner_account_id","raw_genesis_config","runtime_id","size_hint","size_hint","size_hint","target_bundles_per_block","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","Error","FailedToExtractRuntimeVersion","InvalidSpecName","MaxRuntimeId","MaxScheduledBlockNumber","MissingRuntimeObject","RuntimeObject","RuntimeUpgradeAlreadyScheduled","ScheduledRuntimeUpgrade","SpecVersionNeedsToIncrease","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","code","created_at","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","identity","identity","identity","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","runtime_name","runtime_type","runtime_upgrades","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","updated_at","version","version","vzip","vzip","vzip","BlockTree","ConsensusBlockHash","DomainBlockDescendants","DomainBlocks","DomainRegistry","DomainStakingSummary","DomainTxRangeState","ExecutionInbox","HeadDomainNumber","HeadReceiptNumber","InboxedBundle","LastEpochStakingDistribution","NextDomainId","NextOperatorId","NextRuntimeId","Nominators","OperatorIdOwner","Operators","PendingDeposits","PendingGenesisDomain","PendingNominatorUnlocks","PendingOperatorDeregistrations","PendingOperatorSwitches","PendingOperatorUnlocks","PendingSlashes","PendingStakingOperationCount","PendingUnlocks","PendingWithdrawals","PreferredOperator","RuntimeRegistry","ScheduledRuntimeUpgrades","StateRoots","SuccessfulBundles","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","SubstrateWeight","WeightInfo","auto_stake_block_rewards","auto_stake_block_rewards","borrow","borrow_mut","deref","deref_mut","deregister_operator","deregister_operator","drop","from","from_mut","from_mut","from_ref","from_ref","init","instantiate_domain","instantiate_domain","into","into_mut","into_ref","nominate_operator","nominate_operator","pending_staking_operation","pending_staking_operation","register_domain_runtime","register_domain_runtime","register_operator","register_operator","submit_bundle","submit_bundle","switch_domain","switch_domain","try_from","try_into","type_id","unchecked_into","unique_saturated_into","upgrade_domain_runtime","upgrade_domain_runtime","vzip","withdraw_stake","withdraw_stake"],"q":[[0,"pallet_domains"],[475,"pallet_domains::Call"],[495,"pallet_domains::Event"],[521,"pallet_domains::block_tree"],[618,"pallet_domains::dispatchables"],[629,"pallet_domains::domain_registry"],[778,"pallet_domains::runtime_registry"],[923,"pallet_domains::storage_types"],[1616,"pallet_domains::weights"]],"d":["Invalid signature on the bundle header.","Operator is not allowed to produce bundles in current …","The targetted bad receipt not found which may already …","Invalid vrf signature in the proof of election.","Block tree specific errors","The block tree pruning depth.","","A domain bundle was included.","Bundle size exceed the max bundle size limit in the domain …","Contains a variant per dispatchable extrinsic that this …","The genesis receipt is unchallengeable.","Configuration trait of this pallet.","Same with <code>pallet_subspace::Config::ConfirmationDepthK</code>.","The consensus block hash used to verify ER, only store the …","Currency type used by the domains for staking and other …","The descendants of the fraudulent ER is not pruned","","Domain block hash type.","","The amount of fund to be locked up for the domain instance …","Domain block number type.","Domain registry specific errors","","Delay before a domain runtime is upgraded.","","","Domain tx range is adjusted after every …","This bundle duplicated with an already submitted bundle","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","A set of <code>BundleDigest</code> from all bundles that successfully …","","Invalid state root.","Invalid fraud proof.","","","Can be used to configure the genesis state of this pallet.","","A variation of the Identifier used for holding the funds …","Initial domain tx range value.","Can not find the domain for given domain id.","","Can not find the operator for given operator id.","Invalid fraud proof since total rewards are not mismatched.","Proof of total rewards is invalid.","The maximum bundle per block limit for all domain.","The maximum block size limit for all domain.","The maximum block weight limit for all domain.","The maximum domain name length limit for all domain.","The maximum number of pending staking operation that can …","Minimum operator stake required to become operator of a …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","","","","","","The <code>Pallet</code> struct, the main type that implements traits …","","Randomness source.","An invalid execution receipt found in the bundle.","","Runtime registry specific errors","Type representing the shares in the staking protocol.","Domain epoch transition interval","Minimum number of blocks after which any finalized …","Staking related errors.","Staking epoch specific errors.","The Bundle is created too long ago.","","Failed to pass the threshold check.","Treasury account.","Per-domain state for tx range calculation.","Weight information for extrinsics in this pallet.","","","","","","","See <code>Pallet::auto_stake_block_rewards</code>.","","","","","","","","","","","","","","","","","","","Domain block tree","Returns the block tree pruning depth.","","","","","","","","","","","","","","","","","","","Calculates the new tx range based on the bundles produced …","","","","","","","","An auto-generated getter for <code>ConsensusBlockHash</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::deregister_operator</code>.","","","Auto-generated docs-only module listing all defined …","","Returns the domain block limit of the given domain.","","","Domain registry for domains","","","Returns the tx range for the domain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","Returns the best execution chain number.","","","","","","","","","","","","","","","","","","See <code>Pallet::instantiate_domain</code>.","","Blocks in the current adjustment interval.","Bundles in the current adjustment interval.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>auto_stake_block_rewards</code>.","Create a call with the variant <code>deregister_operator</code>.","Create a call with the variant <code>instantiate_domain</code>.","Create a call with the variant <code>nominate_operator</code>.","Create a call with the variant <code>register_domain_runtime</code>.","Create a call with the variant <code>register_operator</code>.","Create a call with the variant <code>submit_bundle</code>.","Create a call with the variant <code>submit_fraud_proof</code>.","Create a call with the variant <code>switch_domain</code>.","Create a call with the variant <code>upgrade_domain_runtime</code>.","Create a call with the variant <code>withdraw_stake</code>.","","See <code>Pallet::nominate_operator</code>.","Returns if there are any ERs in the challenge period that …","","Returns the block number of oldest execution receipt.","Increase the nomination stake by <code>reward</code> to the preferred …","Called when a bundle is added to the current block.","","","","","","","","","","","","See <code>Pallet::register_domain_runtime</code>.","","See <code>Pallet::register_operator</code>.","","Runtime registry for domains","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","See <code>Pallet::submit_bundle</code>.","Submits an unsigned extrinsic <code>Call::submit_bundle</code>.","","See <code>Pallet::submit_fraud_proof</code>.","Submits an unsigned extrinsic <code>Call::submit_fraud_proof</code>.","","","See <code>Pallet::switch_domain</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Current tx range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::upgrade_domain_runtime</code>.","","","","","","","","","","Autogenerated weights for pallet_domains","","","","See <code>Pallet::withdraw_stake</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block tree specific errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The full ER for this block.","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","A set of all operators who have committed to this ER …","","","","","","","","","","","","","","","","","","","","","","","","","","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","","","","","Domain registry specific errors","","","","","","","","","","","","","","","","","","","","","","","","","","The probability of successful bundle in a slot (active …","","","","","The consensus chain block number when the domain first …","","","","","","","","","","","","","","","","","","","The domain config.","A user defined name for this domain, should be a …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","The hash of the genesis execution receipt for this domain.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The max block size for this domain, may not exceed the …","The max block weight for this domain, may not exceed the …","The address of the domain creator, used to validate …","The genesis config of the domain, encoded in json format. …","A pointer to the <code>RuntimeRegistry</code> entry for this domain.","","","","The expected number of bundles for a domain block, must be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runtime specific errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The domain block tree, map (<code>domain_id</code>, <code>domain_block_number</code>…","The consensus block hash used to verify ER, only store the …","Warning: Doc-Only","Mapping of domain block hash to domain block","The domain registry","Warning: Doc-Only","Warning: Doc-Only","A set of <code>BundleDigest</code> from all bundles that successfully …","The block number of the best domain block, increase by one …","The head receipt number of each domain","A mapping of <code>bundle_header_hash</code> -&gt; <code>bundle_author</code> for all …","A temporary storage to hold any previous epoch details for …","Stores the next domain id.","Warning: Doc-Only","Stores the next runtime id.","List of all current epoch’s nominators and their shares …","Warning: Doc-Only","List of all registered operators and their configuration.","Deposits initiated a nominator under this operator. Will …","The genesis domian that scheduled to register at block #1, …","All the pending unlocks for the nominators. We use this …","Operators who chose to deregister from a domain. Stored …","Temporary hold of all the operators who decided to switch …","Stores a list of operators who are unlocking in the coming …","A list operators who were slashed during the current epoch …","The pending staking operation count of the current epoch, …","A list of operators that are either unregistering or one …","Withdrawals initiated a nominator under this operator. …","A preferred Operator for a given Farmer, enabling …","Warning: Doc-Only","Warning: Doc-Only","State root mapped again each domain (block, hash) This …","Bundles submitted successfully in current blocketurns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeights for pallet_domains using the Substrate node and …","Weight functions needed for pallet_domains.","","Storage: Domains Nominators (r:1 w:0) Proof Skipped: …","","","","","","Storage: Domains OperatorIdOwner (r:1 w:0) Proof Skipped: …","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Storage: Domains RuntimeRegistry (r:1 w:0) Proof Skipped: …","Calls <code>U::from(self)</code>.","","","","Storage: Domains Operators (r:1 w:0) Proof Skipped: …","","Storage: Domains DomainStakingSummary (r:1 w:1) Proof …","","Storage: Domains NextRuntimeId (r:1 w:1) Proof Skipped: …","","Storage: Domains PendingStakingOperationCount (r:1 w:1) …","","Storage: Domains HeadReceiptNumber (r:1 w:1) Proof …","","Storage: Domains OperatorIdOwner (r:1 w:0) Proof Skipped: …","","","","","","","Storage: Domains RuntimeRegistry (r:1 w:0) Proof Skipped: …","","","Storage: Domains PendingDeposits (r:1 w:0) Proof Skipped: …"],"i":[31,31,30,31,27,2,0,20,31,0,30,0,2,0,2,30,20,2,20,2,2,27,20,2,20,20,2,31,0,0,0,0,30,27,0,20,0,0,2,2,31,31,31,30,30,2,2,2,2,2,2,0,0,20,20,20,20,20,0,20,2,31,2,27,2,2,2,27,27,31,2,31,2,0,2,20,19,20,21,3,19,21,27,20,21,29,30,31,27,20,21,29,30,31,27,20,21,29,30,31,0,19,19,27,20,3,21,29,30,31,19,27,20,3,21,29,30,31,3,19,0,29,19,20,21,19,20,21,19,19,19,19,27,20,21,29,30,31,27,20,21,29,30,31,27,20,21,29,30,31,27,20,21,29,30,31,3,29,19,27,20,3,21,29,30,31,19,27,20,3,21,29,30,31,19,21,3,21,0,19,19,19,77,0,19,19,19,19,27,20,3,21,29,30,31,27,20,21,29,30,31,19,20,21,29,30,31,19,19,19,20,20,20,21,21,21,29,29,29,19,19,27,20,21,29,30,31,19,27,27,27,27,27,20,3,21,29,30,31,19,19,27,27,20,20,3,3,21,21,29,29,30,30,31,31,19,19,27,27,20,20,3,3,21,21,29,29,30,30,31,31,3,19,21,21,21,21,21,19,27,20,21,29,30,31,19,19,19,27,20,3,21,29,30,31,19,21,19,29,29,19,27,20,3,21,29,30,31,19,27,20,3,21,29,30,31,19,27,20,3,21,29,30,31,29,19,19,21,21,21,21,21,21,21,21,21,21,21,19,21,19,19,19,19,29,19,19,19,19,19,19,19,19,19,19,19,21,19,21,19,0,3,27,20,21,29,30,31,77,77,77,19,0,19,21,19,19,21,19,19,19,21,27,20,21,29,30,31,19,20,21,19,27,20,3,21,29,30,31,19,27,20,3,21,29,30,31,0,0,0,27,20,21,29,30,31,27,20,21,29,30,31,27,20,21,29,30,31,29,19,27,20,3,21,29,30,31,27,20,21,29,30,31,19,27,20,3,21,29,30,31,19,27,20,3,21,29,30,31,19,21,19,19,27,20,3,21,29,30,31,0,19,27,19,21,78,79,80,81,78,82,78,83,84,85,79,84,86,87,88,82,81,80,80,87,89,89,90,89,91,92,90,93,94,93,95,96,97,94,91,95,98,96,97,99,99,100,101,102,100,101,43,43,0,0,43,43,43,43,43,43,43,43,43,43,69,43,69,43,69,43,69,43,69,43,69,69,69,43,69,43,69,43,69,43,69,43,69,43,69,43,69,43,69,43,69,69,69,69,69,43,69,43,69,43,43,69,69,43,43,69,69,43,69,43,69,43,69,43,69,43,69,69,43,69,43,69,69,43,69,43,69,43,69,43,69,43,69,43,69,43,69,43,69,43,69,43,69,0,0,0,0,0,0,0,0,0,0,0,42,0,42,0,0,42,42,42,42,42,42,42,42,49,72,42,49,72,42,49,72,42,49,72,42,49,72,42,49,72,49,49,72,49,72,72,42,49,72,42,49,72,42,49,72,42,49,72,42,49,72,42,49,72,72,49,42,49,72,42,49,72,42,49,72,49,49,49,72,72,72,42,49,72,42,49,72,42,42,49,49,72,72,42,42,49,49,72,72,72,42,49,72,42,49,72,42,49,72,42,49,72,42,49,72,49,49,72,72,49,42,49,72,49,42,49,72,49,72,42,49,72,42,49,72,42,49,72,42,49,72,42,49,72,42,49,72,42,49,72,42,49,72,42,49,72,42,49,72,0,44,44,44,44,44,0,44,0,44,75,76,44,75,76,44,75,76,44,75,76,44,75,76,44,75,76,75,76,75,76,75,76,75,44,75,76,44,75,76,44,75,76,44,75,76,44,75,76,44,75,76,44,75,76,44,75,76,44,75,76,75,75,75,76,76,76,44,75,76,44,75,76,44,44,75,75,76,76,44,44,75,75,76,76,75,44,75,76,44,75,76,44,75,76,44,75,76,44,75,76,75,75,75,44,75,76,44,75,76,75,76,44,75,76,44,75,76,44,75,76,44,75,76,44,75,76,44,75,76,44,75,76,44,75,76,44,75,76,75,75,76,44,75,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,0,0,136,137,137,137,137,137,136,137,137,137,137,137,137,137,137,136,137,137,137,137,136,137,136,137,136,137,136,137,136,137,136,137,137,137,137,137,137,136,137,137,136,137],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[3,[2]],4],[[6,[5]]]],[[[7,[2]],8],9],0,[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]]],[14,[[16,[15]]]],[[17,18,18],17],[[]],[19,19],[[[20,[2]]],[[20,[2]]]],[[[21,[2]]],[[21,[2]]]],[[]],[[]],[[]],[[[22,[14]],[22,[[23,[2]]]]],16],[[],24],[[],25],[[]],[26,[[6,[27,28]]]],[26,[[6,[[20,[2]],28]]]],[26,[[6,[[21,[2]],28]]]],[26,[[6,[29,28]]]],[26,[[6,[30,28]]]],[26,[[6,[31,28]]]],[[[32,[10]]],[[6,[28]]]],[[[32,[10]]],[[6,[28]]]],[[[32,[10]]],[[6,[28]]]],[[[32,[10]]],[[6,[28]]]],[[[32,[10]]],[[6,[28]]]],[[[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,26],[[6,[28]]]],[[33,26],[[6,[28]]]],[[33,26],[[6,[28]]]],[[33,26],[[6,[28]]]],[[33,26],[[6,[28]]]],[[33,26],[[6,[28]]]],[[],[[3,[2]]]],[[],29],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[[7,[2]],8],9],0,[34,[[6,[[3,[2]]]]]],[[[21,[2]]],35],0,[14,16],[14,[[16,[36]]]],[14,16],[14],0,[14,[[16,[[13,[10]]]]]],[14,16],[14,17],[24],[24],[24],[24],[24],[24],[24],[24],[[27,[0,[37,38]]]],[[[20,[2]],[0,[37,38]]]],[[[21,[2]],[0,[37,38]]]],[[29,[0,[37,38]]]],[[30,[0,[37,38]]]],[[31,[0,[37,38]]]],[[19,19],39],[[[20,[2]],[20,[2]]],39],[[[21,[2]],[21,[2]]],39],[[29,29],39],[[30,30],39],[[31,31],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[]],[[19,40],41],[[[27,[2]],40],41],[[[20,[2]],40],41],[[[21,[2]],40],41],[[29,40],41],[[30,40],41],[[31,40],41],[[]],[30,27],[42,27],[43,27],[44,27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[14,[[16,[45]]]],[[[21,[2]]],10],[[],[[32,[10]]]],[[[21,[2]]],46],[[],[[32,[46]]]],[[[21,[2]]],47],[14],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],24],[[],[[13,[48]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[7,[2]],49,[13,[10]]],9],0,[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],46],[[],46],[8,[[21,[2]]]],[8,[[21,[2]]]],[[49,[13,[10]]],[[21,[2]]]],[8,[[21,[2]]]],[[[13,[10]],50,[13,[10]]],[[21,[2]]]],0,[[[51,[2]]],[[21,[2]]]],[[[53,[[52,[[23,[2]]]]]]],[[21,[2]]]],[[8,14],[[21,[2]]]],[[54,[13,[10]]],[[21,[2]]]],0,[[[7,[2]],8],9],0,[14,39],[[[23,[2]]]],[14],[[]],[29],[[],55],[[[23,[2]]]],[[[23,[2]]]],[[]],[[[23,[2]],56],56],[[[23,[2]]],56],[[[23,[2]]],56],[[],56],[8,16],[[],[[6,[57]]]],[[[7,[2]],[13,[10]],50,[13,[10]]],9],0,0,0,[14,[[16,[54]]]],0,[[[3,[2]],58],6],[27,24],[[[20,[2]]],24],[[[21,[2]]],24],[29,24],[30,24],[31,24],[8],[8],[8],[[],[[13,[59]]]],0,[[[7,[2]],[51,[2]]],9],0,[[[51,[[0,[2,[60,[[21,[[0,[2,[60,[[21,[[0,[2,[60,[21]]]]]]]]]]]]]]]]]]]],[[[7,[2]],[53,[[52,[[23,[2]]]]]]],9],0,[[[52,[[23,[[0,[2,[60,[[21,[[0,[2,[60,[[21,[[0,[2,60]]]]]]]]]]]]]]]]]]]],[14,[[13,[45]]]],[[[7,[2]],8,14],9],0,[[[32,[10]]],[[13,[10,12]]]],[[[32,[10]]],[[13,[10,12]]]],[[[32,[10]]],[[13,[10,12]]]],[[[32,[10]]],[[13,[10,12]]]],[[[32,[10]]],[[13,[10,12]]]],[[[32,[10]]],[[13,[10,12]]]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],0,[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[2]],54,[13,[10]]],9],0,[63,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[13,[65]]]],[56,[[67,[66]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[]],[[]],[[]],[[]],[[[69,[68,68,68,68,68]]],[[69,[68,68,68,68,68]]]],[[]],[26,[[6,[43,28]]]],[26,[[6,[69,28]]]],[[[32,[10]]],[[6,[28]]]],[[[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,26],[[6,[28]]]],[[33,26],[[6,[28]]]],[24],[24],[24],[24],[24],[24],[[43,[0,[37,38]]]],[[69,[0,[37,38]]]],[[43,43],39],[[[69,[70,70,70,70,70]],[69,[70,70,70,70,70]]],39],[[],39],[[],39],[[],39],0,[[43,40],41],[[[69,[71,71,71,71,71]],40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],0,[43,24],[69,24],[[[32,[10]]],[[13,[10,12]]]],[[[32,[10]]],[[13,[10,12]]]],[[]],[[],6],[[],6],[[],6],[[],6],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],61],[[],61],[[],62],[[],62],[[]],[[]],[[]],[[]],[[]],[[]],[8],[8],[[49,[13,[10]]]],[8],[[[13,[10]],50,[13,[10]]]],0,[[[51,[2]]]],[[[53,[[52,[[23,[2]]]]]]]],[[8,14]],[[54,[13,[10]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[49,49],[[[72,[68,68]]],[[72,[68,68]]]],[[]],[[]],0,[26,[[6,[42,28]]]],[26,[[6,[49,28]]]],[26,[[6,[[72,[73,73]],28]]]],[[[32,[10]]],[[6,[28]]]],[[[32,[10]]],[[6,[28]]]],[[[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,26],[[6,[28]]]],[[33,26],[[6,[28]]]],[[33,26],[[6,[28]]]],[24],[24],[24],[24],[24],[24],0,0,[24],[24],[24],[[42,[0,[37,38]]]],[[49,[0,[37,38]]]],[[[72,[74,74]],[0,[37,38]]]],[[42,42],39],[[49,49],39],[[[72,[70,70]],[72,[70,70]]],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[42,40],41],[[49,40],41],[[[72,[71,71]],40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[42,24],[49,24],[[[72,[74,74]]],24],0,[[[32,[10]]],[[13,[10,12]]]],[[[32,[10]]],[[13,[10,12]]]],[[[32,[10]]],[[13,[10,12]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],61],[[],61],[[],61],[[],62],[[],62],[[],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[1],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[75,[68,68]]],[[75,[68,68]]]],[76,76],[[]],[[]],0,0,0,[26,[[6,[44,28]]]],[26,[[6,[[75,[73,73]],28]]]],[26,[[6,[76,28]]]],[[[32,[10]]],[[6,[28]]]],[[[32,[10]]],[[6,[28]]]],[[[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,[32,[10]]],[[6,[28]]]],[[33,26],[[6,[28]]]],[[33,26],[[6,[28]]]],[[33,26],[[6,[28]]]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[44,[0,[37,38]]]],[[[75,[74,74]],[0,[37,38]]]],[[76,[0,[37,38]]]],[[44,44],39],[[[75,[70,70]],[75,[70,70]]],39],[[76,76],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[44,40],41],[[[75,[71,71]],40],41],[[76,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[44,24],[[[75,[74,74]]],24],[76,24],[[[32,[10]]],[[13,[10,12]]]],[[[32,[10]]],[[13,[10,12]]]],[[[32,[10]]],[[13,[10,12]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],[[13,[10,12]]]],[[],61],[[],61],[[],61],[[],62],[[],62],[[],62],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],56],[[],56],[[]],[[]],[24],[24],[[],56],[[],56],[24],[[]],[[]],[[]],[[]],[[]],[[],24],[[],56],[[],56],[[]],[[]],[[]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],6],[[],6],[[],61],[[]],[[]],[[],56],[[],56],[[]],[[],56],[[],56]],"c":[51],"p":[[3,"Private"],[8,"Config"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[4,"Result"],[6,"OriginFor"],[6,"OperatorId"],[6,"DispatchResult"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"DomainId"],[3,"BundleProducerElectionParams"],[4,"Option"],[3,"U256"],[15,"u64"],[3,"Pallet"],[4,"Event"],[4,"Call"],[8,"EncodeLike"],[6,"BlockNumberFor"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[4,"Error"],[3,"Error"],[3,"TxRangeState"],[4,"FraudProofError"],[4,"BundleError"],[15,"slice"],[15,"u32"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[3,"DomainBlockLimit"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"Error"],[4,"Error"],[3,"H256"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[3,"DomainConfig"],[4,"RuntimeType"],[6,"OpaqueBundleOf"],[4,"FraudProof"],[3,"Box"],[6,"RuntimeId"],[3,"StorageVersion"],[3,"Weight"],[4,"TransactionValidityError"],[8,"Serializer"],[3,"StorageInfo"],[8,"SendTransactionTypes"],[3,"TypeId"],[3,"Type"],[4,"TransactionSource"],[6,"TransactionValidity"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"Clone"],[3,"DomainBlock"],[8,"PartialEq"],[8,"Debug"],[3,"DomainObject"],[8,"Decode"],[8,"Encode"],[3,"RuntimeObject"],[3,"ScheduledRuntimeUpgrade"],[8,"HoldIdentifier"],[13,"register_operator"],[13,"nominate_operator"],[13,"register_domain_runtime"],[13,"upgrade_domain_runtime"],[13,"instantiate_domain"],[13,"submit_fraud_proof"],[13,"switch_domain"],[13,"submit_bundle"],[13,"deregister_operator"],[13,"withdraw_stake"],[13,"auto_stake_block_rewards"],[13,"BundleStored"],[13,"DomainEpochCompleted"],[13,"OperatorRegistered"],[13,"DomainInstantiated"],[13,"FraudProofProcessed"],[13,"OperatorSwitchedDomain"],[13,"OperatorNominated"],[13,"WithdrewStake"],[13,"PreferredOperator"],[13,"OperatorDeregistered"],[13,"OperatorRewarded"],[13,"DomainRuntimeCreated"],[13,"DomainRuntimeUpgradeScheduled"],[13,"DomainRuntimeUpgraded"],[3,"SuccessfulBundles"],[3,"NextRuntimeId"],[3,"RuntimeRegistry"],[3,"ScheduledRuntimeUpgrades"],[3,"NextOperatorId"],[3,"OperatorIdOwner"],[3,"DomainStakingSummary"],[3,"Operators"],[3,"PendingOperatorSwitches"],[3,"Nominators"],[3,"PendingDeposits"],[3,"PendingWithdrawals"],[3,"PendingOperatorDeregistrations"],[3,"PendingOperatorUnlocks"],[3,"PendingNominatorUnlocks"],[3,"PendingUnlocks"],[3,"PendingSlashes"],[3,"PendingStakingOperationCount"],[3,"NextDomainId"],[3,"DomainRegistry"],[3,"BlockTree"],[3,"DomainBlocks"],[3,"DomainBlockDescendants"],[3,"HeadReceiptNumber"],[3,"StateRoots"],[3,"ConsensusBlockHash"],[3,"ExecutionInbox"],[3,"InboxedBundle"],[3,"HeadDomainNumber"],[3,"PendingGenesisDomain"],[3,"LastEpochStakingDistribution"],[3,"PreferredOperator"],[3,"DomainTxRangeState"],[8,"WeightInfo"],[3,"SubstrateWeight"]]},\
"pallet_feeds":{"doc":"Pallet feeds, used for storing arbitrary user-provided …","t":"EDIEENNDNNQQNQNGNNNDQDNLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLMLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLMLNMLLLLLLALLLLLLLLLLLNLLLLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMFFFFFNNGEILLLLLLLLLLLLLLLLLKLLLLLLLMMMDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Call","CallObject","Config","Error","Event","FeedClosed","FeedClosed","FeedConfig","FeedCreated","FeedDeleted","FeedId","FeedProcessorKind","FeedUpdated","MaxFeeds","MaxFeedsReached","Module","NotFeedOwner","ObjectSubmitted","OwnershipTransferred","Pallet","RuntimeEvent","TotalObjectsAndSize","UnknownFeedId","__clone_box","__clone_box","__clone_box","active","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","close","close","count","count","crate_version","create","create","current_storage_version","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_call_objects","feed_configs","feed_processor","feed_processor","feed_processor_id","feeds","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","identity","identity","index","infos","init","init","init","init","init","init","init","integrity_test","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","key","metadata","module_name","name","new_call_variant_close","new_call_variant_create","new_call_variant_put","new_call_variant_transfer","new_call_variant_update","next_feed_id","offchain_worker","offset","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","owner","put","put","size","size_hint","size_hint","size_hint","size_hint","size_hint","storage_info","storage_types","successful_puts","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","totals","transfer","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update","update","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","feed_id","feed_id","feed_id","feed_id","feed_processor_id","feed_processor_id","init_data","init_data","new_owner","object","feed_id","feed_id","feed_id","feed_id","feed_id","feed_id","metadata","new_owner","object_size","old_owner","who","who","who","who","who","close","create","put","transfer","update","Content","Custom","FeedMetadata","FeedObjectMapping","FeedProcessor","borrow","borrow_mut","delete","deref","deref_mut","drop","fmt","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into_mut","into_ref","object_mappings","put","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","key","offset","offset","FeedConfigs","Feeds","Metadata","NextFeedId","SuccessfulPuts","Totals","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"pallet_feeds"],[338,"pallet_feeds::Call"],[348,"pallet_feeds::Event"],[363,"pallet_feeds::dispatchables"],[368,"pallet_feeds::feed_processor"],[398,"pallet_feeds::feed_processor::FeedObjectMapping"],[401,"pallet_feeds::storage_types"]],"d":["Contains a variant per dispatchable extrinsic that this …","Mapping to the object offset within an extrinsic …","Configuration trait of this pallet.","<code>pallet-feeds</code> errors","<code>pallet-feeds</code> events","Feed was closed.","Feed was closed","","New feed was created.","Feed was deleted.","","","An existing feed was updated.","","Maximum feeds created by the caller","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Not a feed owner","New object was added.","feed ownership transferred","Pallet feeds, used for storing arbitrary user-provided …","<code>pallet-feeds</code> events","Total amount of data and number of objects stored in a feed","<code>FeedId</code> doesn’t exist","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes the feed and stops accepting new feed.","See <code>Pallet::close</code>.","","Total number of objects","","Create a new feed","See <code>Pallet::create</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract the call objects if an extrinsic corresponds to <code>put</code>…","An auto-generated getter for <code>FeedConfigs</code>.","Defines FeedProcessor and its types","","","An auto-generated getter for <code>Feeds</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Key to the object located at the offset.","An auto-generated getter for <code>Metadata</code>.","","","Create a call with the variant <code>close</code>.","Create a call with the variant <code>create</code>.","Create a call with the variant <code>put</code>.","Create a call with the variant <code>transfer</code>.","Create a call with the variant <code>update</code>.","An auto-generated getter for <code>NextFeedId</code>.","","Offset of object in the encoded call.","","","","","","","","","Put a new object into a feed","See <code>Pallet::put</code>.","Total size of objects in bytes","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","An auto-generated getter for <code>Totals</code>.","Transfers feed from current owner to new owner","See <code>Pallet::transfer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the feed with init data provided.","See <code>Pallet::update</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes the feed and stops accepting new feed.","Create a new feed","Put a new object into a feed","Transfers feed from current owner to new owner","Updates the feed with init data provided.","Maps the object or some data within the object at the …","Maps the object or some data within the object at the …","Metadata of a feed object as raw bytes.","Holds the offset to some portion of data within/or the …","Feed Processor","","","Signals a delete to any underlying feed data.","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Initiates a specific Feed with data transparent to …","","Calls <code>U::from(self)</code>.","","","Returns any object mappings inside the given object","Puts a feed and returns the Metadata if any. This is …","","","","","","","","","","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,8,18,0,8,8,7,7,8,7,18,0,18,8,8,0,7,0,18,6,8,9,20,8,18,9,20,21,8,18,9,20,21,8,18,9,20,21,6,8,18,9,30,20,21,6,8,18,9,30,20,21,21,6,8,9,6,8,9,6,9,6,21,6,6,9,6,8,18,9,20,21,8,18,9,20,21,8,18,9,20,21,8,18,9,20,21,20,21,6,8,18,9,30,20,21,6,8,18,9,30,20,21,9,0,6,8,18,9,30,20,21,8,18,9,20,21,6,8,9,21,6,6,6,8,8,8,9,9,9,21,21,21,9,6,0,7,20,6,6,8,18,9,30,20,21,6,8,18,9,30,20,21,6,6,8,8,18,18,9,9,30,30,20,20,21,21,6,6,8,8,18,18,9,9,30,30,20,20,21,21,9,9,9,9,9,8,18,9,20,21,6,6,6,8,18,9,30,20,21,6,6,8,18,9,30,20,21,6,8,18,9,30,20,21,6,8,18,9,30,20,21,21,30,6,6,6,9,9,9,9,9,6,6,30,6,6,6,6,6,6,6,20,6,9,21,8,18,9,20,21,6,0,6,8,18,9,20,21,6,8,9,6,6,9,6,8,18,9,30,20,21,6,8,18,9,30,20,21,0,0,0,8,18,9,20,21,8,18,9,20,21,8,18,9,20,21,6,8,18,9,30,20,21,8,18,9,20,21,6,8,18,9,30,20,21,6,8,18,9,30,20,21,6,9,6,8,18,9,30,20,21,6,18,54,55,56,57,58,54,58,54,57,55,59,60,61,62,63,64,59,64,59,64,59,60,61,62,63,0,0,0,0,0,52,52,0,0,0,52,52,32,52,52,52,52,52,52,52,52,52,32,52,52,52,52,32,32,52,52,52,52,52,52,65,66,65,0,0,0,0,0,0,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,67,68,68,69,69,70,70,71,71,72,72,67,67,68,68,69,69,70,70,71,71,72,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,6],[[[8,[7]]],[[8,[7]]]],[[[9,[7]]],[[9,[7]]]],[[]],[[]],[[]],[[[10,[7]]],11],0,[[],12],0,[[],13],[[[10,[7]],[14,[[5,[2]]]]],11],0,[[]],[15,[[17,[[8,[7]],16]]]],[15,[[17,[18,16]]]],[15,[[17,[[9,[7]],16]]]],[15,[[17,[[20,[19,19]],16]]]],[15,[[17,[21,16]]]],[[[22,[2]]],[[17,[16]]]],[[[22,[2]]],[[17,[16]]]],[[[22,[2]]],[[17,[16]]]],[[[22,[2]]],[[17,[16]]]],[[[22,[2]]],[[17,[16]]]],[[23,[22,[2]]],[[17,[16]]]],[[23,[22,[2]]],[[17,[16]]]],[[23,[22,[2]]],[[17,[16]]]],[[23,[22,[2]]],[[17,[16]]]],[[23,[22,[2]]],[[17,[16]]]],[[23,15],[[17,[16]]]],[[23,15],[[17,[16]]]],[[23,15],[[17,[16]]]],[[23,15],[[17,[16]]]],[[23,15],[[17,[16]]]],[[],[[20,[24,24]]]],[[],21],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[[9,[7]]],25],0,[12],[12],[12],[12],[12],[12],[12],[[[8,[7]],[0,[26,27]]]],[[18,[0,[26,27]]]],[[[9,[7]],[0,[26,27]]]],[[[20,[28,28]],[0,[26,27]]]],[[21,[0,[26,27]]]],[[6,6],29],[[[8,[7]],[8,[7]]],29],[[[9,[7]],[9,[7]]],29],[[21,21],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[[9,[7]]],[[5,[30]]]],[31,[[14,[20]]]],0,[[],[[33,[32]]]],0,[31,[[14,[34]]]],[[6,35],36],[[[8,[7]],35],36],[[[18,[7]],35],36],[[[9,[7]],35],36],[[30,35],36],[[[20,[37,37]],35],36],[[21,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[7]]],2],[[],[[22,[2]]]],[[[9,[7]]],38],[[],[[22,[38]]]],[[[9,[7]]],39],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],12],[[],[[5,[40]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],0,[31,[[14,[41]]]],[[],38],[[],38],[[],[[9,[7]]]],[[[14,[[5,[2]]]]],[[9,[7]]]],[[[5,[2]]],[[9,[7]]]],[[],[[9,[7]]]],[[[14,[[5,[2]]]]],[[9,[7]]]],[[]],[[[42,[7]]]],0,[[],43],[[[42,[7]]]],[[]],[[[42,[7]],44],44],[[[42,[7]]],44],[[[42,[7]]],44],[[],44],0,[[[10,[7]],[5,[2]]],11],0,0,[[[8,[7]]],12],[18,12],[[[9,[7]]],12],[[[20,[28,28]]],12],[21,12],[[],[[5,[45]]]],0,[[],5],[[[22,[2]]],[[5,[2,4]]]],[[[22,[2]]],[[5,[2,4]]]],[[[22,[2]]],[[5,[2,4]]]],[[[22,[2]]],[[5,[2,4]]]],[[[22,[2]]],[[5,[2,4]]]],[[]],[[]],[[]],[31,21],[[[10,[7]]],11],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,0,[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],47],[[],47],[[],47],[[],47],[[],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[7]],[14,[[5,[2]]]]],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[48]]]],[44,[[50,[49]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[[14,[[5,[2]]]]]],[[[5,[2]]]],[[]],[[[14,[[5,[2]]]]]],0,0,0,0,0,[[]],[[]],[[],51],[12],[12],[12],[[52,35],36],[[]],[[]],[[]],[[]],[[]],[[[22,[2]]],51],[[],12],[[]],[[]],[[]],[[[22,[2]]],[[5,[52]]]],[[[22,[2]]],[[17,[[14,[41]],53]]]],[[],17],[[],17],[[],46],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[15],"p":[[3,"Private"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[8,"Config"],[4,"Event"],[4,"Call"],[6,"OriginFor"],[6,"DispatchResult"],[15,"usize"],[3,"CrateVersion"],[4,"Option"],[8,"Input"],[3,"Error"],[4,"Result"],[4,"Error"],[8,"Decode"],[3,"FeedConfig"],[3,"TotalObjectsAndSize"],[15,"slice"],[15,"u32"],[8,"Default"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[8,"Encode"],[15,"bool"],[3,"CallObject"],[8,"EncodeLike"],[8,"FeedProcessor"],[3,"Box"],[3,"BoundedVec"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"FeedMetadata"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[6,"DispatchResult"],[4,"FeedObjectMapping"],[4,"DispatchError"],[13,"update"],[13,"put"],[13,"close"],[13,"transfer"],[13,"create"],[13,"ObjectSubmitted"],[13,"FeedCreated"],[13,"FeedUpdated"],[13,"FeedClosed"],[13,"FeedDeleted"],[13,"OwnershipTransferred"],[13,"Custom"],[13,"Content"],[3,"Metadata"],[3,"FeedConfigs"],[3,"Feeds"],[3,"Totals"],[3,"NextFeedId"],[3,"SuccessfulPuts"]]},\
"pallet_grandpa_finality_verifier":{"doc":"Substrate GRANDPA finality verifier","t":"DLMLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMLLLLLLLLLLLLLQIQQQGLLLLLLEQIENNNNNNNNNNNGDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLFLLALLLLLLLLLLCCCLLLLLLLLLLLLLLLLLFLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["InitializationData","__clone_box","best_known_finalized_header","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","chain","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_mut","into_ref","is_clear","pallet","serialize","set_id","size_hint","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip","BlockNumber","Chain","Hash","Hasher","Header","SignedBlock","decode_block","decode_block_hash","decode_block_number","decode_block_number_and_hash","decode_grandpa_justifications","decode_header","Call","ChainId","Config","Error","FailedDecodingBlock","FailedDecodingBlockHash","FailedDecodingBlockNumber","FailedDecodingHeader","FailedDecodingInitData","FailedDecodingJustifications","InvalidAuthoritySet","InvalidBlock","InvalidHeader","InvalidJustification","MissingJustification","Module","Pallet","UnsupportedScheduledChange","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","infos","init","init","init","initialize","integrity_test","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","module_name","name","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","purge","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_finalized_block","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","ChainTip","CurrentAuthoritySet","OldestKnownParent","ValidationCheckPoint","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip"],"q":[[0,"pallet_grandpa_finality_verifier"],[54,"pallet_grandpa_finality_verifier::chain"],[66,"pallet_grandpa_finality_verifier::pallet"],[223,"pallet_grandpa_finality_verifier::pallet::storage_types"]],"d":["Data required to initialize a Chain","","Scale encoded best finalized header we know.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","The ID of the current authority set","","","","","","","","","","","","","","A type that fulfills the abstract idea of what a Substrate …","Minimal Substrate-based chain representation that may be …","A type that fulfills the abstract idea of what a Substrate …","A type that fulfills the abstract idea of what a Substrate …","A type that fulfills the abstract idea of what a Substrate …","","","","","","","","Contains a variant per dispatchable extrinsic that this …","","Configuration trait of this pallet.","The <code>Error</code> enum of this pallet.","Failed to Decode block","Failed to Decode block hash","Failed to Decode block number","Failed to Decode header","Failed to decode initialization data","Failed to decode justifications","The authority set from the underlying header chain is …","The block and its contents are not valid","The header is already finalized","The given justification is invalid for the given header.","Justification is missing..","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","The scheduled authority set change found in the header is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","Bootstrap the chain to start importing valid finalized …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","purges the on chain state of a given chain","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Known tip of the chain","The current GRANDPA Authority set for a given Chain","Oldest known parent","The point after which the block validation begins","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,41,0,41,41,41,0,41,41,41,41,41,41,0,23,0,0,24,24,24,24,24,24,24,24,24,24,24,0,0,24,25,26,24,26,24,26,24,26,25,24,26,25,24,26,25,26,25,26,25,25,25,24,26,24,26,24,26,24,26,25,24,26,25,24,26,26,0,25,24,26,24,25,26,25,25,25,26,26,26,25,24,26,25,24,26,25,25,24,24,26,26,25,25,24,24,26,26,26,26,26,26,26,24,26,25,25,25,24,26,0,25,25,24,26,25,24,26,25,24,26,25,25,25,25,25,25,25,25,25,0,24,25,0,24,26,25,26,25,24,26,25,24,26,0,0,0,24,26,24,26,24,26,25,24,26,24,26,25,24,26,25,24,26,0,25,24,26,25,24,0,0,0,0,42,43,44,45,42,43,44,45,42,43,44,45,42,43,44,45,42,43,44,45,42,43,44,45,42,42,43,43,44,44,45,45,42,42,43,43,44,44,45,45,42,43,44,45,42,43,44,45,42,43,44,45,42,43,44,45,42,43,44,45,42,43,44,45,42,43,44,45,42,43,44,45,42,43,44,45,42,43,44,45],"f":[0,[1],0,[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[3,[2]]]],[[]],[[]],0,[[]],[6,6],[[]],[7,[[9,[6,8]]]],[[[10,[2]]],[[9,[8]]]],[[11,[10,[2]]],[[9,[8]]]],[[11,7],[[9,[8]]]],[[],6],[12],[12],[13,[[9,[6]]]],[12],[[6,[0,[14,15]]]],[[6,6],16],[[],16],[[],16],[[],16],[[6,17],18],[[]],[[]],[[]],[[]],[[]],[[],[[5,[2,4]]]],[[],12],[[]],[[]],[[]],[[],16],0,[[6,19],9],0,[6,12],[[[10,[2]]],[[5,[2,4]]]],[[]],[[],9],[[],9],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],20],[[],21],[[]],[[]],[[]],0,0,0,0,0,0,[[[10,[2]]],[[9,[22,[24,[23]]]]]],[[[10,[2]]],[[9,[[24,[23]]]]]],[[[10,[2]]],[[9,[[24,[23]]]]]],[[],[[9,[[24,[23]]]]]],[[[10,[2]]],[[9,[0,[24,[23]]]]]],[[[10,[2]]],[[9,[[24,[23]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[[[26,[23]]],[[26,[23]]]],[[]],[[]],[[],12],[[],27],[[]],[7,[[9,[24,8]]]],[7,[[9,[[26,[23]],8]]]],[[[10,[2]]],[[9,[8]]]],[[[10,[2]]],[[9,[8]]]],[[11,[10,[2]]],[[9,[8]]]],[[11,[10,[2]]],[[9,[8]]]],[[11,7],[[9,[8]]]],[[11,7],[[9,[8]]]],[12],[12],[12],[12],[12],[12],[[[26,[23]]],28],0,[12],[12],[12],[[24,[0,[14,15]]]],[[25,25],16],[[[26,[23]],[26,[23]]],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[25,17],18],[[[24,[23]],17],18],[[[26,[23]],17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[23]]],2],[[],[[10,[2]]]],[[[26,[23]]],29],[[],[[10,[29]]]],[[[26,[23]]],30],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],12],[[],[[5,[31]]]],[[],12],[[],12],[[],12],[[[10,[2]]],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[[33,[23]]]],[[],34],[[[33,[23]]]],[[]],[[[33,[23]],35],35],[[[33,[23]]],35],[[],35],[[],32],[24,12],[[],[[5,[36]]]],0,[[[10,[2]]],[[5,[2,4]]]],[[[10,[2]]],[[5,[2,4]]]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[2]]],[[9,[37]]]],[[]],[[]],[[]],[[],[[5,[38]]]],[35,[[40,[39]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[81],"p":[[3,"Private"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"InitializationData"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"slice"],[15,"u32"],[15,"usize"],[8,"Deserializer"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Serializer"],[3,"TypeId"],[3,"Type"],[6,"SignedBlock"],[8,"Config"],[4,"Error"],[3,"Pallet"],[4,"Call"],[3,"CrateVersion"],[6,"DispatchResultWithPostInfo"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"DispatchResult"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[3,"StorageInfo"],[4,"DispatchError"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"Chain"],[3,"ValidationCheckPoint"],[3,"OldestKnownParent"],[3,"ChainTip"],[3,"CurrentAuthoritySet"]]},\
"pallet_messenger":{"doc":"Pallet messenger used to communicate between domains and …","t":"NEDNNNENIQQQNEENNNNNNNNNNGNNNQNNNNENDQQQNQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLNLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDILLKLLLKLKLLLLLLLLLKLLLLKLKLLLLLLL","n":["BalanceOverflow","Call","Channel","ChannelClosed","ChannelInitiated","ChannelOpen","ChannelState","Closed","Config","ConfirmationDepth","Currency","DomainInfo","Err","Error","Event","InboxMessage","InboxMessageResponse","Initiated","InvalidChain","InvalidChannelState","InvalidMessageDestination","InvalidMessagePayload","MessageVerification","MissingChannel","MissingMessage","Module","NoMessageHandler","NoOpenChannel","Ok","OnXDMRewards","Open","OutboxFull","OutboxMessage","OutboxMessageResponse","OutboxMessageResult","OutboxMessageResult","Pallet","RuntimeEvent","SelfChainId","WeightInfo","WeightTagNotMatch","WeightToFee","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_messages","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channels","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_channel","close_channel","count","crate_version","current_storage_version","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_block_messages","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","get_endpoint_handler","get_open_channel_for_chain","identity","identity","identity","identity","identity","identity","inbox","inbox_fees","inbox_response_message_unsigned","inbox_responses","index","infos","init","init","init","init","init","init","init","initiate_channel","initiate_channel","integrity_test","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_domain_info_confirmed","module_name","name","new_call_variant_close_channel","new_call_variant_initiate_channel","new_call_variant_relay_message","new_call_variant_relay_message_response","next_channel_id","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","outbox","outbox_fees","outbox_message_unsigned","outbox_responses","pre_dispatch","relay_message","relay_message","relay_message_response","relay_message_response","send_message","should_relay_inbox_message_response","should_relay_outbox_message","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_unsigned","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weights","whitelisted_storage_keys","with_weight","chain_id","channel_id","dst_chain_id","msg","msg","params","chain_id","chain_id","chain_id","chain_id","chain_id","chain_id","chain_id","chain_id","channel_id","channel_id","channel_id","channel_id","channel_id","channel_id","channel_id","channel_id","nonce","nonce","nonce","nonce","nonce","result","close_channel","initiate_channel","relay_message","relay_message_response","BlockMessages","Channels","Inbox","InboxFee","InboxResponses","NextChannelId","Outbox","OutboxFee","OutboxResponses","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","close_channel","close_channel","deref","deref_mut","do_close_channel","do_close_channel","do_open_channel","do_open_channel","drop","fmt","from","from_mut","from_mut","from_ref","from_ref","init","initiate_channel","initiate_channel","into","into_mut","into_ref","relay_message","relay_message","relay_message_response","relay_message_response","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_messenger"],[396,"pallet_messenger::Call"],[402,"pallet_messenger::Event"],[424,"pallet_messenger::dispatchables"],[428,"pallet_messenger::storage_types"],[617,"pallet_messenger::weights"]],"d":["Emite when the there is balance overflow","Contains a variant per dispatchable extrinsic that this …","Channel describes a bridge to exchange messages between …","Emits when a channel between two chains is closed.","Emits when a channel between two chains is initiated.","Emits when a channel between two chain is open.","State of a channel.","Channel is closed and do not send or receive messages.","Configuration trait of this pallet.","Confirmation depth for XDM coming from chains.","Currency type pallet uses for fees and deposits.","Chain info to verify chain state roots at a confirmation …","Message response handler failed with Err.","<code>pallet-messenger</code> errors","<code>pallet-messenger</code> events","Emits when a new inbox message is validated and added to …","Emits when a message response is available for Inbox …","Channel between chains is initiated but do not yet send or …","Emits when the chain is neither consensus not chain.","Emits when the said channel is not in an open state.","Emits when the message destination is not valid.","Emits when the message payload is invalid.","Emits when the message verification failed.","Emits when there is no channel for a given Channel ID.","Emits when there is no message available for the given …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Emits when there are not message handler with given …","Emits when there are no open channels for a chain","Message response handler returned Ok.","Handle XDM rewards.","Channel is open and can send and receive messages.","Emits when the outbox is full for a channel.","Emits when a new message is added to the outbox.","Emits when a message response is available for Outbox …","","Emits outbox message result.","Pallet messenger used to communicate between chains and …","","Gets the chain_id that is treated as src_chain_id for …","Weight information for extrinsics in this pallet.","Emits when there is mismatch between the message’s …","Weight to fee conversion.","","","","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>BlockMessages</code>.","","","","","","","","","","","","","","","An auto-generated getter for <code>Channels</code>.","","","","","","","","","","","","","","","An open channel is closed with a foreign chain. Channel is …","See <code>Pallet::close_channel</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","function to fetch endpoint response handler by Endpoint.","Returns the last open channel for a given chain.","","","","","","","An auto-generated getter for <code>Inbox</code>.","An auto-generated getter for <code>InboxFee</code>.","","An auto-generated getter for <code>InboxResponses</code>.","","","","","","","","","","A new Channel is initiated with a foreign chain. Next …","See <code>Pallet::initiate_channel</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>close_channel</code>.","Create a call with the variant <code>initiate_channel</code>.","Create a call with the variant <code>relay_message</code>.","Create a call with the variant <code>relay_message_response</code>.","An auto-generated getter for <code>NextChannelId</code>.","","","","","","","","","An auto-generated getter for <code>Outbox</code>.","An auto-generated getter for <code>OutboxFee</code>.","","An auto-generated getter for <code>OutboxResponses</code>.","","Receives an Inbox message that needs to be validated and …","See <code>Pallet::relay_message</code>.","Receives a response from the dst_chain for a message in …","See <code>Pallet::relay_message_response</code>.","","Returns true if the inbox message response has not …","Returns true if the outbox message has not received the …","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate unsigned call to this module.","","","","","","","","Autogenerated weights for pallet_messenger","","","","","","","","","Foreign chain id this channel connects to.","Foreign chain id this channel connects to.","Foreign chain id this channel connects to.","","Destination chain ID.","","","Destination chain ID.","Channel ID of the said channel.","Channel ID of the said channel.","Channel ID of the said channel.","","Channel Is","","","Channel Is","","","","","","","An open channel is closed with a foreign chain. Channel is …","A new Channel is initiated with a foreign chain. Next …","Receives an Inbox message that needs to be validated and …","Receives a response from the dst_chain for a message in …","A temporary storage to store all the messages to be …","Stores channel config between two chains. Key points to …","A temporary storage for storing decoded inbox message …","A temporary storage of fees for executing an inbox message.","Stores the message responses of the incoming processed …","Stores the next channel id for a foreign chain.","Stores the outgoing messages that are awaiting message …","A temporary storage of fees for executing an outbox …","A temporary storage for storing decoded outbox response …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for pallet_messenger using the Substrate node and …","Weight functions needed for pallet_messenger.","","","","Storage: Messenger Channels (r:1 w:1) Proof Skipped: …","","","","Storage: Messenger Channels (r:1 w:1) Proof Skipped: …","","Storage: Messenger Channels (r:1 w:1) Proof Skipped: …","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Storage: Messenger NextChannelId (r:1 w:1) Proof Skipped: …","Calls <code>U::from(self)</code>.","","","","Storage: Messenger Inbox (r:1 w:1) Proof Skipped: …","","Storage: Messenger OutboxResponses (r:1 w:1) Proof …","","","","","",""],"i":[25,0,0,16,16,16,0,11,0,15,15,15,13,0,0,16,16,11,25,25,25,25,25,25,25,0,25,25,13,15,11,25,16,16,0,16,0,15,15,15,25,15,11,10,13,14,16,17,11,10,13,16,25,17,11,10,13,16,25,17,11,10,13,16,25,17,14,11,10,13,14,16,25,17,11,10,13,14,16,25,17,14,11,10,11,10,13,14,16,17,11,10,13,14,16,17,14,17,14,14,14,11,10,13,16,25,17,11,10,13,16,25,17,11,10,13,16,25,17,11,10,13,16,25,17,11,10,11,10,13,14,16,25,17,11,10,13,14,16,25,17,17,0,11,10,13,14,16,25,17,11,10,13,16,25,17,11,10,13,14,16,17,11,11,11,10,10,10,13,13,13,14,14,14,16,16,16,17,17,17,11,10,13,14,16,25,17,11,10,13,14,16,25,17,11,11,10,10,13,13,14,14,16,16,25,25,17,17,11,11,10,10,13,13,14,14,16,16,25,25,17,17,14,17,17,17,17,17,15,14,11,10,13,16,25,17,14,14,14,14,14,14,11,10,13,14,16,25,17,14,17,14,11,10,13,14,16,25,17,11,10,13,14,16,25,17,11,10,13,14,16,25,17,11,10,14,14,14,17,17,17,17,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,17,14,17,14,14,14,11,10,13,16,25,17,14,0,11,10,13,16,25,17,11,10,13,14,16,17,11,10,13,14,16,25,17,11,10,13,14,16,25,17,0,0,0,11,10,13,16,25,17,11,10,13,16,25,17,11,10,13,16,25,17,11,10,13,14,16,25,17,11,10,13,16,25,17,11,10,13,14,16,25,17,11,10,13,14,16,25,17,14,11,10,13,14,16,25,17,0,14,25,66,66,67,68,69,67,70,71,72,73,74,75,76,77,70,71,72,73,74,75,76,77,73,74,75,76,77,75,0,0,0,0,0,0,0,0,0,0,0,0,0,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,78,79,80,81,82,83,84,85,86,0,0,65,65,87,65,65,65,87,65,87,65,65,65,65,65,65,65,65,65,87,65,65,65,65,87,65,87,65,65,65,65,65,65,65],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[6,[0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]],[8,[9]]],[[6,[10]]]],[[]],[[]],[11,11],[[[10,[12]]],[[10,[12]]]],[13,13],[14,14],[[[16,[15]]],[[16,[15]]]],[[[17,[15]]],[[17,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[18,[15]],7,9],19],0,[[],20],[[],21],[[]],[22,[[24,[11,23]]]],[22,[[24,[10,23]]]],[22,[[24,[13,23]]]],[22,[[24,[[16,[15]],23]]]],[22,[[24,[25,23]]]],[22,[[24,[[17,[15]],23]]]],[[[26,[2]]],[[24,[23]]]],[[[26,[2]]],[[24,[23]]]],[[[26,[2]]],[[24,[23]]]],[[[26,[2]]],[[24,[23]]]],[[[26,[2]]],[[24,[23]]]],[[[26,[2]]],[[24,[23]]]],[[27,[26,[2]]],[[24,[23]]]],[[27,[26,[2]]],[[24,[23]]]],[[27,[26,[2]]],[[24,[23]]]],[[27,[26,[2]]],[[24,[23]]]],[[27,[26,[2]]],[[24,[23]]]],[[27,[26,[2]]],[[24,[23]]]],[[27,22],[[24,[23]]]],[[27,22],[[24,[23]]]],[[27,22],[[24,[23]]]],[[27,22],[[24,[23]]]],[[27,22],[[24,[23]]]],[[27,22],[[24,[23]]]],[[],11],[[],[[10,[28]]]],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[[[17,[15]]],29],0,[20],[20],[20],[20],[20],[20],[20],[[11,[0,[30,31]]]],[[10,[0,[30,31]]]],[[13,[0,[30,31]]]],[[[16,[15]],[0,[30,31]]]],[[25,[0,[30,31]]]],[[[17,[15]],[0,[30,31]]]],[[11,11],32],[[[10,[33]],[10,[33]]],32],[[13,13],32],[[14,14],32],[[[16,[15]],[16,[15]]],32],[[[17,[15]],[17,[15]]],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[11,34],35],[[[10,[36]],34],35],[[13,34],35],[[14,34],35],[[[16,[15]],34],35],[[[25,[15]],34],35],[[[17,[15]],34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[[[17,[15]]],2],[[],[[26,[2]]]],[[[17,[15]]],38],[[],[[26,[38]]]],[[[17,[15]]],39],[40,[[6,[[42,[41]]]]]],[7,6],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[6,[43]]]],[8,6],[[[46,[[45,[[0,[15,[44,[[17,[[0,[15,[44,[[17,[[0,[15,44]]]]]]]]]]]]]]]]]]],6],[8,[[6,[43]]]],[[],20],[[],[[5,[47]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[[18,[15]],7,48],19],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],32],[[],32],[[49,[50,[[45,[15]]]]],32],[[],38],[[],38],[[7,9],[[17,[15]]]],[[7,48],[[17,[15]]]],[[[46,[[45,[15]]]]],[[17,[15]]]],[[[46,[[45,[15]]]]],[[17,[15]]]],[[[8,[7]]],9],[[[45,[15]]]],[[],51],[[[45,[15]]]],[[]],[[[45,[15]],52],52],[[[45,[15]]],52],[[[45,[15]]],52],[[],52],[8,[[6,[43]]]],[8,6],[[[46,[[45,[[0,[15,[44,[[17,[[0,[15,[44,[[17,[[0,[15,44]]]]]]]]]]]]]]]]]]],6],[[],[[6,[43]]]],[[],[[24,[53]]]],[[[18,[15]],[46,[[45,[15]]]]],19],0,[[[18,[15]],[46,[[45,[15]]]]],19],0,[[7,54],[[24,[55]]]],[[7,56],32],[[7,56],32],[11,20],[10,20],[13,20],[[[16,[15]]],20],[25,20],[[[17,[15]]],20],[[],[[5,[57]]]],0,[[[26,[2]]],[[5,[2,4]]]],[[[26,[2]]],[[5,[2,4]]]],[[[26,[2]]],[[5,[2,4]]]],[[[26,[2]]],[[5,[2,4]]]],[[[26,[2]]],[[5,[2,4]]]],[[[26,[2]]],[[5,[2,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[5,[62]]]],[52,[[64,[63]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[7,9]],[[7,48]],[[[46,[[45,[15]]]]]],[[[46,[[45,[15]]]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[],52],[[],52],[20],[20],[[],52],[[],52],[[],52],[[],52],[20],[[[65,[36]],34],35],[[]],[[]],[[]],[[]],[[]],[[],20],[[],52],[[],52],[[]],[[]],[[]],[[],52],[[],52],[[],52],[[],52],[[],24],[[],24],[[],58],[[]],[[]],[[]]],"c":[25],"p":[[3,"Private"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[4,"Option"],[4,"ChainId"],[8,"EncodeLike"],[6,"ChannelId"],[3,"Channel"],[4,"ChannelState"],[8,"Clone"],[4,"OutboxMessageResult"],[3,"Pallet"],[8,"Config"],[4,"Event"],[4,"Call"],[6,"OriginFor"],[6,"DispatchResult"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Result"],[4,"Error"],[15,"slice"],[15,"u32"],[8,"Default"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"BlockMessagesWithStorageKey"],[15,"str"],[3,"DispatchInfo"],[4,"Endpoint"],[8,"EndpointHandler"],[3,"Box"],[3,"Message"],[8,"SendTransactionTypes"],[6,"BlockNumberFor"],[3,"CrossDomainMessage"],[3,"PalletInfoData"],[3,"InitiateChannelParams"],[3,"DomainId"],[3,"BlockInfo"],[3,"StorageVersion"],[3,"Weight"],[4,"TransactionValidityError"],[3,"EndpointRequest"],[4,"DispatchError"],[6,"MessageId"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[4,"TransactionSource"],[6,"TransactionValidity"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[3,"SubstrateWeight"],[13,"close_channel"],[13,"initiate_channel"],[13,"relay_message"],[13,"relay_message_response"],[13,"ChannelInitiated"],[13,"ChannelClosed"],[13,"ChannelOpen"],[13,"OutboxMessage"],[13,"OutboxMessageResponse"],[13,"OutboxMessageResult"],[13,"InboxMessage"],[13,"InboxMessageResponse"],[3,"NextChannelId"],[3,"Channels"],[3,"Inbox"],[3,"InboxFee"],[3,"OutboxFee"],[3,"InboxResponses"],[3,"Outbox"],[3,"OutboxResponses"],[3,"BlockMessages"],[8,"WeightInfo"]]},\
"pallet_object_store":{"doc":"Pallet object store, used for simple object storage on the …","t":"EDIEGNDQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLNLLLALLLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLLLLMMMMF","n":["Call","CallObject","Config","Event","Module","ObjectSubmitted","Pallet","RuntimeEvent","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_call_object","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","hash","identity","identity","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","module_name","name","new_call_variant_put","offchain_worker","offset","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","put","put","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","whitelisted_storage_keys","object","object_id","object_size","who","put"],"q":[[0,"pallet_object_store"],[180,"pallet_object_store::Call"],[181,"pallet_object_store::Event"],[184,"pallet_object_store::dispatchables"]],"d":["Contains a variant per dispatchable extrinsic that this …","Mapping to the object offset and size within an extrinsic","Configuration trait of this pallet.","<code>pallet-object-store</code> events","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","New object was added.","Pallet object-store, used for storing arbitrary …","<code>pallet-object-store</code> events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","Extract object location if an extrinsic corresponds to <code>put</code> …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","Object hash","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create a call with the variant <code>put</code>.","","Offset of object in the encoded call.","","","","","","","Put a new object into a feed","See <code>Pallet::put</code>.","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Put a new object into a feed"],"i":[0,0,0,0,0,8,0,7,6,8,9,8,9,8,9,8,9,6,8,9,21,6,8,9,21,6,8,9,6,8,9,6,6,6,8,9,8,9,8,9,8,9,6,8,9,21,6,8,9,21,9,0,6,8,9,21,8,9,6,8,9,6,6,6,8,8,8,9,9,9,9,6,8,9,21,6,8,9,21,6,6,8,8,9,9,21,21,6,6,8,8,9,9,21,21,9,9,9,9,9,21,8,9,6,6,6,8,9,21,6,6,8,9,21,6,8,9,21,6,8,9,21,6,6,9,6,21,6,6,6,6,6,6,6,9,8,9,6,0,8,9,6,8,9,6,8,9,21,6,8,9,21,0,0,0,8,9,8,9,8,9,6,8,9,21,8,9,6,8,9,21,6,8,9,21,6,8,9,21,6,37,38,38,38,0],"f":[0,0,0,0,0,0,0,0,[1],[1],[1],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,6],[[[8,[7]]],[[8,[7]]]],[[[9,[7]]],[[9,[7]]]],[[]],[[]],[[]],[[],10],[[],11],[[]],[12,[[14,[[8,[7]],13]]]],[12,[[14,[[9,[7]],13]]]],[[[15,[2]]],[[14,[13]]]],[[[15,[2]]],[[14,[13]]]],[[16,[15,[2]]],[[14,[13]]]],[[16,[15,[2]]],[[14,[13]]]],[[16,12],[[14,[13]]]],[[16,12],[[14,[13]]]],[10],[10],[10],[10],[10],[10],[10],[10],[[[9,[7]]],17],0,[10],[10],[10],[10],[[[8,[7]],[0,[18,19]]]],[[[9,[7]],[0,[18,19]]]],[[6,6],20],[[[8,[7]],[8,[7]]],20],[[[9,[7]],[9,[7]]],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[[9,[7]]],[[22,[21]]]],[[6,23],24],[[[8,[7]],23],24],[[[9,[7]],23],24],[[21,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[7]]],2],[[],[[15,[2]]]],[[[9,[7]]],25],[[],[[15,[25]]]],[[[9,[7]]],26],0,[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],10],[[],[[5,[27]]]],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[[5,[2]]],[[9,[7]]]],[[[28,[7]]]],0,[[],29],[[[28,[7]]]],[[]],[[[28,[7]],30],30],[[[28,[7]]],30],[[],30],[[[31,[7]],[5,[2]]],32],0,[[[8,[7]]],10],[[[9,[7]]],10],[[],[[5,[33]]]],0,[[[15,[2]]],[[5,[2,4]]]],[[[15,[2]]],[[5,[2,4]]]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],34],[[],34],[[],34],[[],34],[[],35],[[],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[36]]]],0,0,0,0,[[[5,[2]]]]],"c":[4],"p":[[3,"Private"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[8,"Config"],[4,"Event"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"slice"],[15,"u32"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"CallObject"],[4,"Option"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[6,"OriginFor"],[6,"DispatchResult"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[13,"put"],[13,"ObjectSubmitted"]]},\
"pallet_offences_subspace":{"doc":"Offences Subspace Pallet","t":"EGIEGNQDGGQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLMMDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Call","ConcurrentReportsIndex","Config","Event","Module","Offence","OnOffenceHandler","Pallet","Reports","ReportsByKindIndex","RuntimeEvent","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","infos","init","init","init","integrity_test","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_known_offence","module_name","name","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","report_offence","reports","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","whitelisted_storage_keys","kind","timeslot","ConcurrentReportsIndex","Reports","ReportsByKindIndex","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip"],"q":[[0,"pallet_offences_subspace"],[157,"pallet_offences_subspace::Event"],[159,"pallet_offences_subspace::storage_types"]],"d":["Contains a variant per dispatchable extrinsic that this …","A vector of reports of the same kind that happened at the …","Configuration trait of this pallet.","Events type.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","There is an offence reported of the given <code>kind</code> happened at …","A handler called for every offence report.","The <code>Pallet</code> struct, the main type that implements traits …","The primary structure that holds all offence records keyed …","Enumerates all reports of a kind along with the time they …","The overarching event type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>Reports</code>.","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A vector of reports of the same kind that happened at the …","The primary structure that holds all offence records keyed …","Enumerates all reports of a kind along with the time they …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,7,8,0,0,0,8,6,7,9,7,9,7,9,7,9,6,7,9,6,7,9,6,7,9,6,7,9,6,6,6,7,9,7,9,7,9,7,9,6,7,9,6,7,9,9,0,6,7,9,7,6,7,9,6,6,6,7,7,7,9,9,9,6,7,9,6,7,9,6,6,7,7,9,9,6,6,7,7,9,9,9,9,9,9,9,7,9,6,6,6,7,9,6,6,7,9,6,7,9,6,7,9,6,6,6,6,6,6,6,6,6,6,6,6,7,6,0,7,9,6,7,9,6,7,9,6,7,9,0,0,0,7,9,7,9,7,9,6,7,9,7,9,6,7,9,6,7,9,6,7,9,6,39,39,0,0,0,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,40,41,41,42,42,40,40,41,41,42,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42],"f":[0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[6,6],[7,7],[[[9,[8]]],[[9,[8]]]],[[]],[[]],[[]],[[],10],[[],11],[[]],[12,[[14,[7,13]]]],[12,[[14,[[9,[8]],13]]]],[[[15,[2]]],[[14,[13]]]],[[[15,[2]]],[[14,[13]]]],[[16,[15,[2]]],[[14,[13]]]],[[16,[15,[2]]],[[14,[13]]]],[[16,12],[[14,[13]]]],[[16,12],[[14,[13]]]],[10],[10],[10],[10],[10],[10],[[[9,[8]]],17],0,[10],[10],[10],[[7,[0,[18,19]]]],[[6,6],20],[[7,7],20],[[[9,[8]],[9,[8]]],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[6,21],22],[[7,21],22],[[[9,[8]],21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],2],[[],[[15,[2]]]],[[[9,[8]]],23],[[],[[15,[23]]]],[[[9,[8]]],24],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],10],[[],[[5,[25]]]],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[26]]],20],[[],23],[[],23],[[[27,[8]]]],[[],28],[[[27,[8]]]],[[]],[[[27,[8]],29],29],[[[27,[8]]],29],[[],29],[[[30,[26]]],[[14,[31]]]],[32,[[34,[[33,[26]]]]]],[7,10],[[],[[5,[35]]]],0,[[[15,[2]]],[[5,[2,4]]]],[[[15,[2]]],[[5,[2,4]]]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],36],[[],36],[[],36],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[38]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[10],[10],[10],[10],[10],[10],[10],[10],[10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],36],[[],36],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[4],"p":[[3,"Private"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[4,"Event"],[8,"Config"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"slice"],[15,"u32"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"FarmerPublicKey"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[8,"Offence"],[4,"OffenceError"],[8,"EncodeLike"],[3,"OffenceDetails"],[4,"Option"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[13,"Offence"],[3,"Reports"],[3,"ConcurrentReportsIndex"],[3,"ReportsByKindIndex"]]},\
"pallet_operator_rewards":{"doc":"Pallet Domain Transaction Fees","t":"QEIGDLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLCCCLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLL","n":["Balance","Call","Config","Module","Pallet","__clone_box","__clone_box","blake2_128","blake2_128_concat","blake2_256","block_rewards","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","index","infos","init","init","integrity_test","into","into","into_mut","into_mut","into_ref","into_ref","module_name","name","note_operator_rewards","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","storage_info","storage_types","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","whitelisted_storage_keys","BlockRewards","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_operator_rewards"],[107,"pallet_operator_rewards::storage_types"]],"d":["The balance of an account.","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Pallet operator-rewards to store the accumulated rewards …","","","","","","An auto-generated getter for <code>BlockRewards</code>.","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","The accumulated rewards of the current block","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[7,0,0,0,0,6,8,8,8,8,6,6,8,6,8,6,8,6,8,6,6,6,8,8,8,8,6,8,6,8,8,0,6,8,6,8,6,6,6,8,8,8,6,8,6,8,6,6,8,8,6,6,8,8,8,8,8,8,8,8,6,6,6,8,6,6,8,6,8,6,8,6,6,6,6,6,6,6,6,6,6,6,6,0,8,6,8,6,8,6,8,0,0,0,8,8,8,6,8,8,6,8,6,8,6,8,6,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30],"f":[0,0,0,0,0,[1],[1],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[6,6],[[[8,[7]]],[[8,[7]]]],[[]],[[]],[[],9],[[],10],[[]],[11,[[13,[[8,[7]],12]]]],[[[14,[2]]],[[13,[12]]]],[[15,[14,[2]]],[[13,[12]]]],[[15,11],[[13,[12]]]],[9],[9],[9],[9],[[[8,[7]]],16],0,[9],[9],[[6,6],17],[[[8,[7]],[8,[7]]],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[6,18],19],[[[8,[7]],18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],2],[[],[[14,[2]]]],[[[8,[7]]],20],[[],[[14,[20]]]],[[[8,[7]]],21],[[],[[5,[2,4]]]],[[],9],[[],[[5,[22]]]],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[]],[[[23,[7]]]],[[],24],[[[23,[7]]]],[[]],[[[23,[7]],25],25],[[[23,[7]]],25],[[[23,[7]]],25],[[],25],[[],[[5,[26]]]],0,[[[14,[2]]],[[5,[2,4]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],0,0,0,[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],27],[[],27],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[29]]]],0,[[]],[[]],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[],9],[[]],[[]],[[]],[[],13],[[],13],[[],27],[[]],[[]],[[]]],"c":[3],"p":[[3,"Private"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[8,"Config"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"slice"],[15,"u32"],[6,"DispatchResultWithPostInfo"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"BlockRewards"]]},\
"pallet_rewards":{"doc":"Pallet for issuing rewards to block producers.","t":"NQEIQEQQGIQDQNQIQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLALLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLMMMM","n":["BlockReward","BlockReward","Call","Config","Currency","Event","FindBlockRewardAddress","FindVotingRewardAddresses","Module","OnReward","OnReward","Pallet","RuntimeEvent","VoteReward","VoteReward","WeightInfo","WeightInfo","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","infos","init","init","init","integrity_test","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","module_name","name","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_initialize","on_reward","on_runtime_upgrade","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","whitelisted_storage_keys","block_author","reward","reward","voter"],"q":[[0,"pallet_rewards"],[164,"pallet_rewards::Event"]],"d":["Issued reward for the block author.","Fixed reward for block producer.","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","","<code>pallet-rewards</code> events","","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Hooks to notify when there are any rewards for specific …","","Pallet rewards for issuing rewards to block producers.","<code>pallet-rewards</code> events","Issued reward for the voter.","Fixed reward for voter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[8,7,0,0,7,0,7,7,0,0,7,0,7,8,7,0,7,6,8,9,8,9,8,9,8,9,6,8,9,6,8,9,6,8,9,6,8,9,6,6,6,8,9,8,9,8,9,8,9,6,8,9,6,8,9,9,0,6,8,9,8,6,8,9,6,6,6,8,8,8,9,9,9,6,8,9,6,8,9,6,6,8,8,9,9,6,6,8,8,9,9,9,9,9,9,9,8,9,6,6,6,8,9,6,6,8,9,6,8,9,6,8,9,6,6,6,6,6,6,6,6,33,6,6,34,6,8,6,0,8,9,6,8,9,6,8,9,6,8,9,0,0,0,8,9,8,9,8,9,6,8,9,8,9,6,8,9,6,8,9,6,8,9,6,35,35,36,36],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[6,6],[[[8,[7]]],[[8,[7]]]],[[[9,[7]]],[[9,[7]]]],[[]],[[]],[[]],[[],10],[[],11],[[]],[12,[[14,[[8,[7]],13]]]],[12,[[14,[[9,[7]],13]]]],[[[15,[2]]],[[14,[13]]]],[[[15,[2]]],[[14,[13]]]],[[16,[15,[2]]],[[14,[13]]]],[[16,[15,[2]]],[[14,[13]]]],[[16,12],[[14,[13]]]],[[16,12],[[14,[13]]]],[10],[10],[10],[10],[10],[10],[[[9,[7]]],17],0,[10],[10],[10],[[[8,[7]],[0,[18,19]]]],[[6,6],20],[[[8,[7]],[8,[7]]],20],[[[9,[7]],[9,[7]]],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[6,21],22],[[[8,[7]],21],22],[[[9,[7]],21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[7]]],2],[[],[[15,[2]]]],[[[9,[7]]],23],[[],[[15,[23]]]],[[[9,[7]]],24],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],10],[[],[[5,[25]]]],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[[26,[7]]]],[[],27],[[[26,[7]]]],[[[26,[7]]]],[[]],[[[26,[7]],28],28],[[],28],[[[26,[7]]],28],[[[26,[7]]],28],[[]],[[],28],[[[8,[7]]],10],[[],[[5,[29]]]],0,[[[15,[2]]],[[5,[2,4]]]],[[[15,[2]]],[[5,[2,4]]]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],30],[[],30],[[],30],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[32]]]],0,0,0,0],"c":[8],"p":[[3,"Private"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[8,"Config"],[4,"Event"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"slice"],[15,"u32"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[8,"WeightInfo"],[8,"OnReward"],[13,"BlockReward"],[13,"VoteReward"]]},\
"pallet_runtime_configs":{"doc":"Pallet for tweaking the runtime configs for multiple …","t":"EIGGGDGDLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLALLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLCCCLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Call","Config","ConfirmationDepthK","EnableDomains","EnableTransfer","GenesisConfig","Module","Pallet","__clone_box","__clone_box","assimilate_storage","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","confirmation_depth_k","count","crate_version","current_storage_version","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","enable_domains","enable_domains","enable_transfer","enable_transfer","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","index","infos","init","init","init","integrity_test","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","module_name","name","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","serialize","storage_info","storage_types","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","whitelisted_storage_keys","ConfirmationDepthK","EnableDomains","EnableTransfer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip"],"q":[[0,"pallet_runtime_configs"],[137,"pallet_runtime_configs::storage_types"]],"d":["Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Storage type is <code>StorageValue</code> with value type …","Whether to disable the calls in pallet-domains.","Whether to disable the normal balances transfer calls.","Can be used to configure the genesis state of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","An auto-generated getter for <code>EnableDomains</code>.","","An auto-generated getter for <code>EnableTransfer</code>.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Warning: Doc-Only","Whether to disable the calls in pallet-domains.","Whether to disable the normal balances transfer calls.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,11,12,3,12,12,12,11,3,12,11,3,12,3,11,12,11,12,3,11,11,11,12,12,12,12,3,11,3,12,11,3,12,3,12,0,11,3,12,11,3,11,3,11,12,11,11,11,12,12,12,11,12,11,3,12,11,11,3,3,12,12,11,11,3,3,12,12,12,12,12,12,12,12,11,11,11,3,12,11,11,3,12,11,3,12,11,3,12,11,11,11,11,11,11,11,11,11,3,11,0,12,11,12,11,3,12,11,3,12,0,0,0,12,12,12,11,3,12,12,11,3,12,11,3,12,11,3,12,11,0,0,0,35,36,37,35,36,37,35,36,37,35,36,37,35,36,37,35,36,37,35,35,36,36,37,37,35,35,36,36,37,37,35,36,37,35,36,37,35,36,37,35,36,37,35,36,37,35,36,37,35,36,37,35,36,37,35,36,37,35,36,37],"f":[0,0,0,0,0,0,0,0,[1],[1],[[[3,[2]],4],[[6,[5]]]],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]]],[11,11],[[[12,[2]]],[[12,[2]]]],[[]],[[]],0,[[],13],[[],14],[[]],[15,[[6,[[12,[2]],16]]]],[[[17,[7]]],[[6,[16]]]],[[18,[17,[7]]],[[6,[16]]]],[[18,15],[[6,[16]]]],[[],[[3,[2]]]],[13],[13],[13],[13],[13],[13],[19,[[6,[[3,[2]]]]]],[[[12,[2]]],20],0,[13],[13],[13],[[],21],0,[[],21],0,[[11,11],21],[[[12,[2]],[12,[2]]],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[11,22],23],[[[12,[2]],22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[2]]],7],[[],[[17,[7]]]],[[[12,[2]]],24],[[],[[17,[24]]]],[[[12,[2]]],25],[[],[[10,[7,9]]]],[[],13],[[],[[10,[26]]]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[[27,[2]]]],[[],28],[[[27,[2]]]],[[]],[[[27,[2]],29],29],[[[27,[2]]],29],[[],29],[[[3,[2]],30],6],[[],[[10,[31]]]],0,[[[17,[7]]],[[10,[7,9]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],32],[[],32],[[],32],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[10,[34]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[6],"p":[[3,"Private"],[8,"Config"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[4,"Result"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[15,"slice"],[15,"u32"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[8,"Serializer"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"EnableDomains"],[3,"EnableTransfer"],[3,"ConfirmationDepthK"]]},\
"pallet_subspace":{"doc":"Subspace consensus pallet.","t":"ENQEIQGNIQQGEEQQNNDGIQQQQQQGGDDDQQQQQNNQNGQQNDQLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLNLMNLNLMNLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLNLLLLLLLLLLLMLLALNLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNMLLLLLLLLLALLMMMMMMMMMMMFFFFFFFDIQDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLKLMKLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDILLLLLKLKLKLKLLLLLLLLLLKLKLLLLLLKLL","n":["AllowAuthoringBy","Anyone","BlockAuthoringDelay","Call","Config","ConfirmationDepthK","CurrentSlot","DuplicateOffenceReport","EraChangeTrigger","EraChangeTrigger","EraDuration","EraStartSlot","Error","Event","ExpectedBlockTime","ExpectedVotesPerBlock","FarmerVote","FirstFarmer","GenesisConfig","GenesisSlot","GlobalRandomnessIntervalTrigger","GlobalRandomnessIntervalTrigger","GlobalRandomnessUpdateInterval","HandleEquivocation","InitialSolutionRange","MaxPiecesInSector","MinSectorLifetime","Module","NextSolutionRangeOverride","NormalEraChange","NormalGlobalRandomnessInterval","Pallet","PotEntropyInjectionDelay","PotEntropyInjectionInterval","PotEntropyInjectionLookbackDepth","RecentHistoryFraction","RecentSegments","RewardsAlreadyEnabled","RootFarmer","RuntimeEvent","SegmentHeaderStored","ShouldAdjustSolutionRange","ShouldAdjustSolutionRange","SlotProbability","SolutionRangeAdjustmentAlreadyEnabled","SolutionRangeOverride","WeightInfo","__clone_box","__clone_box","__clone_box","allow_authoring_by","archived_history_size","assimilate_storage","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","chain_constants","check_inherent","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","create_inherent","current_slot","current_storage_version","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_authoring_by_anyone","enable_authoring_by_anyone","enable_rewards","enable_rewards","enable_rewards","enable_solution_range_adjustment","enable_solution_range_adjustment","enable_storage_access","enable_storage_access","enable_storage_access","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivocation","find_block_reward_address","find_voting_reward_addresses","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_slot","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","global_randomnesses","history_size","identity","identity","identity","identity","identity","index","infos","init","init","init","init","init","init","init","init","init","integrity_test","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_in_block_list","is_inherent","is_inherent_required","is_storage_access_enabled","module_name","name","new_call_variant_enable_authoring_by_anyone","new_call_variant_enable_rewards","new_call_variant_enable_solution_range_adjustment","new_call_variant_enable_storage_access","new_call_variant_report_equivocation","new_call_variant_store_segment_headers","new_call_variant_vote","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_offence","on_runtime_upgrade","on_timestamp_set","phantom","pot_slot_iterations","pre_dispatch","pre_dispatch_equivocation_report","random","random_seed","report_equivocation","report_equivocation","root_plot_public_key","segment_commitment","serialize","serialize","should_adjust_solution_range","size_hint","size_hint","size_hint","size_hint","size_hint","slot_duration","solution_range","solution_ranges","storage_info","storage_types","store_segment_headers","store_segment_headers","submit_equivocation_report","submit_test_equivocation_report","submit_vote","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","trigger","trigger","trigger","trigger","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_equivocation_report","validate_unsigned","vote","vote","voting_solution_range","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weights","whitelisted_storage_keys","with_weight","equivocation_proof","height","segment_headers","signed_vote","solution_range_override","voting_solution_range_override","height","parent_hash","public_key","reward_address","segment_header","enable_authoring_by_anyone","enable_rewards","enable_solution_range_adjustment","enable_storage_access","report_equivocation","store_segment_headers","vote","EquivocationHandler","HandleEquivocation","ReportLongevity","SubspaceEquivocationOffence","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_mut","into_mut","into_ref","into_ref","is_known_offence","is_known_offence","offender","offenders","report_offence","report_offence","slot","submit_equivocation_report","submit_equivocation_report","time_slot","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","AllowAuthoringByAnyone","BlockList","BlockRandomness","CurrentBlockAuthorInfo","CurrentBlockVoters","CurrentSlot","EnableRewards","EraStartSlot","GenesisSlot","GlobalRandomnesses","IsStorageAccessEnabled","NextSolutionRangeOverride","ParentBlockAuthorInfo","ParentBlockVoters","ParentVoteVerificationData","PotEntropy","PotSlotIterations","RootPlotPublicKey","SegmentCommitment","ShouldAdjustSolutionRange","SolutionRanges","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","enable_authoring_by_anyone","enable_authoring_by_anyone","enable_rewards","enable_rewards","enable_solution_range_adjustment","enable_solution_range_adjustment","enable_storage_access","enable_storage_access","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","report_equivocation","report_equivocation","store_segment_headers","store_segment_headers","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vote","vote","vzip"],"q":[[0,"pallet_subspace"],[435,"pallet_subspace::Call"],[441,"pallet_subspace::Event"],[446,"pallet_subspace::dispatchables"],[453,"pallet_subspace::equivocation"],[513,"pallet_subspace::storage_types"],[954,"pallet_subspace::weights"]],"d":["","Anyone can author new blocks at genesis.","Number of slots between slot arrival and when …","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Depth <code>K</code> after which a block enters the recorded history (a …","Current slot number.","A given equivocation report is valid but already …","Trigger an era change, if any should take place.","Subspace requires some logic to be triggered on every …","The amount of time, in blocks, that each era should last. …","Slot at which current era started.","The <code>Error</code> enum of this pallet.","Events type.","The expected average block time at which Subspace should …","Number of votes expected per block.","Farmer vote.","Author of the first block will be able to author blocks …","Can be used to configure the genesis state of this pallet.","The slot at which the first block was created. This is 0 …","Trigger global randomness every interval.","Subspace requires periodic global randomness update.","The amount of time, in blocks, between updates of global …","The equivocation handling subsystem, defines methods to …","Initial solution range used for challenges during the very …","How many pieces one sector is supposed to contain (max)","Minimum lifetime of a plotted sector, measured in archived …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Override solution range during next update","A type signifying to Subspace that it should perform era …","A type signifying to Subspace that it should perform a …","The Subspace Pallet","Delay after block, in slots, when entropy injection takes …","Interval, in blocks, between blockchain entropy injection …","Interval, in entropy injection intervals, where to take …","Fraction of pieces from the “recent history” (…","Number of latest archived segments that are considered “…","Rewards already active.","Specified root farmer is allowed to author blocks unless …","The overarching event type.","Segment header was stored in blockchain history.","Storage to check if the solution range is to be adjusted …","","How often in slots slots (on average, not counting …","Solution range adjustment already enabled.","Override for next solution range adjustment","Weight information for extrinsics in this pallet.","","","","Who can author blocks at genesis.","Size of the archived history of the blockchain in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>CurrentSlot</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","Enable storage access for all users.","See <code>Pallet::enable_authoring_by_anyone</code>.","Enable rewards for blocks and votes at specified block …","Whether rewards should be enabled.","See <code>Pallet::enable_rewards</code>.","Enable solution range adjustment after every era. Note: No …","See <code>Pallet::enable_solution_range_adjustment</code>.","Enable storage access for all users.","Whether storage access should be enabled.","See <code>Pallet::enable_storage_access</code>.","","","","","","","","","","","","","","","","","","An opt-in utility module for reporting equivocations.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","An auto-generated getter for <code>GenesisSlot</code>.","","","","","","An auto-generated getter for <code>GlobalRandomnesses</code>.","Total number of pieces in the blockchain","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Check if <code>farmer_public_key</code> is in block list (due to …","","","An auto-generated getter for <code>IsStorageAccessEnabled</code>.","","","Create a call with the variant <code>enable_authoring_by_anyone</code>.","Create a call with the variant <code>enable_rewards</code>.","Create a call with the variant …","Create a call with the variant <code>enable_storage_access</code>.","Create a call with the variant <code>report_equivocation</code>.","Create a call with the variant <code>store_segment_headers</code>.","Create a call with the variant <code>vote</code>.","","","","","","","","","","","","","Number of iterations for proof of time per slot","","","","","Report farmer equivocation/misbehavior. This method will …","See <code>Pallet::report_equivocation</code>.","An auto-generated getter for <code>RootPlotPublicKey</code>.","An auto-generated getter for <code>SegmentCommitment</code>.","","","An auto-generated getter for <code>ShouldAdjustSolutionRange</code>.","","","","","","Determine the Subspace slot duration based on the …","Value that should be set as solution range","An auto-generated getter for <code>SolutionRanges</code>.","","Auto-generated docs-only module listing all (public and …","Submit new segment header to the blockchain. This is an …","See <code>Pallet::store_segment_headers</code>.","Submits an extrinsic to report an equivocation. This …","Just stores offender from equivocation report in block …","Submit farmer vote vote that is essentially a header with …","","","","","","","","","Trigger a global randomness update. This should be called …","Trigger an era change, if any should take place. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Farmer vote, currently only used for extra rewards to …","See <code>Pallet::vote</code>.","Value that should be set as voting solution range","","","","","","","","","","Autogenerated weights for pallet_subspace","","","","","","","","","","","","","","Enable storage access for all users.","Enable rewards for blocks and votes at specified block …","Enable solution range adjustment after every era. Note: No …","Enable storage access for all users.","Report farmer equivocation/misbehavior. This method will …","Submit new segment header to the blockchain. This is an …","Farmer vote, currently only used for extra rewards to …","Generic equivocation handler. This type implements …","A trait with utility methods for handling equivocation …","The longevity, in blocks, that the equivocation report is …","A Subspace equivocation offence report.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns true if all of the offenders at the given time …","","Identity of the farmer that produced the equivocation.","","Report an offence proved by the given reporters.","","A Subspace slot in which this incident happened.","Create and dispatch an equivocation report extrinsic.","","","","","","","","","","","","","","","Allow block authoring by anyone or just root.","A set of blocked farmers keyed by their public key.","The current block randomness, updated at block …","Temporary value (cleared at block finalization) with block …","Temporary value (cleared at block finalization) with …","Current slot number.","Enable rewards since specified block number.","Slot at which current era started.","The slot at which the first block was created. This is 0 …","Global randomnesses derived from from PoR signature and …","Enable storage access for all users.","Override solution range during next update","Parent block author information.","Voters in the parent block (set at the end of the block …","Storage of previous vote verification data, updated on …","Entropy that needs to be injected into proof of time chain …","Number of iterations for proof of time per slot","Root plot public key.","Mapping from segment index to corresponding segment …","Storage to check if the solution range is to be adjusted …","Solution ranges used for challenges.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeights for pallet_subspace using the Substrate node and …","Weight functions needed for pallet_subspace.","","","","","","","Storage: Subspace RootPlotPublicKey (r:1 w:0) Proof …","","Storage: Subspace EnableRewards (r:1 w:1) Proof Skipped: …","","Storage: Subspace ShouldAdjustSolutionRange (r:1 w:1) …","","Storage: Subspace IsStorageAccessEnabled (r:0 w:1) Proof …","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","Storage: OffencesSubspace ReportsByKindIndex (r:1 w:1) …","","Storage: Subspace SegmentCommitment (r:20 w:20) Proof …","","","","","","","Storage: Subspace BlockList (r:1 w:0) Proof Skipped: …",""],"i":[0,24,3,0,0,3,0,23,0,3,3,0,0,0,3,3,15,24,0,0,0,3,3,3,3,3,3,0,0,0,0,0,3,3,3,3,3,23,24,3,15,0,3,3,23,0,3,14,15,16,4,14,4,15,23,16,24,25,15,23,16,24,25,15,23,16,24,25,75,76,14,4,15,23,16,24,25,75,76,14,4,15,23,16,24,25,4,14,14,14,15,16,14,15,16,14,14,14,14,14,15,23,16,24,25,15,23,16,24,25,15,23,16,24,25,15,23,16,24,25,4,24,75,76,14,4,15,23,16,24,25,75,76,14,4,15,23,16,24,25,4,24,16,0,75,76,14,4,15,23,16,24,25,14,16,14,4,16,14,16,14,4,16,15,23,16,24,25,14,15,16,14,14,14,15,15,15,16,16,16,0,14,14,14,15,23,16,24,25,75,76,14,4,15,23,16,24,25,75,75,76,76,14,14,4,4,15,15,23,23,16,16,24,24,25,25,75,75,76,76,14,14,4,4,15,15,23,23,16,16,24,24,25,25,14,16,16,16,16,16,14,14,15,23,16,24,25,14,14,75,76,14,4,15,23,16,24,25,14,75,76,14,4,15,23,16,24,25,75,76,14,4,15,23,16,24,25,75,76,14,4,15,23,16,24,25,14,14,14,14,14,14,16,16,16,16,16,16,16,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,16,14,14,4,24,14,15,23,16,24,25,14,25,14,14,0,14,16,14,14,14,15,23,16,24,25,14,15,16,77,78,75,76,75,76,14,4,15,23,16,24,25,75,76,14,4,15,23,16,24,25,0,0,0,15,23,16,24,25,15,23,16,24,25,15,23,16,24,25,75,76,14,4,15,23,16,24,25,15,23,16,24,25,75,76,14,4,15,23,16,24,25,75,76,14,4,15,23,16,24,25,14,14,14,16,25,75,76,14,4,15,23,16,24,25,0,14,23,79,80,81,82,83,83,84,84,84,84,85,0,0,0,0,0,0,0,0,0,86,0,68,70,68,70,68,68,70,68,70,68,70,70,70,70,70,70,68,70,68,68,70,70,68,68,70,70,68,70,68,70,68,70,68,70,86,68,70,70,86,68,70,86,68,70,68,70,68,70,68,70,68,70,68,70,68,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,0,0,108,108,108,108,108,109,108,109,108,109,108,109,108,108,108,108,108,108,108,108,108,108,109,108,109,108,108,108,108,108,108,109,108,108],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[[],2],[[[4,[3]],5],[[7,[6]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[11,[8,10]]]],[[],[[11,[8,10]]]],[[],[[11,[8,10]]]],[[],[[11,[8,10]]]],[[],[[11,[8,10]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]]],[[],12],[13,7],[14,14],[[[15,[3]]],[[15,[3]]]],[[[16,[3]]],[[16,[3]]]],[[]],[[]],[[]],[[],17],[[],18],[13,19],[[],20],[[]],[21,[[7,[[15,[3]],22]]]],[21,[[7,[23,22]]]],[21,[[7,[[16,[3]],22]]]],[21,[[7,[24,22]]]],[21,[[7,[25,22]]]],[[[26,[8]]],[[7,[22]]]],[[[26,[8]]],[[7,[22]]]],[[[26,[8]]],[[7,[22]]]],[[[26,[8]]],[[7,[22]]]],[[[26,[8]]],[[7,[22]]]],[[27,[26,[8]]],[[7,[22]]]],[[27,[26,[8]]],[[7,[22]]]],[[27,[26,[8]]],[[7,[22]]]],[[27,[26,[8]]],[[7,[22]]]],[[27,[26,[8]]],[[7,[22]]]],[[27,21],[[7,[22]]]],[[27,21],[[7,[22]]]],[[27,21],[[7,[22]]]],[[27,21],[[7,[22]]]],[[27,21],[[7,[22]]]],[[],4],[[],24],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[28,[[7,[4]]]],[28,[[7,[24]]]],[[[16,[3]]],29],0,[17],[17],[17],[17],[17],[17],[17],[17],[17],[[[30,[3]]],31],0,[[[30,[3]],[19,[[32,[3]]]]],31],0,0,[[[30,[3]],[19,[2]],[19,[2]]],31],0,[[[30,[3]]],31],0,0,[[[15,[3]],[0,[33,34]]]],[[23,[0,[33,34]]]],[[[16,[3]],[0,[33,34]]]],[[24,[0,[33,34]]]],[[25,[0,[33,34]]]],[[14,14],35],[[[15,[3]],[15,[3]]],35],[[[16,[3]],[16,[3]]],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],0,[[],19],[[],11],[[14,36],37],[[[15,[3]],36],37],[[[23,[3]],36],37],[[[16,[3]],36],37],[[24,36],37],[[25,36],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[[16,[3]]],8],[[],[[26,[8]]]],[[[16,[3]]],38],[[],[[26,[38]]]],[[[16,[3]]],39],[[],40],[[],41],[[],[[11,[8,10]]]],[[],[[11,[8,10]]]],[[],[[11,[8,10]]]],[[],[[11,[8,10]]]],[[],[[11,[8,10]]]],[[],17],[[],[[11,[42]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,35],[[],35],[13,[[7,[19]]]],[[],35],[[],38],[[],38],[[],[[16,[3]]]],[[[19,[[32,[3]]]]],[[16,[3]]]],[[[19,[2]],[19,[2]]],[[16,[3]]]],[[],[[16,[3]]]],[[[46,[[45,[[44,[3]]]]]]],[[16,[3]]]],[[[11,[47]]],[[16,[3]]]],[[[46,[[48,[[32,[3]]]]]]],[[16,[3]]]],[[[32,[3]]]],[[],49],[[[32,[3]]]],[[[32,[3]]]],[[]],[[[32,[3]],50],50],[[[32,[3]]],50],[[[32,[3]]],50],[[[26,[[51,[43]]]]]],[[],50],[[]],0,0,[[],[[7,[52]]]],[[[45,[[44,[3]]]]],[[7,[52]]]],[[[26,[8]]]],[[]],[[[30,[3]],[46,[[45,[[44,[3]]]]]]],29],0,[[],[[19,[43]]]],[[[54,[53]]],[[19,[55]]]],[[4,56],7],[[24,56],7],[[],35],[[[15,[3]]],17],[23,17],[[[16,[3]]],17],[24,17],[25,17],[[]],0,[[],57],[[],[[11,[58]]]],0,[[[30,[3]],[11,[47]]],31],0,[[[45,[[44,[3]]]]],19],[[[45,[[44,[3]]]]],19],[[[48,[[32,[[0,[3,[59,[[16,[[0,[3,[59,[[16,[[0,[3,59]]]]]]]]]]]]]]]]]]]],[[[26,[8]]],[[11,[8,10]]]],[[[26,[8]]],[[11,[8,10]]]],[[[26,[8]]],[[11,[8,10]]]],[[[26,[8]]],[[11,[8,10]]]],[[[26,[8]]],[[11,[8,10]]]],[[]],[[]],[[]],[[[32,[3]],60]],[[[32,[3]]]],[[[32,[3]],60]],[[[32,[3]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[11,[8,10]]]],[[],[[11,[8,10]]]],[[],[[11,[8,10]]]],[[],[[11,[8,10]]]],[[],[[11,[8,10]]]],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],62],[[],62],[[],62],[[],62],[[],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[63,[45,[[44,[3]]]]],64],[63,64],[[[30,[3]],[46,[[48,[[32,[3]]]]]]],31],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[11,[65]]]],[50,[[67,[66]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[[19,[[32,[3]]]]]],[[[19,[2]],[19,[2]]]],[[]],[[[46,[[45,[[44,[3]]]]]]]],[[[11,[47]]]],[[[46,[[48,[[32,[3]]]]]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[],68],[17],[17],[17],[17],[17],[17],[[[70,[69]],[70,[69]]],35],[[],35],[[],35],[[],35],[[[70,[71]],36],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[43]],20],35],[[[26,[43]],20],35],0,[[[70,[72]]],[[11,[72]]]],[[[70,[43]]],[[7,[73]]]],[[[70,[43]]],[[7,[73]]]],0,[[[45,[44]]],74],[[[45,[[44,[[0,[3,[59,[[16,[[0,[3,[59,[[16,[[0,[3,59]]]]]]]]]]]]]]]]]]],74],[[[70,[72]]]],[[],7],[[],7],[[],7],[[],7],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[17],[17],[17],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[]],[[]],[[]],[[]],[[]],[[],17],[[]],[[]],[[]],[[],50],[[],50],[27,50],[27,50],[[],7],[[],7],[[],61],[[]],[[]],[[],50],[[],50],[[]]],"c":[27],"p":[[3,"Private"],[15,"u64"],[8,"Config"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[4,"Result"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[4,"ChainConstants"],[3,"InherentData"],[3,"Pallet"],[4,"Event"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[4,"Option"],[3,"Slot"],[8,"Input"],[3,"Error"],[4,"Error"],[4,"AllowAuthoringBy"],[3,"SolutionRangeOverride"],[15,"slice"],[15,"u32"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[6,"OriginFor"],[6,"DispatchResult"],[6,"BlockNumberFor"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"GlobalRandomnesses"],[3,"HistorySize"],[3,"PalletInfoData"],[6,"FarmerPublicKey"],[6,"HeaderFor"],[6,"EquivocationProof"],[3,"Box"],[4,"SegmentHeader"],[3,"SignedVote"],[3,"StorageVersion"],[3,"Weight"],[3,"OffenceDetails"],[4,"TransactionValidityError"],[3,"SegmentIndex"],[8,"EncodeLike"],[6,"SegmentCommitment"],[8,"Serializer"],[3,"SolutionRanges"],[3,"StorageInfo"],[8,"SendTransactionTypes"],[3,"Randomness"],[3,"TypeId"],[3,"Type"],[4,"TransactionSource"],[6,"TransactionValidity"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[3,"EquivocationHandler"],[8,"PartialEq"],[3,"SubspaceEquivocationOffence"],[8,"Debug"],[8,"Clone"],[4,"OffenceError"],[6,"DispatchResult"],[3,"NormalGlobalRandomnessInterval"],[3,"NormalEraChange"],[8,"GlobalRandomnessIntervalTrigger"],[8,"EraChangeTrigger"],[13,"report_equivocation"],[13,"enable_rewards"],[13,"store_segment_headers"],[13,"vote"],[13,"enable_solution_range_adjustment"],[13,"FarmerVote"],[13,"SegmentHeaderStored"],[8,"HandleEquivocation"],[3,"GenesisSlot"],[3,"CurrentSlot"],[3,"GlobalRandomnesses"],[3,"PotSlotIterations"],[3,"SolutionRanges"],[3,"ShouldAdjustSolutionRange"],[3,"NextSolutionRangeOverride"],[3,"EraStartSlot"],[3,"BlockList"],[3,"SegmentCommitment"],[3,"ParentVoteVerificationData"],[3,"ParentBlockAuthorInfo"],[3,"EnableRewards"],[3,"CurrentBlockAuthorInfo"],[3,"ParentBlockVoters"],[3,"CurrentBlockVoters"],[3,"PotEntropy"],[3,"BlockRandomness"],[3,"IsStorageAccessEnabled"],[3,"AllowAuthoringByAnyone"],[3,"RootPlotPublicKey"],[3,"SubstrateWeight"],[8,"WeightInfo"]]},\
"pallet_transaction_fees":{"doc":"Pallet for charging and re-distributing transaction fees.","t":"QENIQQEQQGDQQQNNNQIQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLALLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLMMMMMMMMDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BlockchainHistorySize","Call","ComputeFeesReward","Config","CreditSupply","Currency","Event","FindBlockRewardAddress","MinReplicationFactor","Module","Pallet","RuntimeEvent","StorageFeesEscrowBlockReward","StorageFeesEscrowBlockTax","StorageFeesEscrowChange","StorageFeesReward","TipsReward","TotalSpacePledged","WeightInfo","WeightInfo","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","infos","init","init","init","integrity_test","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","module_name","name","note_transaction_fees","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_initialize","on_runtime_upgrade","size_hint","storage_fees_escrow","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","transaction_byte_fee","try_from","try_from","try_from","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","whitelisted_storage_keys","after","amount","amount","amount","before","who","who","who","BlockAuthor","CollectedBlockFees","CollectedStorageFeesEscrow","TransactionByteFee","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip"],"q":[[0,"pallet_transaction_fees"],[169,"pallet_transaction_fees::Event"],[177,"pallet_transaction_fees::storage_types"]],"d":["How big is the history of the blockchain in archived state …","Contains a variant per dispatchable extrinsic that this …","Compute fees.","Configuration trait of this pallet.","How many credits there is in circulation.","","<code>pallet-transaction-fees</code> events","","Minimum desired number of replicas of the blockchain to be …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Pallet rewards for issuing rewards to block producers.","<code>pallet-transaction-fees</code> events","How much (ratio) of storage fees escrow should be given to …","How much (ratio) of storage fees collected in a block …","Storage fees escrow change.","Storage fees.","Tips.","How much space there is on the network.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>CollectedStorageFeesEscrow</code>.","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State of storage fees escrow after block execution.","Amount of collected storage fees.","Amount of collected compute fees.","Amount of collected tips.","State of storage fees escrow before block execution.","Receiver of the storage fees.","Receiver of the compute fees.","Receiver of the tip.","Temporary value (cleared at block finalization) which …","Temporary value (cleared at block finalization) which …","Escrow of storage fees, a portion of it is released to the …","Temporary value (cleared at block finalization) which …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[7,0,8,0,7,7,0,7,7,0,0,7,7,7,8,8,8,7,0,7,6,8,9,8,9,8,9,8,9,6,8,9,6,8,9,6,8,9,6,8,9,6,6,6,8,9,8,9,8,9,8,9,6,8,9,6,8,9,9,0,6,8,9,8,6,8,9,6,6,6,8,8,8,9,9,9,6,8,9,6,8,9,6,6,8,8,9,9,6,6,8,8,9,9,9,9,9,9,9,8,9,6,6,6,8,9,6,6,8,9,6,8,9,6,8,9,6,6,6,6,6,6,6,6,6,33,6,6,6,8,6,6,0,8,9,6,8,9,6,6,8,9,6,8,9,0,0,0,8,9,8,9,8,9,6,8,9,8,9,6,8,9,6,8,9,6,8,9,6,34,35,36,37,34,35,36,37,0,0,0,0,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,38,39,39,40,40,41,41,38,38,39,39,40,40,41,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[6,6],[[[8,[7]]],[[8,[7]]]],[[[9,[7]]],[[9,[7]]]],[[]],[[]],[[]],[[],10],[[],11],[[]],[12,[[14,[[8,[7]],13]]]],[12,[[14,[[9,[7]],13]]]],[[[15,[2]]],[[14,[13]]]],[[[15,[2]]],[[14,[13]]]],[[16,[15,[2]]],[[14,[13]]]],[[16,[15,[2]]],[[14,[13]]]],[[16,12],[[14,[13]]]],[[16,12],[[14,[13]]]],[10],[10],[10],[10],[10],[10],[[[9,[7]]],17],0,[10],[10],[10],[[[8,[7]],[0,[18,19]]]],[[6,6],20],[[[8,[7]],[8,[7]]],20],[[[9,[7]],[9,[7]]],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[6,21],22],[[[8,[7]],21],22],[[[9,[7]],21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[7]]],2],[[],[[15,[2]]]],[[[9,[7]]],23],[[],[[15,[23]]]],[[[9,[7]]],24],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],10],[[],[[5,[25]]]],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[]],[[[26,[7]]]],[[],27],[[[26,[7]]]],[[[26,[7]]]],[[]],[[[26,[7]],28],28],[[],28],[[[26,[7]]],28],[[[26,[7]]],28],[[],28],[[[8,[7]]],10],[[]],[[],[[5,[29]]]],0,[[[15,[2]]],[[5,[2,4]]]],[[[15,[2]]],[[5,[2,4]]]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],30],[[],30],[[],30],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[32]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],30],[[],30],[[],30],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[9],"p":[[3,"Private"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[8,"Config"],[4,"Event"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"slice"],[15,"u32"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[8,"WeightInfo"],[13,"StorageFeesEscrowChange"],[13,"StorageFeesReward"],[13,"ComputeFeesReward"],[13,"TipsReward"],[3,"CollectedStorageFeesEscrow"],[3,"TransactionByteFee"],[3,"BlockAuthor"],[3,"CollectedBlockFees"]]},\
"pallet_transporter":{"doc":"Pallet transporter used to move funds between chains.","t":"QEIQDEENNNNDNNGNNNDQQQQDNQLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLALLLLLLLLLLLNLLLLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLMMMMMMMMMMMFDLLLLLLLLLLLLLLLLLLLLDILLLLLLLLLLLLLLLKLKLKLLLLLLL","n":["AccountIdConverter","Call","Config","Currency","EndpointHandler","Error","Event","IncomingTransferSuccessful","InvalidAccountId","InvalidPayload","InvalidTransferRequest","Location","LowBalance","MissingTransferRequest","Module","OutgoingTransferFailed","OutgoingTransferInitiated","OutgoingTransferSuccessful","Pallet","RuntimeEvent","SelfChainId","SelfEndpointId","Sender","Transfer","UnexpectedMessage","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account_id","amount","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","identity","identity","index","infos","init","init","init","init","init","init","init","integrity_test","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","message","message_response","message_response_weight","message_weight","module_name","name","new_call_variant_transfer","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","outgoing_transfers","receiver","sender","size_hint","size_hint","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","transfer","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weights","whitelisted_storage_keys","with_weight","amount","dst_location","chain_id","chain_id","chain_id","chain_id","err","message_id","message_id","message_id","message_id","transfer","OutgoingTransfers","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","message","message","message_response","message_response","transfer","transfer","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_transporter"],[331,"pallet_transporter::Call"],[333,"pallet_transporter::Event"],[342,"pallet_transporter::dispatchables"],[343,"pallet_transporter::storage_types"],[364,"pallet_transporter::weights"]],"d":["MultiAccountID &lt;&gt; T::AccountId converter.","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Currency used by this pallet.","Endpoint handler implementation for pallet transporter.","Errors emitted by pallet-transporter.","Events emitted by pallet-transporter.","Emits when a given incoming transfer was successfully …","Emits when the account id type is invalid.","Failed to decode transfer payload.","Emits when the request doesn’t match the expected one..","Location that either sends or receives transfers between …","Emits when the account has low balance to make a transfer.","Emits when the request for a response received is missing.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Emits when a given outgoing transfer was failed on …","Emits when there is a new outgoing transfer.","Emits when a given outgoing transfer was successful.","Pallet transporter to move funds between chains.","Event type for this pallet.","Gets the chain_id of the current execution environment.","Gets the endpoint_id of the this pallet in a given …","Sender used to transfer funds.","Transfer of funds from one chain to another.","Emits when the incoming message is not bound to this chain.","Weight information for extrinsics in this pallet.","","","","","","Unique account on chain.","Amount being transferred between entities.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unique identity of chain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>transfer</code>.","","","","","","","","An auto-generated getter for <code>OutgoingTransfers</code>.","Receiver location of the transfer.","Sender location of the transfer.","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","Initiates transfer of funds from account on src_chain to …","See <code>Pallet::transfer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Autogenerated weights for pallet_transporter","","","","","Destination chain the transfer is bound to.","Destination chain the transfer is bound to.","Destination chain the transfer is bound to.","Source chain the transfer is coming from.","Error from dst_chain endpoint.","Id of the transfer.","Id of the transfer.","Id of the transfer.","Id of the transfer.","Initiates transfer of funds from account on src_chain to …","All the outgoing transfers on this execution environment.","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Weights for pallet_transporter using the Substrate node …","Weight functions needed for pallet_transporter.","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","Storage: System Account (r:1 w:0) Proof: System Account …","","Storage: Transporter OutgoingTransfers (r:1 w:1) Proof …","","Storage: System Account (r:1 w:1) Proof: System Account …","","","","","",""],"i":[10,0,0,10,0,0,0,11,19,19,19,0,19,19,0,11,11,11,0,10,10,10,10,0,19,10,6,8,9,11,12,6,8,6,8,11,19,12,6,8,11,19,12,6,8,11,19,12,6,8,9,11,19,31,12,6,8,9,11,19,31,12,6,6,8,9,11,12,6,8,9,11,12,9,9,9,6,8,11,19,12,6,8,11,19,12,6,8,11,19,12,6,8,11,19,12,6,8,9,11,19,31,12,6,8,9,11,19,31,12,12,0,6,8,9,11,19,31,12,6,8,11,19,12,6,8,9,11,12,6,6,6,8,8,8,9,9,9,11,11,11,12,12,12,6,8,9,11,19,31,12,6,8,9,11,19,31,12,6,6,8,8,9,9,11,11,19,19,31,31,12,12,6,6,8,8,9,9,11,11,19,19,31,31,12,12,12,12,12,12,12,6,8,11,19,12,9,9,6,8,9,11,19,31,12,9,6,8,9,11,19,31,12,6,8,9,11,19,31,12,6,8,9,11,19,31,12,31,31,31,31,9,9,12,9,9,9,9,9,9,9,9,8,8,6,8,11,19,12,9,0,6,8,11,19,12,6,8,9,11,12,9,12,6,8,9,11,19,31,12,6,8,9,11,19,31,12,0,0,0,6,8,11,19,12,6,8,11,19,12,6,8,11,19,12,6,8,9,11,19,31,12,6,8,11,19,12,6,8,9,11,19,31,12,6,8,9,11,19,31,12,6,8,9,11,19,31,12,0,9,19,52,52,53,54,55,56,54,53,54,55,56,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,58,51,58,51,58,51,51,51,51,51,51,51],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],0,0,[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[6,6],[[[8,[7]]],[[8,[7]]]],[9,9],[[[11,[10]]],[[11,[10]]]],[[[12,[10]]],[[12,[10]]]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],14],[[]],[15,[[17,[6,16]]]],[15,[[17,[[8,[18]],16]]]],[15,[[17,[[11,[10]],16]]]],[15,[[17,[19,16]]]],[15,[[17,[[12,[10]],16]]]],[[[20,[2]]],[[17,[16]]]],[[[20,[2]]],[[17,[16]]]],[[[20,[2]]],[[17,[16]]]],[[[20,[2]]],[[17,[16]]]],[[[20,[2]]],[[17,[16]]]],[[21,[20,[2]]],[[17,[16]]]],[[21,[20,[2]]],[[17,[16]]]],[[21,[20,[2]]],[[17,[16]]]],[[21,[20,[2]]],[[17,[16]]]],[[21,[20,[2]]],[[17,[16]]]],[[21,15],[[17,[16]]]],[[21,15],[[17,[16]]]],[[21,15],[[17,[16]]]],[[21,15],[[17,[16]]]],[[21,15],[[17,[16]]]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[[12,[10]]],22],0,[13],[13],[13],[13],[13],[13],[13],[[6,[0,[23,24]]]],[[[8,[25]],[0,[23,24]]]],[[[11,[10]],[0,[23,24]]]],[[19,[0,[23,24]]]],[[[12,[10]],[0,[23,24]]]],[[6,6],26],[[[8,[27]],[8,[27]]],26],[[9,9],26],[[[11,[10]],[11,[10]]],26],[[[12,[10]],[12,[10]]],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[6,28],29],[[[8,[30]],28],29],[[9,28],29],[[[11,[10]],28],29],[[[19,[10]],28],29],[[[31,[30]],28],29],[[[12,[10]],28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[10]]],2],[[],[[20,[2]]]],[[[12,[10]]],32],[[],[[20,[32]]]],[[[12,[10]]],33],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],13],[[],[[5,[34]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[10]],35,36],37],[[[31,[10]],35,36,37],38],[[[31,[10]]],39],[[[31,[10]]],39],[[],32],[[],32],[6,[[12,[10]]]],[[[40,[10]]]],[[],41],[[[40,[10]]]],[[]],[[[40,[10]],39],39],[[[40,[10]]],39],[[],39],[[[42,[35]],42],[[43,[8]]]],0,0,[6,13],[[[8,[25]]],13],[[[11,[10]]],13],[19,13],[[[12,[10]]],13],[[],[[5,[44]]]],0,[[[20,[2]]],[[5,[2,4]]]],[[[20,[2]]],[[5,[2,4]]]],[[[20,[2]]],[[5,[2,4]]]],[[[20,[2]]],[[5,[2,4]]]],[[[20,[2]]],[[5,[2,4]]]],[[]],[[]],[[]],[[]],[[]],[[[45,[10]],6],38],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,0,[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],[[5,[2,4]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],47],[[],47],[[],47],[[],47],[[],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[5,[48]]]],[39,[[50,[49]]]],0,0,0,0,0,0,0,0,0,0,0,[6],0,[[]],[[]],[13],[13],[13],[[]],[[]],[[]],[[]],[[]],[[],13],[[]],[[]],[[]],[[],17],[[],17],[[],46],[[]],[[]],[[]],0,0,[[]],[[]],[13],[13],[13],[[[51,[30]],28],29],[[]],[[]],[[]],[[]],[[]],[[],13],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],17],[[],17],[[],46],[[]],[[]],[[]]],"c":[14],"p":[[3,"Private"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"Location"],[8,"Clone"],[3,"Transfer"],[3,"Pallet"],[8,"Config"],[4,"Event"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Result"],[8,"Decode"],[4,"Error"],[15,"slice"],[15,"u32"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[8,"Encode"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"EndpointHandler"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[4,"ChainId"],[3,"EndpointRequest"],[6,"EndpointResponse"],[6,"DispatchResult"],[3,"Weight"],[6,"BlockNumberFor"],[3,"StorageVersion"],[8,"EncodeLike"],[4,"Option"],[3,"StorageInfo"],[6,"OriginFor"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[3,"SubstrateWeight"],[13,"transfer"],[13,"OutgoingTransferInitiated"],[13,"OutgoingTransferFailed"],[13,"OutgoingTransferSuccessful"],[13,"IncomingTransferSuccessful"],[3,"OutgoingTransfers"],[8,"WeightInfo"]]},\
"sc_consensus_fraud_proof":{"doc":"Subspace fraud proof verification in the consensus level.","t":"DLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["FraudProofBlockImport","__clone_box","block_import","borrow","borrow_mut","check_block","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","import_block","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","to_owned","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"sc_consensus_fraud_proof"]],"d":["A block-import handler for Subspace fraud proof.","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[0,[1],[2,3],[[]],[[]],[[[3,[4,[0,[[5,[4]],6,7]],[0,[[8,[4]],6]],[0,[[9,[4]],6]],[0,[10,11,6]],[0,[10,11,6]]]],[12,[4]]],[[15,[[14,[13]]]]]],[[[3,[16,16]]],[[3,[16,16]]]],[[]],[17],[17],[17],[[]],[[]],[[]],[[]],[[]],[[[3,[4,[0,[[5,[4]],6,7]],[0,[[8,[4]],6]],[0,[[9,[4]],6]],[0,[10,11,6]],[0,[10,11,6]]]],[18,[4]]],[[15,[[14,[13]]]]]],[[],17],[[]],[[[14,[19]]],[[14,[20,19]]]],[[[2,[19]]],[[2,[20,19]]]],[[[21,[19]]],[[21,[20,19]]]],[[]],[[]],[[]],[[],22],[[],22],[[],23],[[],24],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[3,"Arc"],[3,"FraudProofBlockImport"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"Send"],[8,"Sync"],[8,"BlockImport"],[8,"VerifyFraudProof"],[8,"Encode"],[8,"Decode"],[3,"BlockCheckParams"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Clone"],[15,"usize"],[3,"BlockImportParams"],[3,"Global"],[8,"Any"],[3,"Rc"],[4,"Result"],[3,"TypeId"],[15,"str"]]},\
"sc_consensus_subspace":{"doc":"Subspace Proof-of-Archival-Storage consensus","t":"DNDNNNNNNENNNNNNNNNNNNNDDNNNNDNNNNNDDDDDNLLLLLLLLMMMLAAMFMLMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLAMLLMLLMMMMFLMMLFMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMMMMMMMDLLLLLLFLLLLLLLLLLLLLLLFLLLLLLLLNNNENLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ArchivedSegmentNotification","BadRewardSignature","BlockImportingNotification","CheckInherents","CheckInherentsUnhandled","Client","CreateInherents","DifferentSegmentCommitment","DigestItemError","Error","FarmerInBlockList","GenesisUnavailable","HeaderBadSeal","HeaderUnsealed","InvalidAuditChunkOffset","InvalidChunkWitness","InvalidGlobalRandomness","InvalidHistorySize","InvalidPiece","InvalidPieceOffset","InvalidProofOfSpace","InvalidSetOfSegmentHeaders","InvalidSolutionRange","NewSlotInfo","NewSlotNotification","OnlyRootPlotPublicKeyAllowed","OutsideOfSolutionRange","ParentBlockNoAssociatedWeight","ParentUnavailable","RewardSigningNotification","RuntimeApi","SectorExpired","SegmentCommitmentNotFound","SegmentHeadersExtrinsicNotFound","SlotMustIncrease","SubspaceBlockImport","SubspaceLink","SubspaceParams","SubspaceSyncOracle","SubspaceWorker","TooFarInFuture","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","acknowledgement_sender","acknowledgement_sender","archived_segment","archived_segment_notification_stream","archiver","aux_schema","backoff_authoring_blocks","block_import","block_import","block_importing_notification_stream","block_number","block_proposal_slot_portion","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_block","client","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_inherent_data_providers","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","env","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_authoring","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_chain_constants","global_randomness","hash","import_block","import_queue","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_future","is_major_syncing","is_offline","justification_sync_link","kzg","max_block_proposal_slot_portion","new","new_slot_info","new_slot_notification_stream","notification","offchain_tx_pool_factory","poll","provide","public_key","reward_signing_notification_stream","segment_headers_for_block","segment_headers_store","select_chain","signature_sender","slot","slot_duration","slot_duration","solution_range","solution_sender","source","start_subspace","subspace_link","sync_oracle","telemetry","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","voting_solution_range","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","current_history_size","expiration_history_size","half_solution_range","max_pieces_in_sector","piece_offset","slot","slot","solution_distance","SegmentHeadersStore","__clone_box","add_segment_headers","borrow","borrow_mut","clone","clone_into","create_subspace_archiver","deref","deref_mut","drop","fmt","from","from_mut","from_ref","get_segment_header","init","into","into_any","into_any_arc","into_any_rc","max_segment_index","new","recreate_genesis_segment","to_owned","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","BadRewardSignature","HeaderBadSeal","HeaderUnsealed","VerificationError","VerificationError","borrow","borrow_mut","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from_mut","from_ref","import_queue","init","into","into_any","into_any_arc","into_any_rc","provide","to_string","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","SubspaceNotificationStream","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","subscribe","to_owned","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"sc_consensus_subspace"],[357,"sc_consensus_subspace::Error"],[365,"sc_consensus_subspace::archiver"],[397,"sc_consensus_subspace::import_queue"],[432,"sc_consensus_subspace::notification"]],"d":["Notification with block header hash that needs to be …","Bad reward signature","Notification with number of the block that is about to be …","Check inherents error","Unhandled check inherents error","Client error","Create inherents error.","Different segment commitment found","Error during digest item extraction","Errors encountered by the Subspace authorship task.","Farmer in block list","Genesis block unavailable. Cannot import","Header has a bad seal","Header is unsealed","Invalid audit chunk offset","Invalid chunk witness","Block has invalid associated global randomness","Invalid history size","Piece verification failed","Piece verification failed","Invalid proof of space","Invalid set of segment headers","Block has invalid associated solution range","Information about new slot that just arrived","New slot notification with slot information and sender for …","Only root plot public key is allowed","Solution is outside of solution range","Parent block has no associated weight","Parent unavailable. Cannot import","Notification with a hash that needs to be signed to …","Runtime Api error.","Sector expired","Segment commitment not found","Stored segment header extrinsic was not found","Slot number must increase","A block-import handler for Subspace.","State that must be shared between the import queue and the …","Parameters for Subspace.","Subspace sync oracle that takes into account force …","Worker for Subspace which implements <code>Future&lt;Output=()&gt;</code>. …","Header rejected: too far in the future","","","","","","","","","Sender that signified the fact of receiving archived …","Sender for pausing the block import when operator is not …","Archived segment.","Get stream with notifications about archived segment …","Consensus archiver module.","Schema for Subspace block weight in the aux-db.","Strategy and parameters for backing off block production.","Produce a Subspace block-import object to be used later on …","The underlying block-import object to supply our produced …","Get stream with notifications about each imported block.","Block number","The proportion of the slot dedicated to proposing.","","","","","","","","","","","","","","","","","","","","","","","","The client to use","","","","","","","","","","","","","","","","","Something that can create the inherent data providers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The environment we are producing blocks for.","","","","","","","","","Force authoring of blocks even if we are offline","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get chain constant configurations","Global randomness","Hash to be signed.","","Subspace block import implementation","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hook into the sync module to control the justification …","Access KZG instance","The maximum proportion of the slot dedicated to proposing …","Create new instance","New slot information.","Get stream with notifications about new slot arrival with …","Utility module for handling Subspace client notifications.","The offchain transaction pool factory.","","","Public key of the plot identity that should create …","A stream with notifications about headers that need to be …","Get blocks that are expected to be included at specified …","Persistent storage of segment headers","The SelectChain Strategy","Sender that can be used to send signature for the header.","Slot","Read configuration from the runtime state at current best …","Get the slot duration from this link.","Acceptable solution range for block authoring","Sender that can be used to send solutions for the slot.","","Start the Subspace worker.","The source of timestamps for relative slots","A sync oracle","Handle use to report telemetries.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Acceptable solution range for voting","","","","","","","","","","","","Current history size","Expiration history size","Half of solution range","How many pieces one sector is supposed to contain (max)","Index of the piece that failed verification","Time slot","Time slot","Solution distance","Persistent storage of segment headers","","Add segment headers","","","","","Crate an archiver task that will listen for importing …","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a single segment header","","Calls <code>U::from(self)</code>.","","","","Returns last observed segment index","Create new instance","Derive genesis segment on demand, returns <code>Ok(None)</code> in case …","","","","","","","","","Bad reward signature","Header has a bad seal","Header is unsealed","Errors encountered by the Subspace authorship task.","Verification error","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Start an import queue for the Subspace consensus algorithm.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The receiving half of the Subspace notification channel.","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","Subscribe to a channel through which notifications are …","","","","","","","",""],"i":[0,38,0,38,38,38,38,38,38,0,38,38,38,38,38,38,38,38,38,38,38,38,38,0,0,38,38,38,38,0,38,38,38,38,38,0,0,0,0,0,38,22,29,30,31,32,4,19,3,4,19,4,3,0,0,66,0,66,3,19,66,66,48,22,29,30,31,32,4,19,38,3,66,48,22,29,30,31,32,4,19,38,3,22,66,22,29,30,31,32,4,19,3,22,29,30,31,32,4,19,3,66,66,48,22,29,30,31,32,4,19,38,3,66,48,22,29,30,31,32,4,19,38,3,66,48,22,29,30,31,32,4,19,38,3,66,29,30,31,32,4,19,38,38,66,66,48,22,29,30,31,32,4,19,38,38,38,38,38,3,66,48,22,29,30,31,32,4,19,38,3,66,48,22,29,30,31,32,4,19,38,3,0,30,32,22,0,66,48,22,29,30,31,32,4,19,38,3,66,48,22,29,30,31,32,4,19,38,3,66,48,22,29,30,31,32,4,19,38,3,66,22,29,30,31,32,4,19,38,3,66,48,22,29,30,31,32,4,19,38,3,48,29,29,66,3,66,29,31,3,0,66,48,38,32,3,3,66,66,32,30,0,3,30,31,38,0,66,66,66,22,29,30,31,32,4,19,3,38,66,48,22,29,30,31,32,4,19,38,3,66,48,22,29,30,31,32,4,19,38,3,66,48,22,29,30,31,32,4,19,38,3,66,48,22,29,30,31,32,4,19,38,3,66,48,22,29,30,31,32,4,19,38,3,66,48,22,29,30,31,32,4,19,38,3,30,66,48,22,29,30,31,32,4,19,38,3,86,86,87,88,88,87,88,87,0,16,16,16,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,16,16,16,16,16,16,16,41,41,41,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],0,0,0,[[[3,[2]]],[[5,[4]]]],0,0,0,[[6,[11,[[0,[[7,[2]],[8,[2]],[9,[2]],10]]]],12,[0,[[13,[2,[3,[2]]]],14,15]],[16,[[0,[10,14,15]]]]],[[18,[17]]]],0,[[[3,[2]]],[[5,[[19,[2]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[20,2,[0,[[7,[2]],[8,[2]],[9,[2]],10,14,15]],[0,[[21,[2]],14,15]],[0,[[13,[2,[3,[2]]]],14,15]],[0,[10,14,15]]]],[23,[2]]],[[26,[[25,[24]]]]]],0,[[[22,[2,27,27]]],[[22,[2,27,27]]]],[[[29,[[0,[28,14,15,27]]]]],[[29,[[0,[28,14,15,27]]]]]],[30,30],[31,31],[32,32],[4,4],[[[19,[[0,[2,27]]]]],[[19,[[0,[2,27]]]]]],[[[3,[[0,[27,2]]]]],[[3,[[0,[27,2]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],0,[[[29,[[0,[28,14,15,34]]]],35],36],[[30,35],36],[[31,35],36],[[32,35],36],[[4,35],36],[[[19,[[0,[2,34]]]],35],36],[[[38,[37]],35],36],[[[38,[[0,[34,37]]]],35],36],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,[[38,[37]]]],[39,[[38,[37]]]],[40,[[38,[37]]]],[[]],[[[41,[37]]],[[38,[37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[[7,[2]],[9,[2]],10]]],[[18,[42,38]]]],0,0,[[[22,[20,2,[0,[[7,[2]],[8,[2]],[9,[2]],10,14,15]],[0,[[21,[2]],14,15]],[0,[[13,[2,[3,[2]]]],14,15]],[0,[10,14,15]]]],[43,[2]]],[[26,[[25,[24]]]]]],0,[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[25,[44]]],[[25,[45,44]]]],[[[25,[44]]],[[25,[45,44]]]],[[[25,[44]]],[[25,[45,44]]]],[[[25,[44]]],[[25,[45,44]]]],[[[25,[44]]],[[25,[45,44]]]],[[[25,[44]]],[[25,[45,44]]]],[[[25,[44]]],[[25,[45,44]]]],[[[25,[44]]],[[25,[45,44]]]],[[[25,[44]]],[[25,[45,44]]]],[[[25,[44]]],[[25,[45,44]]]],[[[25,[44]]],[[25,[45,44]]]],[[[11,[44]]],[[11,[45,44]]]],[[[11,[44]]],[[11,[45,44]]]],[[[11,[44]]],[[11,[45,44]]]],[[[11,[44]]],[[11,[45,44]]]],[[[11,[44]]],[[11,[45,44]]]],[[[11,[44]]],[[11,[45,44]]]],[[[11,[44]]],[[11,[45,44]]]],[[[11,[44]]],[[11,[45,44]]]],[[[11,[44]]],[[11,[45,44]]]],[[[11,[44]]],[[11,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[[]],[[[29,[[0,[28,14,15]]]]],47],[[[29,[[0,[28,14,15]]]]],47],0,[[[3,[2]]],12],0,[[47,[0,[28,14,15]]],[[29,[[0,[28,14,15]]]]]],0,[[[3,[2]]],[[5,[31]]]],0,0,[[[26,[48]],49],50],[51],0,[[[3,[2]]],[[5,[32]]]],[[[3,[2]],[52,[2]]],[[54,[53]]]],0,0,0,0,[[[0,[10,[7,[2]],[55,[2]]]]],[[56,[6]]]],[[[3,[2]]],6],0,0,[[[38,[37]]],[[58,[57]]]],[[[66,[2,[0,[[7,[2]],[59,[2]],[60,[2]],[9,[2]],[61,[2]],10,14,15]],[62,[2]],[0,[[63,[2]],14,15]],[0,[[21,[2]],14,15]],[0,[28,14,15,27]],[64,[2]],[0,[[13,[2]],14,15]],[0,[[65,[[52,[2]]]],14,15]],[0,[10,14,15]]]]],[[18,[48,67]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],68],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[[[16,[10]],[71,[53]]],[[18,[17]]]],[[]],[[]],[16,16],[[]],[[[16,[[0,[10,14,15]]]],[3,[2]],[11,[[0,[[7,[2]],[8,[2]],[9,[2]],[73,[2,[72,[2]]]],[74,[2,[72,[2]]]],10,14,15]]]],[29,[[0,[28,14,15]]]],[58,[75]]],[[0,[24,14]]]],[33],[33],[33],[[[16,[34]],35],36],[[]],[[]],[[]],[[[16,[10]],76],[[58,[53]]]],[[],33],[[]],[[[25,[44]]],[[25,[45,44]]]],[[[11,[44]]],[[11,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[[[16,[10]]],[[58,[76]]]],[[[11,[10]]],[[18,[[16,[10]],17]]]],[[[0,[[7,[2]],[8,[2]],[9,[2]]]],12],[[18,[[58,[77]],[25,[57]]]]]],[[]],[[],18],[[],18],[[],69],[[],70],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[33],[33],[33],[[[41,[[0,[78,37]]]],[41,[[0,[78,37]]]]],47],[[],47],[[],47],[[],47],[[],47],[[[41,[37]],35],36],[[[41,[[0,[34,37]]]],35],36],[[]],[[]],[[]],[[[0,[[21,[2]],14,15]],[58,[[79,[2]]]],[11,[[0,[[7,[2]],[9,[2]],10,14,15]]]],12,[62,[2]],[0,[80,14,15]],81,[58,[82]],[58,[75]],[83,[2]],47],[[18,[[84,[2]],17]]]],[[],33],[[]],[[[25,[44]]],[[25,[45,44]]]],[[[11,[44]]],[[11,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[51],[[],68],[[],18],[[],18],[[],69],[[],70],[[]],[[]],[[]],0,[1],[[]],[[]],[[[5,[[0,[27,27,14,15,34]]]]],[[5,[[0,[27,27,14,15,34]]]]]],[[]],[33],[33],[33],[[]],[[]],[[]],[[],33],[[]],[[[25,[44]]],[[25,[45,44]]]],[[[11,[44]]],[[11,[45,44]]]],[[[46,[44]]],[[46,[45,44]]]],[[[5,[[0,[27,14,15,34]]]]],[[85,[[0,[27,14,15,34]]]]]],[[]],[[],18],[[],18],[[],69],[[],70],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Block"],[3,"SubspaceLink"],[3,"ArchivedSegmentNotification"],[3,"SubspaceNotificationStream"],[3,"SlotDuration"],[8,"ProvideRuntimeApi"],[8,"BlockBackend"],[8,"HeaderBackend"],[8,"AuxStore"],[3,"Arc"],[3,"Kzg"],[8,"CreateInherentDataProviders"],[8,"Send"],[8,"Sync"],[3,"SegmentHeadersStore"],[4,"Error"],[4,"Result"],[3,"BlockImportingNotification"],[8,"Table"],[8,"BlockImport"],[3,"SubspaceBlockImport"],[3,"BlockCheckParams"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Clone"],[8,"SyncOracle"],[3,"SubspaceSyncOracle"],[3,"NewSlotInfo"],[3,"NewSlotNotification"],[3,"RewardSigningNotification"],[15,"usize"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Header"],[4,"Error"],[4,"Error"],[4,"ApiError"],[4,"VerificationError"],[4,"ChainConstants"],[3,"BlockImportParams"],[3,"Global"],[8,"Any"],[3,"Rc"],[15,"bool"],[3,"SubspaceWorker"],[3,"Context"],[4,"Poll"],[3,"Demand"],[6,"NumberFor"],[4,"SegmentHeader"],[3,"Vec"],[8,"UsageProvider"],[6,"Result"],[8,"Error"],[4,"Option"],[8,"ProvideUncles"],[8,"BlockchainEvents"],[8,"HeaderMetadata"],[8,"SelectChain"],[8,"Environment"],[8,"JustificationSyncLink"],[8,"BackoffAuthoringBlocksStrategy"],[3,"SubspaceParams"],[4,"Error"],[3,"String"],[3,"TypeId"],[15,"str"],[15,"slice"],[8,"Backend"],[8,"LockImportRun"],[8,"Finalizer"],[3,"TelemetryHandle"],[3,"SegmentIndex"],[3,"NewArchivedSegment"],[8,"PartialEq"],[6,"BoxJustificationImport"],[8,"Fn"],[8,"SpawnEssentialNamed"],[3,"Registry"],[3,"OffchainTransactionPoolFactory"],[6,"DefaultImportQueue"],[3,"TracingUnboundedReceiver"],[13,"SectorExpired"],[13,"OutsideOfSolutionRange"],[13,"InvalidPieceOffset"]]},\
"sc_consensus_subspace_rpc":{"doc":"RPC api for Subspace.","t":"DIIDKLLMLLLLMMLLLLLLMLLLLLLKLLLLLLLLLLLLLMKLLLMKLLMKLLMKLLKLLKLLKLLKLLKLLMMLLLLLLLLLLLLLL","n":["SubspaceRpc","SubspaceRpcApiClient","SubspaceRpcApiServer","SubspaceRpcConfig","acknowledge_archived_segment_header","acknowledge_archived_segment_header","acknowledge_archived_segment_header","archived_segment_notification_stream","borrow","borrow","borrow_mut","borrow_mut","client","deny_unsafe","deref","deref","deref_mut","deref_mut","drop","drop","dsn_bootstrap_nodes","from","from","from_mut","from_mut","from_ref","from_ref","get_farmer_app_info","get_farmer_app_info","get_farmer_app_info","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_rpc","kzg","last_segment_headers","last_segment_headers","last_segment_headers","new","new_slot_notification_stream","piece","piece","piece","reward_signing_notification_stream","segment_headers","segment_headers","segment_headers","segment_headers_store","submit_reward_signature","submit_reward_signature","submit_reward_signature","submit_solution_response","submit_solution_response","submit_solution_response","subscribe_archived_segment_header","subscribe_archived_segment_header","subscribe_archived_segment_header","subscribe_node_sync_status_change","subscribe_node_sync_status_change","subscribe_node_sync_status_change","subscribe_reward_signing","subscribe_reward_signing","subscribe_reward_signing","subscribe_slot_info","subscribe_slot_info","subscribe_slot_info","subscription_executor","sync_oracle","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"sc_consensus_subspace_rpc"]],"d":["Implements the <code>SubspaceRpcApiServer</code> trait for interacting …","Client implementation for the <code>SubspaceRpcApi</code> RPC API.","Server trait implementation for the <code>SubspaceRpcApi</code> RPC API.","Subspace RPC configuration","","","","Archived segment notification stream","","","","","Substrate client","Signifies whether a potentially unsafe RPC should be denied","","","","","","","DSN bootstrap nodes","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Ger metadata necessary for farmer operation","","Ger metadata necessary for farmer operation","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Collects all the methods and subscriptions defined in the …","Kzg instance","","","","Creates a new instance of the <code>SubspaceRpc</code> handler.","New slot notification stream","","","","Reward signing notification stream","","","","Segment headers store","","","","","","","Archived segment header subscription","","Archived segment header subscription","Archived segment header subscription","","Archived segment header subscription","Sign block subscription","","Sign block subscription","Slot info subscription","","Slot info subscription","Task executor that is being used by RPC subscriptions","Subspace sync oracle","","","","","","","","","","","","","",""],"i":[0,0,0,0,37,14,38,24,24,14,24,14,24,24,24,14,24,14,24,14,24,24,14,24,14,24,14,37,14,38,24,14,24,14,24,14,24,14,24,14,37,24,37,14,38,14,24,37,14,38,24,37,14,38,24,37,14,38,37,14,38,37,14,38,37,14,38,37,14,38,37,14,38,24,24,24,14,24,14,24,14,24,14,24,14,24,14,24,14],"f":[0,0,0,0,[1,[[4,[[3,[2]]]]]],[[[14,[5,[0,[[6,[5]],[7,[5]],[8,[5]],9,10]],[0,[11,9,10,12]],[0,[13,9,10]]]],1],[[4,[[3,[2]]]]]],[[10,1],[[4,[[3,[2]]]]]],0,[[]],[[]],[[]],[[]],0,0,[15],[15],[15],[15],[15],[15],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[17,[16]]]],[[[14,[5,[0,[[6,[5]],[7,[5]],[8,[5]],9,10]],[0,[11,9,10,12]],[0,[13,9,10]]]]],[[17,[16]]]],[10,[[4,[[3,[2]]]]]],[[],15],[[],15],[[]],[[]],[[[3,[18]]],[[3,[19,18]]]],[[[3,[18]]],[[3,[19,18]]]],[[[20,[18]]],[[20,[19,18]]]],[[[20,[18]]],[[20,[19,18]]]],[[[21,[18]]],[[21,[19,18]]]],[[[21,[18]]],[[21,[19,18]]]],[[],22],0,[23,[[4,[[3,[2]]]]]],[[[14,[5,[0,[[6,[5]],[7,[5]],[8,[5]],9,10]],[0,[11,9,10,12]],[0,[13,9,10]]]],23],[[4,[[3,[2]]]]]],[[10,23],[[4,[[3,[2]]]]]],[[[24,[[0,[[6,[5]],[7,[5]]]],[0,[11,9,10,12]],[0,[13,9,10]]]]],[[26,[[14,[5,[0,[[6,[5]],[7,[5]]]],[0,[11,9,10,12]],[0,[13,9,10]]]],25]]]],0,[27,[[17,[[30,[[29,[28]]]]]]]],[[[14,[5,[0,[[6,[5]],[7,[5]],[8,[5]],9,10]],[0,[11,9,10,12]],[0,[13,9,10]]]],27],[[17,[[30,[[29,[28]]]]]]]],[[10,27],[[4,[[3,[2]]]]]],0,[[[29,[1]]],[[4,[[3,[2]]]]]],[[[14,[5,[0,[[6,[5]],[7,[5]],[8,[5]],9,10]],[0,[11,9,10,12]],[0,[13,9,10]]]],[29,[1]]],[[4,[[3,[2]]]]]],[[10,[29,[1]]],[[4,[[3,[2]]]]]],0,[31,17],[[[14,[5,[0,[[6,[5]],[7,[5]],[8,[5]],9,10]],[0,[11,9,10,12]],[0,[13,9,10]]]],31],17],[[10,31],[[4,[[3,[2]]]]]],[32,17],[[[14,[5,[0,[[6,[5]],[7,[5]],[8,[5]],9,10]],[0,[11,9,10,12]],[0,[13,9,10]]]],32],17],[[10,32],[[4,[[3,[2]]]]]],[33,34],[[[14,[5,[0,[[6,[5]],[7,[5]],[8,[5]],9,10]],[0,[11,9,10,12]],[0,[13,9,10]]]],33],34],[10,[[4,[[3,[2]]]]]],[33,34],[[[14,[5,[0,[[6,[5]],[7,[5]],[8,[5]],9,10]],[0,[11,9,10,12]],[0,[13,9,10]]]],33],34],[10,[[4,[[3,[2]]]]]],[33,34],[[[14,[5,[0,[[6,[5]],[7,[5]],[8,[5]],9,10]],[0,[11,9,10,12]],[0,[13,9,10]]]],33],34],[10,[[4,[[3,[2]]]]]],[33,34],[[[14,[5,[0,[[6,[5]],[7,[5]],[8,[5]],9,10]],[0,[11,9,10,12]],[0,[13,9,10]]]],33],34],[10,[[4,[[3,[2]]]]]],0,0,[[],26],[[],26],[[],26],[[],26],[[],35],[[],35],[[],36],[[],36],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"SegmentIndex"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[8,"BlockBackend"],[8,"Send"],[8,"Sync"],[8,"SyncOracle"],[8,"Clone"],[8,"AuxStore"],[3,"SubspaceRpc"],[15,"usize"],[3,"FarmerAppInfo"],[6,"RpcResult"],[3,"Global"],[8,"Any"],[3,"Arc"],[3,"Rc"],[3,"RpcModule"],[15,"u64"],[3,"SubspaceRpcConfig"],[4,"ApiError"],[4,"Result"],[3,"PieceIndex"],[15,"u8"],[3,"Vec"],[4,"Option"],[3,"RewardSignatureResponse"],[3,"SolutionResponse"],[3,"SubscriptionSink"],[6,"SubscriptionResult"],[3,"TypeId"],[15,"str"],[8,"SubspaceRpcApiServer"],[8,"SubspaceRpcApiClient"]]},\
"sc_proof_of_time":{"doc":"Subspace proof of time implementation.","t":"IKAFADDDLLLLLLMLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLFLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["PotSlotWorker","on_proof","source","start_slot_worker","verifier","PotSlotInfo","PotSlotInfoStream","PotSourceWorker","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checkpoints","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","gossip","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","run","slot","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","PotGossipWorker","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","pot_gossip_peers_set_config","run","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","PotVerifier","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","from_mut","from_ref","genesis_seed","get_checkpoints","init","inject_verified_checkpoints","into","into_any","into_any_arc","into_any_rc","is_output_valid","new","to_owned","try_from","try_into","try_is_output_valid","type_id","type_name","unchecked_into","unique_saturated_into","verify_checkpoints","vzip"],"q":[[0,"sc_proof_of_time"],[5,"sc_proof_of_time::source"],[77,"sc_proof_of_time::source::gossip"],[100,"sc_proof_of_time::verifier"]],"d":["","Called when new proof of time is available for slot.","","Start a new slot worker.","Proof of time verifier","Proof of time slot information","Stream with proof of time slots","Worker producing proofs of time.","","","","","","","Proof of time checkpoints","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","PoT gossip functionality.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Run proof of time source","Slot number","","","","","","","","","","","","","","","","","","","","","","PoT gossip worker","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","Returns the network configuration for PoT gossip.","Run gossip engine.","","","","","","","","Verifier data structure that verifies and caches results …","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get genesis seed","","","Inject known good checkpoints into verifier","Calls <code>U::from(self)</code>.","","","","Verify sequence of proofs of time that covers <code>slots</code> slots …","","","","","Does the same verification as <code>Self::is_output_valid()</code> …","","","","","Verify proof of time checkpoints",""],"i":[0,6,0,0,0,0,0,0,43,12,17,43,12,17,43,43,12,12,17,43,12,12,17,43,12,17,12,17,43,12,17,43,12,17,43,12,17,0,43,12,17,43,12,17,43,12,17,43,12,17,43,12,17,17,17,43,43,12,17,43,12,17,43,12,17,43,12,17,43,12,17,43,12,17,43,12,17,0,36,36,36,36,36,36,36,36,36,36,36,36,36,0,36,36,36,36,36,36,36,36,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27],"f":[0,[[1,2]],0,[[3,[5,[4]],[0,[[6,[4]],[7,[4]],8,9]],[0,[10,8]],[0,[[11,[4]],8]],12]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[13],[12],[13],[13],[13],[12],[13],[13],[13],[13],[13],[[12,14],15],[[[17,[16,16]],14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],13],[[],13],[[],13],[[]],[[]],[[]],[[[19,[18]]],[[19,[20,18]]]],[[[19,[18]]],[[19,[20,18]]]],[[[19,[18]]],[[19,[20,18]]]],[[[21,[18]]],[[21,[20,18]]]],[[[21,[18]]],[[21,[20,18]]]],[[[21,[18]]],[[21,[20,18]]]],[[[22,[18]]],[[22,[20,18]]]],[[[22,[18]]],[[22,[20,18]]]],[[[22,[18]]],[[22,[20,18]]]],[[23,[21,[[0,[[24,[4]],[25,[4]],[26,[4]]]]]],27,[0,[[28,[4]],8,9,29]],[21,[[30,[4]]]]],[[32,[31]]]],[[[17,[4,[0,[[24,[4]],[25,[4]],[26,[4]]]]]]]],0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],33],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[13],[13],[13],[[]],[[]],[[]],[[],13],[[]],[[[19,[18]]],[[19,[20,18]]]],[[[21,[18]]],[[21,[20,18]]]],[[[22,[18]]],[[22,[20,18]]]],[[],35],[[[36,[4]]]],[[],32],[[],32],[[],33],[[],34],[[]],[[]],[[]],0,[37],[[]],[[]],[27,27],[[]],[13],[13],[13],[[27,14],15],[[]],[[]],[[]],[27,38],[[27,38,39],[[40,[2]]]],[[],13],[[27,38,39,2]],[[]],[[[19,[18]]],[[19,[20,18]]]],[[[21,[18]]],[[21,[20,18]]]],[[[22,[18]]],[[22,[20,18]]]],[[27,38,39,1,41],23],[[38,42],27],[[]],[[],32],[[],32],[[27,38,39,1,41],23],[[],33],[[],34],[[]],[[]],[[27,38,39,2],23],[[]]],"c":[],"p":[[3,"Slot"],[3,"PotCheckpoints"],[3,"SlotDuration"],[8,"Block"],[8,"SelectChain"],[8,"PotSlotWorker"],[8,"SimpleSlotWorker"],[8,"Send"],[8,"Sync"],[8,"SyncOracle"],[8,"CreateInherentDataProviders"],[3,"PotSlotInfoStream"],[15,"usize"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"PotSourceWorker"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"Arc"],[3,"Rc"],[15,"bool"],[8,"BlockchainEvents"],[8,"HeaderBackend"],[8,"ProvideRuntimeApi"],[3,"PotVerifier"],[8,"Network"],[8,"Clone"],[8,"Syncing"],[4,"ApiError"],[4,"Result"],[3,"TypeId"],[15,"str"],[3,"NonDefaultSetConfig"],[3,"PotGossipWorker"],[3,"Private"],[3,"PotSeed"],[3,"NonZeroU32"],[4,"Option"],[3,"PotOutput"],[3,"NonZeroUsize"],[3,"PotSlotInfo"]]},\
"sc_subspace_block_relay":{"doc":"Block relay implementation.","t":"DLLFLLLLLLLLLLLLLLLLLLLL","n":["NetworkWrapper","borrow","borrow_mut","build_consensus_relay","default","deref","deref_mut","drop","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","set","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"sc_subspace_block_relay"]],"d":["Wrapper to work around the circular dependency in …","","","Sets up the relay components.","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[[[2,[1]],[2,[[0,[[4,[3]],[5,[3]],[6,[3]]]]]],[2,[7]]],[[8,[3]]]],[[],1],[9],[9],[9],[[]],[[]],[[]],[[],9],[[]],[[[11,[10]]],[[11,[12,10]]]],[[[2,[10]]],[[2,[12,10]]]],[[[13,[10]]],[[13,[12,10]]]],[[1,[2,[14]]]],[[],15],[[],15],[[],16],[[],17],[[]],[[]],[[]]],"c":[],"p":[[3,"NetworkWrapper"],[3,"Arc"],[8,"Block"],[8,"HeaderBackend"],[8,"BlockBackend"],[8,"ProvideRuntimeApi"],[8,"TransactionPool"],[3,"BlockRelayParams"],[15,"usize"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"Rc"],[8,"NetworkRequest"],[4,"Result"],[3,"TypeId"],[15,"str"]]},\
"sc_subspace_chain_specs":{"doc":"Chain specification data structures tailored for Subspace.","t":"GGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ConsensusChainSpec","ExecutionChainSpec","SerializableChainSpec","__clone_box","add_boot_node","add_boot_node","as_json","as_storage_builder","assimilate_storage","boot_nodes","boot_nodes","borrow","borrow_mut","chain_type","clone","clone_into","cloned_box","code_substitutes","deref","deref_mut","deserialize","drop","extensions","extensions","extensions_mut","extensions_mut","fork_id","fork_id","from","from_genesis","from_json_bytes","from_json_file","from_mut","from_ref","id","id","init","into","into_any","into_any_arc","into_any_rc","name","name","properties","properties","protocol_id","protocol_id","serialize","set_storage","telemetry_endpoints","telemetry_endpoints","to_owned","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"sc_subspace_chain_specs"]],"d":["Specialized <code>ChainSpec</code> for the consensus runtime.","Specialized <code>ChainSpec</code> for the execution runtime.","Serializes chain spec to a string, note that when …","","Add a bootnode to the list.","","","","","A list of bootnode addresses.","","","","","","","","","","","","","","Returns a reference to the defined chain spec extensions.","","Returns a mutable reference to the defined chain spec …","","Optional network fork identifier.","Returns the argument unchanged.","Create hardcoded spec.","Parse json content into a <code>ChainSpec</code>","Parse json file into a <code>ChainSpec</code>","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Spec id.","","Calls <code>U::from(self)</code>.","","","","","Spec name.","","Additional loosly-typed properties of the chain.","Network protocol id.","","","","Telemetry endpoints (if any)","","","","","","","","",""],"i":[0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],"f":[0,0,0,[1],[[[8,[2,[0,[3,4,5,6,7]]]],9]],[[[8,[2,[0,[3,4,5,6,7]]]],9]],[[[8,[2,[0,[3,4,5,6,7]]]],10],[[12,[11,11]]]],[[[8,[2,[0,[3,4,5,6,7]]]]],13],[[[8,[2]],14],[[12,[11]]]],[[[8,[2,[0,[3,4,5,6,7]]]]],[[15,[9]]]],[[[8,[2,[0,[3,4,5,6,7]]]]],[[15,[9]]]],[[]],[[]],[[[8,[2,[0,[3,4,5,6,7]]]]],16],[[[8,[5]]],[[8,[5]]]],[[]],[[[8,[2,[0,[3,4,5,6,7]]]]],[[18,[17]]]],[[[8,[2,[0,[3,4,5,6,7]]]]],[[21,[11,[20,[19]]]]]],[22],[22],[23,[[12,[[8,[24]]]]]],[22],[[[8,[2,[0,[3,4,5,6,7]]]]],3],[[[8,[2,[0,[3,4,5,6,7]]]]],[[0,[3,4,5,6,7]]]],[[[8,[2,[0,[3,4,5,6,7]]]]],3],[[[8,[2,[0,[3,4,5,6,7]]]]],[[0,[3,4,5,6,7]]]],[[[8,[2,[0,[3,4,5,6,7]]]]],[[26,[25]]]],[[[8,[2,[0,[3,4,5,6,7]]]]],[[26,[25]]]],[[]],[[25,25,16,[0,[27,6,7]],[20,[9]],[26,[28]],[26,[25]],[26,[25]],[26,[29]],[0,[3,4,5,6,7]]],[[8,[2,[0,[3,4,5,6,7]]]]]],[[[31,[[30,[[15,[19]]]]]]],[[12,[[8,[24]],11]]]],[32,[[12,[[8,[24]],11]]]],[[]],[[]],[[[8,[2,[0,[3,4,5,6,7]]]]],25],[[[8,[2,[0,[3,4,5,6,7]]]]],25],[[],22],[[]],[[[18,[33]]],[[18,[34,33]]]],[[[35,[33]]],[[35,[34,33]]]],[[[36,[33]]],[[36,[34,33]]]],[[[8,[2,[0,[3,4,5,6,7]]]]],25],[[[8,[2,[0,[3,4,5,6,7]]]]],25],[[[8,[2,[0,[3,4,5,6,7]]]]],29],[[[8,[2,[0,[3,4,5,6,7]]]]],29],[[[8,[2,[0,[3,4,5,6,7]]]]],[[26,[25]]]],[[[8,[2,[0,[3,4,5,6,7]]]]],[[26,[25]]]],[[[8,[2,[0,[3,4,5,6,7]]]],37],12],[[[8,[2,[0,[3,4,5,6,7]]]],14]],[[[8,[2,[0,[3,4,5,6,7]]]]],[[26,[28]]]],[[[8,[2,[0,[3,4,5,6,7]]]]],[[26,[28]]]],[[]],[[],12],[[],12],[[],38],[[],25],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"RuntimeGenesis"],[8,"GetExtension"],[8,"Serialize"],[8,"Clone"],[8,"Send"],[8,"Sync"],[3,"SerializableChainSpec"],[3,"MultiaddrWithPeerId"],[15,"bool"],[3,"String"],[4,"Result"],[8,"BuildStorage"],[3,"Storage"],[15,"slice"],[4,"ChainType"],[8,"ChainSpec"],[3,"Box"],[15,"u8"],[3,"Vec"],[3,"BTreeMap"],[15,"usize"],[8,"Deserializer"],[8,"DeserializeOwned"],[15,"str"],[4,"Option"],[8,"Fn"],[3,"TelemetryEndpoints"],[6,"Properties"],[4,"Cow"],[8,"Into"],[3,"PathBuf"],[3,"Global"],[8,"Any"],[3,"Arc"],[3,"Rc"],[8,"Serializer"],[3,"TypeId"]]},\
"sp_consensus_subspace":{"doc":"Primitives for Subspace consensus.","t":"ENGGGDDDDDIENNEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLMMALLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLMMMMMMMMMMMDLLLLLLLLLLLLLLLLLFLINDNNEENNNNNDNNENNNNNDNLLKKKKKKKKKLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLFFLLLLLLKMLLLLLLLLLMMMMFFLLLLLLLLLLLLLLLLLLLLLLLLKMMMLLLLLLLLLLLLMMMKMKMMMMLKMKMMMMLLMMLKMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLMMRNDEDNILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMLLMKLLLLLLLLLLLLLLLLLLLLLMMNSGIDEINIQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKKKLKLLLLLLLLLLLLLLLL","n":["ChainConstants","Checkpoints","EquivocationProof","FarmerPublicKey","FarmerSignature","GlobalRandomnesses","KzgExtension","PosExtension","SignedVote","SolutionRanges","SubspaceApi","SubspaceJustification","V0","V0","Vote","WrappedSolution","WrappedVerifySolutionParams","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_mut_any","as_mut_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_constants","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","confirmation_depth_k","consensus","current","current","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","digests","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","era_duration","extract_segment_headers","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ffi_value","from_ffi_value","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","global_randomness_interval","global_randomnesses","hash","history_size","inherents","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_ffi_value","into_ffi_value","is_clear","is_clear","is_equivocation_proof_valid","is_in_block_list","is_inherent","max_encoded_len","max_encoded_len","max_encoded_len","max_pieces_in_sector","min_sector_lifetime","new","new","next","next","offence","recent_history_fraction","recent_segments","root_plot_public_key","segment_commitment","should_adjust_solution_range","signature","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot","slot_duration","slot_probability","solution","solution_ranges","submit_report_equivocation_extrinsic","submit_vote_extrinsic","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_justification","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","vote","voting_current","voting_next","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","confirmation_depth_k","era_duration","global_randomness_interval","min_sector_lifetime","recent_history_fraction","recent_segments","slot_probability","height","parent_hash","slot","solution","HostFunctions","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","host_functions","init","into","register_static","try_from","try_into","type_id","unchecked_into","unique_saturated_into","verify_solution","vzip","CompatibleDigestItem","Consensus","DeriveNextSolutionRangeParams","Duplicate","EnableSolutionRangeAdjustmentAndOverride","Error","ErrorDigestType","FailedToDecode","GlobalRandomness","Missing","NextDigestDerivationError","NextDigestVerificationError","NextDigestsVerificationParams","NextGlobalRandomness","NextSolutionRange","PreDigest","PreDigest","RootPlotPublicKeyUpdate","Seal","SegmentCommitment","SolutionRange","SubspaceDigestItems","V0","__clone_box","__clone_box","as_enable_solution_range_adjustment_and_override","as_global_randomness","as_next_global_randomness","as_next_solution_range","as_root_plot_public_key_update","as_segment_commitment","as_solution_range","as_subspace_pre_digest","as_subspace_seal","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","current_slot","current_solution_range","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derive_next_global_randomness","derive_next_solution_range","drop","drop","drop","drop","drop","drop","enable_solution_range_adjustment_and_override","enable_solution_range_adjustment_and_override","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","era_duration","era_duration","era_start_slot","era_start_slot","extract_pre_digest","extract_subspace_digest_items","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","global_randomness","global_randomness","global_randomness_interval","header_digests","init","init","init","init","init","init","into","into","into","into","into","into","maybe_next_solution_range_override","maybe_next_solution_range_override","maybe_root_plot_public_key","next_global_randomness","next_global_randomness","next_solution_range","next_solution_range","number","number","pre_digest","provide","root_plot_public_key_update","root_plot_public_key_update","segment_commitment","segment_commitments","should_adjust_solution_range","should_adjust_solution_range","signature","size_hint","slot","slot_probability","slot_probability","solution","solution_range","solution_range","subspace_pre_digest","subspace_seal","to_keyed_vec","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","verify_next_digests","vzip","vzip","vzip","vzip","vzip","vzip","slot","solution","INHERENT_IDENTIFIER","IncorrectSegmentHeadersList","InherentDataProvider","InherentError","InherentType","MissingSegmentHeadersList","SubspaceInherentData","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","data","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","encode_to","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_timestamp_and_slot_duration","init","init","init","into","into","into","is_fatal_error","new","provide_inherent_data","replace_subspace_inherent_data","segment_headers","size_hint","size_hint","slot","subspace_inherent_data","to_keyed_vec","to_keyed_vec","try_from","try_from","try_from","try_handle_error","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","actual","expected","DuplicateReport","ID","Kind","Offence","OffenceDetails","OffenceError","OnOffenceHandler","Other","ReportOffence","TimeSlot","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","is_known_offence","offender","offenders","on_offence","report_offence","size_hint","time_slot","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip"],"q":[[0,"sp_consensus_subspace"],[358,"sp_consensus_subspace::ChainConstants"],[365,"sp_consensus_subspace::Vote"],[369,"sp_consensus_subspace::consensus"],[389,"sp_consensus_subspace::digests"],[591,"sp_consensus_subspace::digests::PreDigest"],[593,"sp_consensus_subspace::inherents"],[675,"sp_consensus_subspace::inherents::InherentError"],[677,"sp_consensus_subspace::offence"]],"d":["Subspace blockchain constants.","Proof of time checkpoints that were not seen before","An equivocation proof for multiple block authorships on …","A Subspace farmer identifier. Necessarily equivalent to …","A Subspace farmer signature.","Subspace global randomnesses used for deriving global …","A KZG extension.","A Poof of space extension.","Signed farmer vote.","Subspace solution ranges used for challenges.","API necessary for block authorship with Subspace.","Subspace justification","V0 of the farmer vote.","V0 of the chain constants.","Farmer vote.","Wrapped solution for the purposes of runtime interface.","Wrapped solution verification parameters for the purposes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get Subspace blockchain constants","","","","","","","","","","","","","","","Depth <code>K</code> after which a block enters the recorded history.","Consensus-related runtime interface","Global randomness used for deriving global challenge in …","Solution range in current block/era.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Private implementation details of Subspace consensus …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Era duration in blocks.","Returns <code>Vec&lt;SegmentHeader&gt;</code> if a given extrinsic has them.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Number of blocks between global randomness updates.","Global randomnesses used for deriving global challenges.","Hash of the vote, used for signing and verifying signature.","Size of the blockchain history","Inherents for Subspace consensus","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Verifies the equivocation proof by making sure that: both …","Check if <code>farmer_public_key</code> is in block list (due to …","Checks if the extrinsic is an inherent.","","","","How many pieces one sector is supposed to contain (max)","Minimum lifetime of a plotted sector, measured in archived …","Create new instance.","Create new instance.","Global randomness that will be used for deriving global …","Solution range that will be used in the next block/era.","Common traits and types that are useful for describing …","Fraction of pieces from the “recent history” (…","Number of latest archived segments that are considered “…","Returns root plot public key in case block authoring is …","Get the segment commitment of records for specified …","Whether solution range adjustment is enabled.","Signature.","","","","","","","","","Slot at which vote was created.","The slot duration in milliseconds for Subspace.","Slot probability.","Solution contained within.","Solution ranges.","Submits an unsigned extrinsic to report an equivocation. …","Submit farmer vote vote that is essentially a header with …","","","","","","","","","","","","","","","","","","","","","","","","","Try to decode Subspace justification from generic …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Farmer vote.","Voting solution range in current block/era.","Voting solution range that will be used in the next …","","","","","","","","","","","Depth <code>K</code> after which a block enters the recorded history.","Era duration in blocks.","Number of blocks between global randomness updates.","Minimum lifetime of a plotted sector, measured in archived …","Fraction of pieces from the “recent history” (…","Number of latest archived segments that are considered “…","Slot probability.","Height at which vote was created.","Hash of the block on top of which vote was created.","Slot at which vote was created.","Solution (includes PoR).","Provides implementations for the extern host functions.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","Verify whether solution is valid.","","A digest item which is usable with Subspace consensus.","Generic consensus","Params used to derive the next solution range.","Duplicate Subspace digests","Enable solution range adjustment and override solution …","Digest error","Various kinds of digest types used in errors","Failed to decode Subspace digest","Global randomness","Subspace digest missing","Error when deriving next digests","Error when verifying next digests","Type that holds the parameters to derive and verify next …","Next global randomness","Next solution range","A Subspace pre-runtime digest. This contains all data …","Pre-digest","Root plot public key was updated","Seal (signature)","Segment commitment","Solution range","Digest items extracted from a header into convenient form","Initial version of the pre-digest","","","If this item is a Subspace Enable solution range …","If this item is a Subspace global randomness, return it.","If this item is a Subspace next global randomness, return …","If this item is a Subspace next solution range, return it.","If this item is a Subspace update of root plot public key, …","If this item is a Subspace segment commitment, return it.","If this item is a Subspace solution range, return it.","If this item is an Subspace pre-digest, return it.","If this item is a Subspace signature, return the signature.","","","","","","","","","","","","","","","","","Current slot of the block.","Current solution range of the block.","","","","","","","","","","","","","","","","","Returns the next global randomness if interval is met.","Derives next solution range if era duration interval has …","","","","","","","Construct digest item than indicates enabling of solution …","Enable solution range adjustment and Override solution …","","","","","","","","","","Era duration of the chain.","Era duration at which solution range is updated.","Slot at which era has begun.","Current Era start slot.","Extract the Subspace pre digest from the given header. …","Extract the Subspace global randomness from the given …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Construct a digest item which contains a global randomness.","Global randomness","Randomness interval at which next randomness is derived.","Digests present in the header that corresponds to number …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Solution range override that should be used instead of …","Next Solution range override. If the digest logs indicate …","Root plot public key. Value is updated when digest items …","Construct a digest item which contains next global …","Next global randomness","Construct a digest item which contains next solution range.","Next solution range","Current number of the block.","Header number for which we are verifying the digests.","Pre-runtime digest","","Construct digest item that indicates update of root plot …","Root plot public key was updated","Construct a digest item which contains segment commitment.","Segment commitments","Flag to check if the next solution range should be …","Should the solution range be adjusted on era change. If …","Signature (seal) if present","","Slot","Slot probability at which a block is produced.","Slot probability.","Solution (includes PoR)","Construct a digest item which contains a solution range.","Solution range","Construct a digest item which contains a Subspace …","Construct a digest item which contains a Subspace seal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derives and verifies next digest items based on their …","","","","","","","Slot","Solution (includes PoR)","The Subspace inherent identifier.","List of segment headers is not correct.","Provides the segment headers inherent data for Subspace.","Errors that can occur while checking segment headers.","The type of the Subspace inherent data.","List of segment headers is not present.","Auxiliary trait to extract Subspace inherent data.","","","","","","","Returns the <code>data</code> of this inherent data provider.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Creates the inherent data provider by calculating the slot …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create new inherent data provider from the given <code>data</code>.","","Replace Subspace inherent data.","Segment headers expected to be included in the block.","","","Slot at which block was created.","Get Subspace inherent data.","","","","","","","","","","","","","","","","","","","","","","List of segment headers contained within proposed block.","Expected list of segment headers according to node’s …","The report has already been submitted.","Identifier which is unique for this kind of an offence.","The kind of an offence, is a byte string representing some …","A trait implemented by an offence report.","A details about an offending authority for a particular …","Errors that may happen on offence reports.","A trait to take action on an offence.","Other error has happened.","A trait for decoupling offence reporters from the actual …","A type that represents a point in time on an abstract …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true iff all of the given offenders have been …","The offending authority id","The list of all offenders involved in this incident.","A handler for an offence of a particular kind.","Report an <code>offence</code> and reward given <code>reporters</code>.","","A point in time when this offence happened.","","","","","","","","","","","","","","","",""],"i":[0,8,0,0,0,0,0,0,0,0,0,0,10,5,0,0,0,8,10,11,12,13,5,2,4,8,10,11,12,13,5,18,19,2,4,8,10,11,12,13,5,18,19,2,4,81,12,13,8,10,11,12,13,5,8,10,11,12,13,5,5,0,12,13,8,10,11,12,13,5,18,19,8,10,11,12,13,5,18,19,8,10,11,12,13,5,18,19,8,10,11,12,13,5,18,19,12,13,8,10,11,12,13,5,18,19,2,2,4,4,8,10,11,12,13,5,18,19,2,2,4,4,0,8,10,11,12,13,5,18,19,2,4,18,19,8,10,11,12,13,5,18,19,10,11,12,13,5,10,10,10,11,11,11,12,12,12,13,13,13,5,5,5,5,81,8,10,11,12,13,5,18,19,8,10,11,12,13,5,18,18,19,19,2,2,4,4,18,19,8,10,11,12,13,5,18,19,2,4,8,10,11,12,13,5,18,19,2,4,5,81,10,81,0,8,10,11,12,13,5,18,19,2,4,8,10,11,12,13,5,18,19,2,4,18,19,12,13,0,81,81,12,13,5,81,5,2,4,12,13,0,5,5,81,81,81,11,8,10,11,12,13,5,18,19,10,81,5,10,81,81,81,8,10,11,12,13,5,18,19,8,10,11,12,13,5,8,10,11,12,13,5,18,19,2,4,8,8,10,11,12,13,5,18,19,2,4,8,10,11,12,13,5,18,19,2,4,8,10,11,12,13,5,8,10,11,12,13,5,18,19,2,4,8,10,11,12,13,5,18,19,2,4,18,19,11,13,13,8,10,11,12,13,5,18,19,2,4,82,82,82,82,82,82,82,83,83,83,83,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,84,0,63,0,65,63,0,0,65,63,65,65,65,0,63,63,0,63,63,63,63,63,0,61,61,63,85,85,85,85,85,85,85,85,85,64,68,61,63,65,66,64,68,61,63,65,66,61,63,61,63,64,64,61,61,61,61,64,68,61,63,65,66,64,68,61,63,65,66,0,0,64,68,61,63,65,66,85,66,61,63,65,63,63,63,65,65,65,64,68,64,68,0,0,61,63,63,65,65,66,64,68,61,63,65,66,64,68,61,63,65,66,64,68,61,63,65,66,85,66,68,68,64,68,61,63,65,66,64,68,61,63,65,66,64,68,68,85,66,85,66,64,68,66,65,85,66,85,66,64,68,66,61,61,64,68,61,85,66,85,85,61,61,63,63,65,64,68,61,63,65,66,64,68,61,63,65,66,64,68,61,63,65,66,64,68,61,63,65,66,64,68,61,63,65,66,0,64,68,61,63,65,66,86,86,0,71,0,0,0,71,0,69,71,70,69,71,70,69,71,70,71,70,71,70,71,70,69,69,71,70,69,71,70,69,71,70,71,70,71,70,69,71,70,69,71,70,69,71,70,69,69,71,70,69,71,70,71,69,69,87,70,71,70,70,87,71,70,69,71,70,69,69,71,70,69,71,70,69,71,70,69,71,70,69,71,70,88,88,80,89,0,0,0,0,0,80,0,89,79,80,79,80,79,79,79,79,79,79,79,80,79,80,79,80,79,79,79,80,79,80,80,80,79,79,79,80,79,80,79,80,79,80,79,80,79,80,79,90,79,89,91,90,79,89,79,79,80,79,80,79,80,79,79,80,79,80,79,79,80,79],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[2,3],[4,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[5,6]]]],[[]],[[]],[8,8],[[[10,[9,9,9]]],[[10,[9,9,9]]]],[[[11,[9,9,9]]],[[11,[9,9,9]]]],[12,12],[13,13],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[5,14],0,0,0,[15,[[7,[8,16]]]],[15,[[7,[[10,[17,17]],16]]]],[15,[[7,[11,16]]]],[15,[[7,[12,16]]]],[15,[[7,[13,16]]]],[15,[[7,[5,16]]]],[15,[[7,[18,16]]]],[15,[[7,[19,16]]]],[[[21,[20]]],[[7,[16]]]],[[[21,[20]]],[[7,[16]]]],[[[21,[20]]],[[7,[16]]]],[[[21,[20]]],[[7,[16]]]],[[[21,[20]]],[[7,[16]]]],[[[21,[20]]],[[7,[16]]]],[[[21,[20]]],[[7,[16]]]],[[[21,[20]]],[[7,[16]]]],[[22,[21,[20]]],[[7,[16]]]],[[22,[21,[20]]],[[7,[16]]]],[[22,[21,[20]]],[[7,[16]]]],[[22,[21,[20]]],[[7,[16]]]],[[22,[21,[20]]],[[7,[16]]]],[[22,[21,[20]]],[[7,[16]]]],[[22,[21,[20]]],[[7,[16]]]],[[22,[21,[20]]],[[7,[16]]]],[[22,15],[[7,[16]]]],[[22,15],[[7,[16]]]],[[22,15],[[7,[16]]]],[[22,15],[[7,[16]]]],[[22,15],[[7,[16]]]],[[22,15],[[7,[16]]]],[[22,15],[[7,[16]]]],[[22,15],[[7,[16]]]],[[],12],[[],13],[23],[23],[23],[23],[23],[23],[23],[23],[23],[2],[4],[23],[23],[23],[23],[23],[23],[23],[23],[23],[2],[23],[23],[4],0,[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[18,[[24,[20]]]],[19,[[24,[20]]]],[[8,[0,[25,26]]]],[[[10,[27,27]],[0,[25,26]]]],[[11,[0,[25,26]]]],[[12,[0,[25,26]]]],[[13,[0,[25,26]]]],[[5,[0,[25,26]]]],[[18,[0,[25,26]]]],[[19,[0,[25,26]]]],[[[10,[28,28,28]],[10,[28,28,28]]],29],[[[11,[28,28,28]],[11,[28,28,28]]],29],[[12,12],29],[[13,13],29],[[5,5],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[5,14],[[],[[7,[[31,[[24,[30]]]],6]]]],[[8,32],33],[[[10,[34,34,34]],32],33],[[[11,[34,34,34]],32],33],[[12,32],33],[[13,32],33],[[5,32],33],[[18,32],33],[[19,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],18],[[]],[[]],[37,19],[38,2],[[]],[[]],[39,4],[40,[[7,[41]]]],[40,[[7,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,14],[[],[[7,[12,6]]]],[[[10,[27,27,27]]],42],[[],[[7,[43,6]]]],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,[[7,[41]]]],[40,[[7,[41]]]],[[],29],[[],29],[[[45,[44]]],29],[35,[[7,[29,6]]]],[[],[[7,[29,6]]]],[[],23],[[],23],[[],23],[[],[[7,[46,6]]]],[5,43],[38,2],[[],4],0,0,0,[5],[5,43],[[],[[7,[[31,[35]],6]]]],[47,[[7,[[31,[48]],6]]]],[[],[[7,[29,6]]]],0,[8,23],[[[10,[27,27]]],23],[11,23],[12,23],[13,23],[5,23],[18,23],[19,23],[[[10,[27,27,27]]],49],[[],[[7,[50,6]]]],[5],[[[10,[27,27,27]]],[[36,[35,27]]]],[[],[[7,[13,6]]]],[45,[[7,[31,6]]]],[11,[[7,[6]]]],[[[21,[20]]],[[24,[20,51]]]],[[[21,[20]]],[[24,[20,51]]]],[[[21,[20]]],[[24,[20,51]]]],[[[21,[20]]],[[24,[20,51]]]],[[[21,[20]]],[[24,[20,51]]]],[[[21,[20]]],[[24,[20,51]]]],[[[21,[20]]],[[24,[20,51]]]],[[[21,[20]]],[[24,[20,51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[52,[[31,[[7,[8,16]]]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,55]],[[19,55]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[23],[23],[23],[[]],[[]],[[]],[[],[[24,[56]]]],[[],23],[[]],[57,7],[[],7],[[],7],[[],53],[[]],[[]],[[18,58,19],[[7,[41]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],[[31,[[31,[59]]]]]],[[],[[31,[60]]]],[[],[[31,[60]]]],[[],[[31,[59]]]],[[],[[31,[[31,[35]]]]]],[[],31],[[],[[31,[59]]]],[[],[[31,[[61,[35,17]]]]]],[[],[[31,[62]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[61,[9,9]]],[[61,[9,9]]]],[63,63],[[]],[[]],0,0,[15,[[7,[61,16]]]],[[[21,[20]]],[[7,[16]]]],[[22,[21,[20]]],[[7,[16]]]],[[22,15],[[7,[16]]]],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[[61,[35,35]]],[[31,[60]]]],[[[64,[44]]],[[7,[[31,[59]],65]]]],[23],[23],[23],[23],[23],[23],[[[31,[59]]]],0,[[61,[0,[25,26]]]],[[63,63],29],[[65,65],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,0,0,0,[44,[[7,[[61,[35,35]],65]]]],[44,[[7,[[66,[17,17,17]],65]]]],[[[61,[34,34]],32],33],[[63,32],33],[[63,32],33],[[65,32],33],[[65,32],33],[[[66,[34,34,34]],32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60],0,0,0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[60],0,[59],0,0,0,0,[67],[[[31,[35]]]],0,[[47,48]],0,0,0,0,[61,23],[61,49],0,0,[61,36],[59],0,[[[61,[35,27]]]],[62],[[[21,[20]]],[[24,[20,51]]]],[[]],[[]],[[],41],[[],41],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[68,[44]]],[[7,[65]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[69,70],[15,[[7,[71,16]]]],[15,[[7,[70,16]]]],[[[21,[20]]],[[7,[16]]]],[[[21,[20]]],[[7,[16]]]],[[22,[21,[20]]],[[7,[16]]]],[[22,[21,[20]]],[[7,[16]]]],[[22,15],[[7,[16]]]],[[22,15],[[7,[16]]]],[69],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[71,[0,[25,26]]]],[[70,[0,[25,26]]]],[[71,32],33],[[70,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[72,50,[24,[30]]],69],[[],23],[[],23],[[],23],[[]],[[]],[[]],[71,29],[[49,[24,[30]]],69],[[69,73],[[76,[[75,[74]]]]]],[70],0,[71,23],[70,23],0,[[],[[7,[[31,[70]],77]]]],[[[21,[20]]],[[24,[20,51]]]],[[[21,[20]]],[[24,[20,51]]]],[[],7],[[],7],[[],7],[[69,78,[21,[20]]],[[76,[[75,[74]]]]]],[[],7],[[],7],[[],7],[[],53],[[],53],[[],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[[[79,[9]]],[[79,[9]]]],[[]],[15,[[7,[[79,[17]],16]]]],[[[21,[20]]],[[7,[16]]]],[[22,[21,[20]]],[[7,[16]]]],[[22,15],[[7,[16]]]],[23],[23],[23],[23],[23],[23],[[[79,[27]]],[[24,[20]]]],[[[79,[27]],[0,[25,26]]]],[[80,80],29],[[[79,[28]],[79,[28]]],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[80,32],33],[[[79,[34]],32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[]],[[]],[21,29],0,[[],24],[[[21,[79]]]],[[],[[7,[80]]]],[[[79,[27]]],23],[[]],[[[21,[20]]],[[24,[20,51]]]],[[]],[[],7],[[],7],[[],7],[[],7],[[],53],[[],53],[[],54],[[]],[[]],[[]],[[]],[[[79,[27]],55]],[[]],[[]]],"c":[],"p":[[3,"Private"],[3,"KzgExtension"],[8,"Any"],[3,"PosExtension"],[4,"ChainConstants"],[4,"ApiError"],[4,"Result"],[4,"SubspaceJustification"],[8,"Clone"],[4,"Vote"],[3,"SignedVote"],[3,"GlobalRandomnesses"],[3,"SolutionRanges"],[6,"BlockNumber"],[8,"Input"],[3,"Error"],[8,"Decode"],[3,"WrappedSolution"],[3,"WrappedVerifySolutionParams"],[15,"u8"],[15,"slice"],[15,"u32"],[15,"usize"],[3,"Vec"],[8,"Output"],[8,"Sized"],[8,"Encode"],[8,"PartialEq"],[15,"bool"],[4,"SegmentHeader"],[4,"Option"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[6,"FarmerPublicKey"],[3,"Solution"],[3,"VerifySolutionParams"],[3,"Kzg"],[4,"PosTableType"],[8,"FunctionContext"],[3,"String"],[3,"H256"],[3,"HistorySize"],[8,"Header"],[6,"EquivocationProof"],[15,"u16"],[3,"SegmentIndex"],[6,"SegmentCommitment"],[3,"Slot"],[3,"SlotDuration"],[3,"Global"],[6,"Justification"],[3,"TypeId"],[3,"Type"],[8,"FnOnce"],[8,"Function"],[8,"HostFunctionRegistry"],[6,"SlotNumber"],[6,"SolutionRange"],[3,"Randomness"],[4,"PreDigest"],[6,"FarmerSignature"],[4,"ErrorDigestType"],[3,"DeriveNextSolutionRangeParams"],[4,"Error"],[3,"SubspaceDigestItems"],[3,"Demand"],[3,"NextDigestsVerificationParams"],[3,"InherentDataProvider"],[3,"InherentType"],[4,"InherentError"],[3,"Timestamp"],[3,"InherentData"],[8,"Future"],[3,"Box"],[3,"Pin"],[4,"Error"],[6,"InherentIdentifier"],[3,"OffenceDetails"],[4,"OffenceError"],[8,"SubspaceApi"],[13,"V0"],[13,"V0"],[3,"HostFunctions"],[8,"CompatibleDigestItem"],[13,"V0"],[8,"SubspaceInherentData"],[13,"IncorrectSegmentHeadersList"],[8,"Offence"],[8,"ReportOffence"],[8,"OnOffenceHandler"]]},\
"sp_domain_digests":{"doc":"","t":"IKK","n":["AsPredigest","as_consensus_block_info","consensus_block_info"],"q":[[0,"sp_domain_digests"]],"d":["Trait to provide simpler abstractions to create predigests …","Return <code>consensus_block_hash</code>","Creates a new digest of the consensus block that derive …"],"i":[0,4,4],"f":[0,[[],[[2,[1]]]],[3]],"c":[],"p":[[8,"Decode"],[4,"Option"],[8,"Encode"],[8,"AsPredigest"]]},\
"sp_domains":{"doc":"Primitives for domains pallet.","t":"DDDIEDEDDNNNIIERGNDGIDDNNNDENENGGGDGGGNNNDGEGEDGNNENNNLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMALMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMMLMLMLKMLKLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLMLMLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMMLLLAMLLLMLLLLMMMLLLLMMMLMMLMMMMMLLLMFMLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLMLLLLLLLLLLLLLLLLLLLLLNDELLLLLLLLLLLLMFLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLMLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLFLLLLLLLLLLLLNNNNDNNNNNNENNENNDNNNNDNNDNDNNNNNNNNNELLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFMMMMLLMLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMDGGDLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLNNNNNNENEINLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Bundle","BundleDigest","BundleHeader","BundleProducerElectionApi","BundleValidity","DomainBlockLimit","DomainDigestItem","DomainId","DomainInstanceData","DomainInstantiated","DomainInstantiation","DomainRuntimeUpgraded","DomainsApi","DomainsDigestItem","DomainsHoldIdentifier","EMPTY_EXTRINSIC_ROOT","EpochIndex","Evm","ExecutionReceipt","ExtrinsicsRoot","GenerateGenesisStateRoot","GenesisDomain","GenesisReceiptExtension","IllegalTx","Invalid","Invalid","InvalidBundle","InvalidBundleType","InvalidBundles","InvalidReceipt","InvalidReceipt","OpaqueBundle","OpaqueBundles","OperatorId","OperatorKey","OperatorPair","OperatorPublicKey","OperatorSignature","OutOfRangeTx","PendingDeposit","PendingUnlock","ProofOfElection","ReceiptHash","ReceiptValidity","RuntimeId","RuntimeType","SealedBundleHeader","StakeWeight","Staked","Staking","StakingHoldIdentifier","UndecodableTx","Valid","Valid","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","as_domain_instantiation","as_domain_runtime_upgrade","as_mut_any","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_extrinsics_roots","block_tree_pruning_depth","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle_extrinsics_root","bundle_index","bundle_producer_election","bundle_producer_election_params","bundle_size","bundle_slot_probability","checked_add","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","code","consensus_block_hash","consensus_block_number","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","domain","domain_best_number","domain_block_extrinsic_root","domain_block_hash","domain_block_limit","domain_block_number","domain_id","domain_id","domain_instance_data","domain_instantiation","domain_name","domain_runtime_code","domain_runtime_upgrade","domain_state_root","domain_tx_range","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy","dummy","dummy_opaque_bundle","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","estimated_bundle_weight","execution_trace","execution_trace_root","extract_successful_bundles","extrinsics","extrinsics_root","extrinsics_root","extrinsics_shuffling_seed","final_state_root","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fraud_proof","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ffi_value","from_ffi_value","from_ffi_value","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_genesis_state_root","genesis","genesis_state_root","get_hash","global_randomness","hash","hash","hash","hash","hash","head_receipt_number","header","header_hash","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_ffi_value","into_ffi_value","into_ffi_value","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_opaque_bundle","into_receipt","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","invalid_bundle_type","invalid_bundles","is_clear","is_clear","max_block_size","max_block_size","max_block_weight","max_block_weight","max_encoded_len","max_encoded_len","max_encoded_len","merkle_tree","minimum_nominator_stake","new","new","new","nomination_tax","non_empty_er_exists","oldest_receipt_number","operator","operator_id","operator_id","owner_account_id","parent_domain_block_receipt_hash","partial_cmp","partial_cmp","partial_cmp","pre_hash","proof_of_election","raw_genesis_config","raw_genesis_config","receipt","receipt","runtime_code","runtime_id","runtime_name","runtime_type","runtime_type","runtime_version","sealed_header","serialize","serialize","serialize","signature","signer_in_tx_range","signing_key","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot_number","slot_number","sub","submit_bundle_unsigned","target_bundles_per_block","timestamp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_le_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_rewards","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","verification","verify_vrf_signature","vrf_hash","vrf_signature","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BadProof","BundleProducerElectionParams","VrfProofError","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","bundle_slot_probability","calculate_threshold","clone","clone","clone_into","clone_into","current_operators","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","identity","init","init","into","into","into_mut","into_mut","into_ref","into_ref","is_below_threshold","make_transcript","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","to_owned","total_domain_stake","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","HostFunctions","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","generate_genesis_state_root","host_functions","init","into","into_mut","into_ref","register_static","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","ApplyExtrinsic","BadPostStateRoot","BadProof","BundleEquivocation","BundleEquivocationProof","Client","ConsensusBlockHashNotFound","Decode","DomainExtrinsicNotFound","DomainStateRootNotFound","Dummy","ExecutionPhase","FailedToBuildDomainExtrinsics","FinalizeBlock","FraudProof","HeaderDecode","ImproperTransactionSortition","ImproperTransactionSortitionProof","InitializeBlock","InitializeBlockOrApplyExtrinsicDecode","InvalidPreStateRoot","InvalidStateTransition","InvalidStateTransitionProof","InvalidStorageProof","InvalidTotalRewards","InvalidTotalRewardsProof","InvalidTransaction","InvalidTransactionProof","Oneshot","PostStateRootNotFound","RuntimeApi","RuntimeCode","SamePostStateRoot","SignerNotFound","StateNotFound","StorageRootDecode","ValidTransaction","VerificationError","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","bad_receipt_hash","bad_receipt_hash","bad_receipt_hash","bad_receipt_hash","bad_receipt_hash","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_number","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_parent_hash","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_execution_result","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","domain_block_hash","domain_id","domain_id","domain_id","domain_id","domain_id","domain_id","drop","drop","drop","drop","drop","drop","drop","drop","dummy_fraud_proof","dummy_invalid_state_transition_proof","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execution_phase","first_header","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","identity","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","invalid_extrinsic","offender","operator_block_rewards_final_key","parent_number","post_state_root","pre_state_root","proof","provide","proving_method","second_header","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot","source","storage_proof","storage_proof","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","verifying_method","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","domain_parent_hash","total_extrinsics","bad_receipt_hash","domain_id","expected","got","Blake2b256Algorithm","MerkleProof","MerkleTree","Witness","__clone_box","__clone_box","authorities_merkle_tree","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","hash","identity","init","init","into","into","into_mut","into_mut","into_ref","into_ref","is_clear","leaf_index","number_of_leaves","proof","size_hint","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","Bundle","Bundle","BundleEquivicationProof","ExecutionReceipt","FraudProof","FraudProof","InvalidTransactionCode","Null","PreValidationObject","PreValidationObjectApi","TrasactionProof","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","eq","equivalent","equivalent","equivalent","extract_pre_validation_object","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","init","init","into","into","into_mut","into_mut","into_ref","into_ref","size_hint","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","FailedToDecode","InvalidProof","InvalidStateRoot","MissingValue","StorageProofVerifier","VerificationError","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","init","init","into","into","into_mut","into_mut","into_ref","into_ref","size_hint","to_keyed_vec","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","verify_and_get_value","vzip","vzip"],"q":[[0,"sp_domains"],[1076,"sp_domains::bundle_producer_election"],[1173,"sp_domains::domain"],[1197,"sp_domains::fraud_proof"],[1605,"sp_domains::fraud_proof::ExecutionPhase"],[1607,"sp_domains::fraud_proof::FraudProof"],[1609,"sp_domains::fraud_proof::VerificationError"],[1611,"sp_domains::merkle_tree"],[1692,"sp_domains::transaction"],[1768,"sp_domains::verification"]],"d":["Domain bundle.","A digest of the bundle","","","","","Domains specific digest item.","Unique identifier of a domain.","<code>DomainInstanceData</code> is used to construct …","","","","API necessary for domains pallet.","Domains specific digest items.","Domains specific Identifier for Balances holds.","Empty extrinsics root","Type representing domain epoch.","","Receipt of a domain block execution.","The Merkle root of all extrinsics included in a bundle.","","","A domain genesis receipt extension.","Transaction is illegal (unable to pay the fee, etc).","","","<code>InvalidBundle</code> represents a bundle that was originally …","Bundle invalidity type.","The field <code>invalid_bundles</code> in <code>ExecutionReceipt</code> is invalid.","Receipt invalidity type.","Receipt is invalid.","Bundle with opaque extrinsics.","List of <code>OpaqueBundle</code>.","Type representing operator ID","A type that implements <code>BoundToRuntimeAppPublic</code>, used for …","An operator authority keypair. Necessarily equivalent to …","An operator authority identifier.","An operator authority signature.","Transaction is out of the tx range.","Holds all the pending deposits to an Operator.","Holds all the currently unlocking funds.","","The hash of a execution receipt.","","Type representing the runtime ID.","Types of runtime pallet domains currently supports","Header of bundle.","Stake weight in the domain bundle election.","Holds all the currently staked funds to an Operator.","","Staking specific hold identifier","Failed to decode the opaque extrinsic.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All <code>extrinsics_roots</code> for all bundles being executed by …","Returns the block tree pruning depth.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Merkle root of all new extrinsics included in this …","Index of this bundle in the original list of bundles in …","","","The size of the bundle body in bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The block hash corresponding to <code>consensus_block_number</code>.","A pointer to the consensus block index which contains all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Domain-related runtime interface","Returns the current best number of the domain.","Extrinsic root field of the header of domain block …","The block hash corresponding to <code>domain_block_number</code>.","Returns the domain block limit of the given domain.","The index of the current domain block that forms the basis …","Returns the domain_id of this bundle.","Domain id.","Returns the domain instance data for given <code>domain_id</code>.","","","Returns the WASM bundle for given <code>domain_id</code>.","","Returns the chain state root at the given block.","Returns the current Tx range for the given domain Id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The total (estimated) weight of all extrinsics in the …","List of storage roots collected during the domain block …","The Merkle root of the execution trace for the current …","Extract the bundles stored successfully from the given …","The accompanying extrinsics.","Return the <code>bundle_extrinsics_root</code>","The Merkle root of all new extrinsics included in this …","Generates a randomness seed for extrinsics shuffling.","The final state root for the current domain block …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Returns the state root of genesis block built from the …","","Return the genesis state root if not pruned","","Global randomness.","","Returns the hash of this header.","Returns the hash of this header.","Returns the hash of this bundle.","Returns the hash of this execution receipt.","Returns the best execution chain number.","Unsealed header.","The hash of the bundle header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Convert a bundle with generic extrinsic to a bundle with …","Consumes <code>Bundle</code> to extract the execution receipt.","","","","","","","","","","","","","","","","","","","","","","Specific type of invalidity.","Potential bundles that are excluded from the domain block …","","","","The max block size for the domain.","","The max block weight for the domain.","","","","","","Creates a <code>DomainId</code>.","Constructs a new instance of <code>SealedBundleHeader</code>.","Create a new instance of <code>GenesisReceiptExtension</code>.","","Returns true if there are any ERs in the challenge period …","Returns the block number of oldest execution receipt.","","Return the <code>operator_id</code>","Operator index in the OperatorRegistry.","","The hash of the ER for the last domain block.","","","","Returns the hash of the inner unsealed header.","Proof of bundle producer election.","","","Return a reference of the execution receipt.","Execution receipt that should extend the receipt chain or …","","Returns the runtime id for given <code>domain_id</code>.","","","","","Sealed bundle header.","","","","Signature of the bundle.","Checks if the signer Id hash is within the tx range","","","","","","","","","","","","","","","","","","","","","","The slot number.","","Submits the transaction bundle via an unsigned extrinsic.","","Returns the current timestamp at given height.","","","","","","","","","","","","","","","","","","","","Converts the inner integer to little-endian bytes.","","","","","","","","","","","","","","","","","","","","All SSC rewards for this ER to be shared across operatorsomputes the VRF hash.","VRF signature.","","","","","","","","","","","","","","","","","","","","","","Invalid vrf proof.","","","","","","","","","","","","","","","","Returns the election threshold based on the operator stake …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Generates a domain-specific vrf transcript from given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides implementations for the extern host functions.","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Executes some extrinsic.","The <code>post_state_root</code> calculated by farmer does not match …","Failed to pass the execution proof check.","","Represents a bundle equivocation proof. An equivocation …","Runtime api error.","Hash of the consensus block being challenged not found.","Decode error.","Domain extrinsic at given index not found.","Domain state root not found.","","A phase of a block’s execution, carrying necessary …","Error occurred while building the domain extrinsics.","Executes the <code>finalize_block</code> hook.","Fraud proof.","Failed to decode the header produced by <code>finalize_block</code>.","","Represents an invalid transaction proof.","Executes the <code>initialize_block</code> hook.","Failed to decode the return value of <code>initialize_block</code> and …","<code>pre_state_root</code> in the invalid state transition proof is …","","Proves an invalid state transition by challenging the …","Invalid storage proof.","","","","Represents an invalid transaction proof.","","<code>post_state_root</code> not found in the state.","Runtime api error.","Fail to get runtime code.","<code>post_state_root</code> is same as the one stored on chain.","Can not find signer from the domain extrinsic.","State not found in the storage proof.","Failed to decode the storage root produced by verifying …","Transaction validity check passes.","Error type of fraud proof verification on consensus node.","","","","","","","","","Hash of the bad receipt in which an invalid trace occurred.","Hash of the bad receipt this fraud proof targeted","Hash of the bad receipt this fraud proof targeted","Hash of the bad receipt this fraud proof targeted","","","","","","","","","","","","","","","","","","","","","","Number of the block at which the invalid transaction …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hash of the consensus block corresponding to <code>parent_number</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the post state root for the given execution result.","","","","","","","","","","","","","","","","","","","","","","","","Hash of the domain block corresponding to <code>block_number</code>.","","The id of the domain this fraud proof targeted","The id of the domain this fraud proof targeted","The id of the domain this fraud proof targeted","The id of the domain this fraud proof targeted","The id of the domain this fraud proof targeted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execution phase.","The first header involved in the equivocation.","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Returns the hash of this bundle equivocation proof.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","The authority id of the equivocator.","This is a representation of actual Block Rewards storage …","Parent number.","State root after the fraudulent transaction.","State root before the fraudulent transaction.","Proof recorded during the computation.","","Returns the method for generating the proof.","The second header involved in the equivocation.","","","","","","","","The slot at which the equivocation happened.","","Storage witness needed for verifying this proof.","Storage witness needed for verifying this proof.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the method for verifying the proof.","","","","","","","","","","","Hash of the bad receipt this fraud proof targeted","Id of the domain this fraud proof targeted","","","","Merkle proof using <code>Blake2b256Algorithm</code>.","Merkle tree using <code>Blake2b256Algorithm</code>.","Merke proof based Witness.","","","Constructs a merkle tree from given authorities.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Index of the leaf the proof is for.","Number of leaves in the original tree.","Merkle proof in bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","Custom invalid validity code for the extrinsics in …","","Object for performing the pre-validation in the …","API for extracting the pre-validation objects in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract the pre-validation object from the given extrinsic.","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Failed to decode value.","Emits when the given storage proof is invalid.","Emits when the expected state root doesn’t exist","Value doesn’t exist in the Db for the given key.","","Verification error.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,26,25,26,0,0,0,0,0,23,0,0,0,0,0,31,30,33,0,0,29,0,31,0,0,0,0,0,0,0,31,24,24,0,0,0,0,0,0,0,24,25,0,31,30,33,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,107,107,5,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,20,108,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,28,29,30,31,32,33,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,28,29,30,31,32,33,16,32,0,110,16,22,2,2,23,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,24,25,22,20,20,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,23,2,24,25,2,24,25,2,24,25,2,24,25,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,5,28,29,30,31,32,33,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,5,28,29,30,31,32,33,2,22,23,0,108,20,20,108,20,18,21,108,107,22,108,107,108,108,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,28,29,30,31,32,33,20,21,0,2,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,2,2,2,16,16,16,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,26,26,26,27,27,27,29,29,29,30,30,30,31,31,31,32,32,32,33,33,33,16,20,20,108,18,18,19,108,20,2,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,0,109,2,2,16,17,18,19,20,21,22,23,24,25,26,27,5,5,28,29,30,31,32,33,2,23,27,109,109,2,2,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,5,5,28,28,29,29,30,30,31,31,32,32,33,33,109,109,2,2,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,5,5,28,28,29,29,30,30,31,31,32,32,33,33,61,20,108,2,21,2,16,17,18,20,108,17,19,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,28,29,30,31,32,33,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,28,29,30,31,32,33,2,23,27,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,28,29,30,31,32,33,18,18,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,28,29,30,31,32,33,32,20,2,23,22,28,22,28,2,24,25,0,22,2,17,5,22,108,108,110,18,21,22,20,2,24,25,17,16,22,27,18,16,27,108,22,22,27,22,18,2,22,23,17,0,22,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,17,21,2,108,22,108,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,20,0,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,28,29,30,31,32,33,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,28,29,30,31,32,33,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,28,29,30,31,32,33,2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,28,29,30,31,32,33,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,28,29,30,31,32,33,2,0,21,21,21,109,2,16,17,18,19,20,21,22,23,24,25,26,27,5,28,29,30,31,32,33,78,0,0,14,78,14,78,14,78,14,78,14,78,14,78,14,0,14,78,14,78,14,14,78,14,78,14,78,14,78,14,78,14,78,14,78,14,78,14,78,14,14,14,78,78,78,14,78,14,78,14,14,78,78,14,14,78,78,14,78,14,78,14,78,14,78,14,78,0,0,14,78,14,78,14,78,14,14,78,14,78,14,78,14,78,14,78,14,78,14,78,14,78,14,78,14,78,0,111,111,111,111,111,111,111,111,111,111,0,111,111,111,111,111,111,111,111,111,111,111,111,87,93,93,86,0,93,93,93,93,93,86,0,93,87,0,93,86,0,87,93,93,86,0,93,86,0,86,0,93,93,93,93,93,93,93,93,93,0,87,86,88,89,90,91,92,86,88,90,91,92,87,86,88,89,90,91,92,87,86,88,89,90,91,92,87,86,88,89,90,91,92,90,87,93,86,88,89,90,91,92,87,93,86,88,89,90,91,92,87,86,88,89,90,91,92,87,86,88,89,90,91,92,88,87,86,88,89,90,91,92,87,86,88,89,90,91,92,87,86,88,89,90,91,92,87,87,86,88,89,90,91,92,87,93,86,88,89,90,91,92,87,93,86,88,89,90,91,92,90,86,88,89,90,91,92,87,93,86,88,89,90,91,92,86,0,87,86,88,89,90,91,92,87,86,88,89,90,91,92,87,87,87,86,86,86,88,88,88,89,89,89,90,90,90,91,91,91,92,92,92,88,89,87,93,93,86,88,89,90,91,92,87,93,93,93,93,86,88,89,90,91,92,87,87,93,93,86,86,88,88,89,89,90,90,91,91,92,92,87,87,93,93,86,86,88,88,89,89,90,90,91,91,92,92,86,89,87,86,88,89,90,91,92,87,93,86,88,89,90,91,92,87,93,86,88,89,90,91,92,87,93,86,88,89,90,91,92,87,93,86,88,89,90,91,92,90,89,0,88,88,88,88,93,87,89,87,86,88,89,90,91,92,89,93,90,92,87,86,88,89,90,91,92,87,86,88,89,90,91,92,93,87,93,86,88,89,90,91,92,87,93,86,88,89,90,91,92,87,86,88,89,90,91,92,87,86,88,89,90,91,92,87,86,88,89,90,91,92,87,93,86,88,89,90,91,92,87,86,88,89,90,91,92,87,93,86,88,89,90,91,92,87,93,86,88,89,90,91,92,87,87,93,86,88,89,90,91,92,112,113,114,114,115,115,0,0,0,0,100,101,0,100,100,100,100,101,100,101,100,100,101,100,101,100,100,100,100,100,101,100,101,100,101,100,101,100,100,100,100,100,100,100,101,100,100,101,101,100,100,101,101,101,100,100,101,100,101,100,101,100,101,100,100,100,100,100,100,100,101,100,101,100,101,100,100,100,100,101,100,100,101,100,101,100,101,116,103,116,116,116,103,0,103,0,0,116,103,103,103,103,116,103,116,103,103,103,103,103,103,103,116,103,116,103,116,103,103,103,103,103,103,117,103,116,103,116,116,103,103,116,116,103,103,103,116,103,116,103,116,103,116,103,103,103,103,116,103,116,103,103,103,103,116,103,103,116,103,116,103,116,103,104,104,104,104,0,0,104,104,104,118,104,118,104,104,104,104,104,118,104,118,104,118,104,104,104,104,104,104,104,118,104,118,118,104,104,118,118,104,104,104,118,104,118,104,118,104,118,104,104,104,118,104,118,104,104,104,104,118,104,104,118,104,118,104,118,118,104],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[2,2],2],[[],[[3,[2]]]],[[],[[3,[4]]]],[5,6],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],0,[[],[[13,[11,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[2,[[13,[[3,[14]],12]]]],0,0,[[2,2],[[3,[2]]]],[[]],[[]],[2,2],[[[16,[15,15,15,15,15]]],[[16,[15,15,15,15,15]]]],[[[17,[15,15,15,15,15]]],[[17,[15,15,15,15,15]]]],[[[18,[15,15,15,15,15,15]]],[[18,[15,15,15,15,15,15]]]],[19,19],[[[20,[15,15,15,15,15]]],[[20,[15,15,15,15,15]]]],[21,21],[[[22,[15]]],[[22,[15]]]],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[[[33,[15]]],[[33,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,2],34],[[24,24],34],[[25,25],34],0,0,0,[35,[[13,[2,36]]]],[35,[[13,[16,36]]]],[35,[[13,[17,36]]]],[35,[[13,[18,36]]]],[35,[[13,[19,36]]]],[35,[[13,[[20,[37,37,37,37,37]],36]]]],[35,[[13,[21,36]]]],[35,[[13,[[22,[37]],36]]]],[35,[[13,[23,36]]]],[35,[[13,[24,36]]]],[35,[[13,[25,36]]]],[35,[[13,[26,36]]]],[35,[[13,[27,36]]]],[35,[[13,[28,36]]]],[35,[[13,[29,36]]]],[35,[[13,[30,36]]]],[35,[[13,[31,36]]]],[35,[[13,[32,36]]]],[35,[[13,[33,36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[],2],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[5],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[5],[40],[40],[40],[40],[40],[40],[40],[41,[[13,[2]]]],[41,[[13,[[22,[42]]]]]],[41,[[13,[23]]]],0,[2,[[13,[3,12]]]],0,0,[2,[[13,[[3,[28]],12]]]],0,[[[18,[43,43,43,43,43,43]]],2],0,[2,[[13,[3,12]]]],[2],0,[2,[[13,[[3,[[10,[7]]]],12]]]],[4],[2,[[13,[3,12]]]],[2,[[13,[44,12]]]],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[[0,[43,45]],[0,[43,46]],[0,[43,45]],47],[[20,[[0,[43,45]],[0,[43,46]],[0,[43,45]],[0,[15,43,46]],[0,[43,45]]]]]],[[2,48],21],[[2,48,[20,[43,43,43,43,43]]],[[49,[43,43,43,43,43]]]],[2,[[10,[7]]]],[[2,[0,[50,51]]]],[[16,[0,[50,51]]]],[[17,[0,[50,51]]]],[[18,[0,[50,51]]]],[[19,[0,[50,51]]]],[[[20,[43,43,43,43,43]],[0,[50,51]]]],[[21,[0,[50,51]]]],[[[22,[43]],[0,[50,51]]]],[[23,[0,[50,51]]]],[[24,[0,[50,51]]]],[[25,[0,[50,51]]]],[[26,[0,[50,51]]]],[[27,[0,[50,51]]]],[[28,[0,[50,51]]]],[[29,[0,[50,51]]]],[[30,[0,[50,51]]]],[[31,[0,[50,51]]]],[[32,[0,[50,51]]]],[[33,[0,[50,51]]]],[[2,2],52],[[[16,[53,53,53,53,53]],[16,[53,53,53,53,53]]],52],[[[17,[53,53,53,53,53]],[17,[53,53,53,53,53]]],52],[[[18,[53,53,53,53,53,53]],[18,[53,53,53,53,53,53]]],52],[[19,19],52],[[[20,[53,53,53,53,53]],[20,[53,53,53,53,53]]],52],[[21,21],52],[[[22,[53]],[22,[53]]],52],[[23,23],52],[[24,24],52],[[25,25],52],[[26,26],52],[[27,27],52],[[29,29],52],[[30,30],52],[[31,31],52],[[32,32],52],[[[33,[53]],[33,[53]]],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],0,0,0,[[2,10],[[13,[[55,[54]],12]]]],0,[[[18,[43,43,43,43,43,43]]],56],0,[[],[[13,[57,12]]]],0,[[2,58],59],[[[16,[60,60,60,60,60]],58],59],[[[17,[60,60,60,60,60]],58],59],[[[18,[60,60,60,60,60,60]],58],59],[[19,58],59],[[[20,[60,60,60,60,60]],58],59],[[21,58],59],[[[22,[60]],58],59],[[23,58],59],[[24,58],59],[[25,58],59],[[28,58],59],[[29,58],59],[[30,58],59],[[31,58],59],[[32,58],59],[[[33,[60]],58],59],0,[[]],[[]],[39,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[62,[61]]],5],[[]],[[]],[[]],[[]],[[]],[[]],[63,[[13,[64]]]],[63,[[13,[64]]]],[63,[[13,[64]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,27],[[3,[65]]]],[[[0,[43,46]],[0,[15,43,46]]],[[20,[[0,[43,45]],[0,[43,46]],[0,[43,45]],[0,[15,43,46]],[0,[43,45]]]]]],[2,[[13,[[3,[65]],12]]]],[[[0,[66,51]],67],68],0,[[2,69]],[[[16,[43,43,43,43,43]]],65],[[[17,[43,43,43,43,43]]],65],[[[18,[43,43,43,43,43,43]]],65],[[[20,[[0,[43,45]],[0,[43,46]],[0,[43,45]],[0,[15,43,46]],[0,[43,45]]]]],47],[2,[[13,[11,12]]]],0,0,[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,[[13,[64]]]],[63,[[13,[64]]]],[63,[[13,[64]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[18,[43]]],49],[[[18,[43,43,43,43,43,43]]],[[20,[43,43,43,43,43]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],52],[[],52],0,0,0,0,[[],40],[[],40],[[],40],0,0,[39,2],[[[16,[43,43,43,43,43]],70],[[17,[43,43,43,43,43]]]],[[[62,[61]]],5],0,[2,[[13,[52,12]]]],[2,[[13,[11,12]]]],[48,[[13,[3,12]]]],[[[18,[43,43,43,43,43,43]]],48],0,0,0,[[2,2],[[3,[34]]]],[[24,24],[[3,[34]]]],[[25,25],[[3,[34]]]],[[[17,[43,43,43,43,43]]],65],0,0,0,[[[18,[43,43,43,43,43,43]]],[[20,[43,43,43,43,43]]]],0,0,[2,[[13,[[3,[4]],12]]]],0,0,0,0,0,[[2,71],13],[[[22,[72]],71],13],[[23,71],13],0,[[44,44,44],52],0,[2,40],[16,40],[17,40],[18,40],[19,40],[[[20,[43,43,43,43,43]]],40],[21,40],[[[22,[43]]],40],[23,40],[24,40],[25,40],[26,40],[27,40],[28,40],[29,40],[30,40],[31,40],[32,40],[33,40],[[[17,[43,43,43,43,43]]],68],0,[[2,2],2],[[[49,[11,54]]],[[13,[12]]]],0,[[],[[13,[73,12]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[2,[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,76]],0,[[21,77],[[13,[78]]]],[21,79],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[1],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[]],[[]],[[]],[[]],0,[[80,80],81],[[[14,[15]]],[[14,[15]]]],[78,78],[[]],[[]],0,[35,[[13,[[14,[37]],36]]]],[35,[[13,[78,36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[40],[40],[40],[40],[40],[40],[[[14,[43]],[0,[50,51]]]],[[78,[0,[50,51]]]],[[[14,[53]],[14,[53]]],52],[[78,78],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[[14,[60]],58],59],[[78,58],59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[82,81],52],[[2,79],83],[[[14,[43]]],40],[78,40],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[]],[[]],0,[[],13],[[],13],[[],13],[[],13],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],74],[[],74],[[],75],[[],75],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[40],[40],[40],[[]],[[]],[[]],[[]],[[]],[[2,27],[[3,[65]]]],[[],[[10,[84]]]],[[],40],[[]],[[]],[[]],[85,13],[[],13],[[],13],[[],74],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[86,47],0,0,0,0,[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,87],[[[86,[15,15]]],[[86,[15,15]]]],[88,88],[[[89,[15,15]]],[[89,[15,15]]]],[90,90],[91,91],[92,92],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[35,[[13,[87,36]]]],[35,[[13,[86,36]]]],[35,[[13,[88,36]]]],[35,[[13,[89,36]]]],[35,[[13,[90,36]]]],[35,[[13,[91,36]]]],[35,[[13,[92,36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[87,[10,[7]]],[[13,[93]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[[39,35],[[13,[36]]]],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],0,[86,2],0,0,0,0,0,[40],[40],[40],[40],[40],[40],[40],[40],[[2,47],86],[[2,39],88],[[87,[0,[50,51]]]],[[86,[0,[50,51]]]],[[88,[0,[50,51]]]],[[89,[0,[50,51]]]],[[90,[0,[50,51]]]],[[91,[0,[50,51]]]],[[92,[0,[50,51]]]],[[87,87],52],[[[86,[53,53]],[86,[53,53]]],52],[[88,88],52],[[[89,[53,53]],[89,[53,53]]],52],[[90,90],52],[[91,91],52],[[92,92],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],0,0,[[87,58],59],[[93,58],59],[[93,58],59],[[[86,[60,60]],58],59],[[88,58],59],[[[89,[60,60]],58],59],[[90,58],59],[[91,58],59],[[92,58],59],[[]],[94,93],[36,93],[[]],[12,93],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[86,[43,43]]],65],[[[89,[[0,[15,[95,[39]],43]],[0,[15,46,43]]]]],65],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[10,[7]]]],0,0,0,0,[96],[87,97],0,[87,40],[86,40],[88,40],[89,40],[90,40],[91,40],[92,40],0,[93,[[3,[98]]]],0,0,[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[[38,[7]]],[[10,[7,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],64],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],[[10,[7,9]]]],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,97],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[1],[38,99],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[100,100],[101,101],[[]],[[]],[35,[[13,[100,36]]]],[[[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,35],[[13,[36]]]],[[],100],[[],101],[40],[40],[40],[40],[40],[40],[[100,[0,[50,51]]]],[[100,100],52],[[],52],[[],52],[[],52],[[100,58],59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[7]]],79],[[],[[10,[7,9]]]],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[],52],0,0,0,[100,40],[[[38,[7]]],[[10,[7,9]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],74],[[],74],[[],75],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],[[8,[7]]]],[[]],[[]],[[]],[[]],[[[103,[[0,[102,15]],15,15]]],[[103,[[0,[102,15]],15,15]]]],[[]],[35,[[13,[[103,[102]],36]]]],[[[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,35],[[13,[36]]]],[40],[40],[40],[40],[40],[40],[[[103,[102]],[0,[50,51]]]],[[[103,[[0,[102,53]],53,53]],[103,[[0,[102,53]],53,53]]],52],[[],52],[[],52],[[],52],[[],[[13,[103,12]]]],[[[103,[[0,[102,60]],60,60]],58],59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[10,[7,9]]]],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[[103,[102]]],40],[[[38,[7]]],[[10,[7,9]]]],[[]],[[],13],[[],13],[[],13],[[],13],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],74],[[],74],[[],75],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],[[8,[7]]]],[[]],[[]],[[]],[[]],[35,[[13,[104,36]]]],[[[38,[7]]],[[13,[36]]]],[[39,[38,[7]]],[[13,[36]]]],[[39,35],[[13,[36]]]],[40],[40],[40],[40],[40],[40],[[104,[0,[50,51]]]],[[104,104],52],[[],52],[[],52],[[],52],[[104,58],59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[10,[7,9]]]],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[104,40],[[[38,[7]]],[[10,[7,9]]]],[[],13],[[],13],[[],13],[[],13],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[10,[7,9]]]],[[],74],[[],74],[[],75],[[]],[[]],[[]],[[]],[[105,106],[[13,[37,104]]]],[[]],[[]]],"c":[],"p":[[3,"Private"],[3,"DomainId"],[4,"Option"],[6,"RuntimeId"],[3,"GenesisReceiptExtension"],[8,"Any"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[6,"NumberFor"],[4,"ApiError"],[4,"Result"],[3,"BundleProducerElectionParams"],[8,"Clone"],[3,"BundleHeader"],[3,"SealedBundleHeader"],[3,"Bundle"],[3,"BundleDigest"],[3,"ExecutionReceipt"],[3,"ProofOfElection"],[3,"GenesisDomain"],[4,"RuntimeType"],[4,"StakingHoldIdentifier"],[4,"DomainsHoldIdentifier"],[4,"DomainDigestItem"],[3,"DomainInstanceData"],[3,"DomainBlockLimit"],[4,"InvalidReceipt"],[4,"ReceiptValidity"],[4,"InvalidBundleType"],[3,"InvalidBundle"],[4,"BundleValidity"],[4,"Ordering"],[8,"Input"],[3,"Error"],[8,"Decode"],[15,"slice"],[15,"u32"],[15,"usize"],[8,"Deserializer"],[8,"Deserialize"],[8,"Encode"],[3,"U256"],[8,"Zero"],[8,"Default"],[6,"ReceiptHash"],[6,"OperatorId"],[6,"OpaqueBundle"],[8,"Output"],[8,"Sized"],[15,"bool"],[8,"PartialEq"],[6,"Balance"],[6,"OpaqueBundles"],[6,"ExtrinsicsRoot"],[3,"Randomness"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"GenerateGenesisStateRoot"],[3,"Arc"],[8,"FunctionContext"],[3,"String"],[3,"H256"],[8,"Hash"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[6,"OperatorSignature"],[8,"Serializer"],[8,"Serialize"],[6,"Moment"],[3,"TypeId"],[3,"Type"],[8,"FnOnce"],[6,"OperatorPublicKey"],[4,"VrfProofError"],[6,"Blake2b256Hash"],[6,"StakeWeight"],[15,"u128"],[3,"VrfOutput"],[3,"VrfTranscript"],[8,"Function"],[8,"HostFunctionRegistry"],[4,"FraudProof"],[4,"ExecutionPhase"],[3,"InvalidStateTransitionProof"],[3,"BundleEquivocationProof"],[3,"InvalidTransactionProof"],[3,"ImproperTransactionSortitionProof"],[3,"InvalidTotalRewardsProof"],[4,"VerificationError"],[4,"Error"],[8,"From"],[3,"Demand"],[15,"str"],[8,"Error"],[6,"MerkleTree"],[3,"Witness"],[3,"Blake2b256Algorithm"],[8,"Block"],[4,"PreValidationObject"],[4,"VerificationError"],[3,"StorageProof"],[3,"StorageKey"],[8,"DomainsDigestItem"],[8,"DomainsApi"],[3,"OperatorKey"],[8,"BundleProducerElectionApi"],[3,"HostFunctions"],[13,"InitializeBlock"],[13,"FinalizeBlock"],[13,"Dummy"],[13,"BadPostStateRoot"],[4,"InvalidTransactionCode"],[8,"PreValidationObjectApi"],[3,"StorageProofVerifier"]]},\
"sp_lightclient":{"doc":"Light client substrate primitives for Subspace.","t":"NDNNNDDDNENNNNNNNNNNDNIENNLLLLKLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMKMKLLLLLLLLLLLLLLLLMKMMMMLLKKMMKMLLLLMMKKLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ArithmeticError","ChainConstants","DigestError","EmptySegmentCommitmentHistory","HeaderAlreadyImported","HeaderBelowArchivingDepthError","HeaderExt","HeaderImporter","HeaderIsBelowArchivingDepth","ImportError","IncorrectBlockAuthor","InvalidBlockSignature","InvalidDigest","InvalidHistorySize","InvalidSlot","InvalidSolution","MissingAncestorHeader","MissingHeader","MissingParent","MissingSegmentCommitment","NextDigestItems","NumberOfHeaderToKeepBeyondKDepth","Storage","StorageBound","SwitchedToForkBelowArchivingDepth","Unbounded","__clone_box","__clone_box","__clone_box","__clone_box","best_header","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_constants","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","era_duration","era_start_slot","finalize_header","finalized_header","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_digest_items","genesis_segment_commitments","global_randomness_interval","header","header","headers_at_number","import_header","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_clear","k_depth","max_pieces_in_sector","maybe_current_solution_range_override","maybe_next_solution_range_override","maybe_root_plot_public_key","min_sector_lifetime","new","new","number_of_segments","prune_header","recent_history_fraction","recent_segments","segment_commitment","should_adjust_solution_range","size_hint","size_hint","size_hint","size_hint","slot_probability","storage_bound","store_header","store_segment_commitments","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","total_weight","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"sp_lightclient"]],"d":["Arithmetic error.","Chain constants.","Error while extracting digests from header.","Segment commitment history is empty","Header already imported.","Error type that holds the current finalized number and the …","HeaderExt describes an extended block chain header at a …","Verifies and import headers.","Header being imported is below the archiving depth.","Error during the header import.","Incorrect block author.","Block signature is invalid.","Invalid digest in the header.","Invalid history size","Invalid slot when compared with parent header.","Solution present in the header is invalid.","Missing ancestor header at the number.","Missing header associated with hash.","Missing parent header.","Missing segment commitment for a given segment index.","Type to hold next digest items present in parent header …","Keeps only # number of headers beyond K depth.","Storage responsible for storing headers.","Defines the storage bound for the light client store.","Switched to different fork beyond archiving depth.","Keeps all the headers in the storage.","","","","","Returns the best known tip of the chain.","","","","","","","","","","","","","","","Returns the chain constants.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Era duration at which solution range is updated.","Slot at which current era started.","Marks a given header with hash as finalized.","Returns the latest finalized header.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Genesis digest items at the start of the chain since the …","Genesis block segment commitments to verify the Block #1 …","Defines interval at which randomness is updated.","Queries a header at a specific block number or block hash.","Actual header of the subspace block chain at a specific …","Returns headers at a given number.","Verifies header, computes consensus values for block …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","K Depth at which we finalize the heads.","How many pieces one sector is supposed to contain (max)","Solution range override for the current era.","Solution range override for the next era.","Restrict block authoring to this public key.","Minimum lifetime of a plotted sector, measured in archived …","Constructs self with provided next digest items.","Returns a new instance of HeaderImporter with provided …","Returns the stored segment count.","Prunes header with hash.","Fraction of pieces from the “recent history” (…","Number of latest archived segments that are considered “…","Returns a segment commitment for a given segment index.","Should adjust solution range on era change.","","","","","Slot probability.","Storage bound for the light client store.","Stores the extended header. <code>as_best_header</code> signifies of …","Stores segment commitments for fast retrieval by segment …","","","","","","","","","Cumulative weight of chain until this header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[23,0,23,23,23,0,0,0,23,0,23,23,23,23,23,23,23,23,23,23,0,6,0,0,23,6,3,6,2,7,27,3,6,2,7,22,23,28,3,6,2,7,22,23,28,27,2,3,6,2,7,3,6,2,7,3,6,2,7,3,6,2,7,3,6,2,7,3,6,2,7,6,2,7,3,6,2,7,22,23,28,3,6,2,7,22,23,28,3,6,2,7,22,23,28,3,6,2,7,2,22,23,2,2,2,22,22,22,23,23,23,3,2,27,27,3,6,2,7,22,23,28,3,6,2,7,22,23,23,28,3,6,2,7,22,23,28,3,6,2,7,22,23,28,3,3,3,27,2,27,28,3,6,2,7,22,23,28,3,6,2,7,22,23,28,2,3,27,2,2,2,3,7,28,27,27,3,3,27,2,3,6,2,7,3,3,27,27,3,6,2,7,3,6,2,7,2,3,6,2,7,22,23,28,3,6,2,7,22,23,28,3,6,2,7,22,23,28,3,6,2,7,3,6,2,7,22,23,28,3,6,2,7,22,23,28,3,6,2,7,22,23,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[]],[[[3,[[0,[4,5]]]]],[[3,[[0,[4,5]]]]]],[[[6,[4]]],[[6,[4]]]],[[[2,[4]]],[[2,[4]]]],[7,7],[[]],[[]],[[]],[[]],[8,[[10,[[3,[5]],9]]]],[8,[[10,[[6,[11]],9]]]],[8,[[10,[[2,[11]],9]]]],[8,[[10,[7,9]]]],[[[13,[12]]],[[10,[9]]]],[[[13,[12]]],[[10,[9]]]],[[[13,[12]]],[[10,[9]]]],[[[13,[12]]],[[10,[9]]]],[[14,[13,[12]]],[[10,[9]]]],[[14,[13,[12]]],[[10,[9]]]],[[14,[13,[12]]],[[10,[9]]]],[[14,[13,[12]]],[[10,[9]]]],[[14,8],[[10,[9]]]],[[14,8],[[10,[9]]]],[[14,8],[[10,[9]]]],[[14,8],[[10,[9]]]],[[],6],[[],[[2,[15]]]],[[],7],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[[[3,[5]],[0,[17,18]]]],[[[6,[19]],[0,[17,18]]]],[[[2,[19]],[0,[17,18]]]],[[7,[0,[17,18]]]],[[[2,[20]],[2,[20]]],21],[[[22,[[0,[20,5]]]],[22,[[0,[20,5]]]]],21],[[[23,[[0,[20,5]]]],[23,[[0,[20,5]]]]],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,[[]],[[],2],[[[3,[[0,[24,5]]]],25],26],[[[6,[24]],25],26],[[[2,[24]],25],26],[[7,25],26],[[[22,[[0,[24,5]]]],25],26],[[[23,[[0,[24,5]]]],25],26],[[[28,[[0,[24,5]],[0,[24,[27,[[0,[24,5]]]]]]]],25],26],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[23,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],[[30,[2]]]],0,[[],[[31,[2]]]],[[[28,[5,[27,[5]]]],5],[[10,[[23,[5]]]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],0,[[],32],0,0,0,0,[[33,34],7],[[[27,[5]]],[[28,[5,[27,[5]]]]]],[[],35],[[]],0,0,[36,[[30,[37]]]],0,[[[3,[5]]],16],[[[6,[19]]],16],[[[2,[19]]],16],[7,16],0,0,[[2,21]],[[[38,[36,37]]]],[[[13,[12]]],[[31,[12,39]]]],[[[13,[12]]],[[31,[12,39]]]],[[[13,[12]]],[[31,[12,39]]]],[[[13,[12]]],[[31,[12,39]]]],[[]],[[]],[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],41],[[],41],[[],41],[[],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[3,"HeaderExt"],[3,"ChainConstants"],[8,"Clone"],[8,"Header"],[4,"StorageBound"],[3,"NextDigestItems"],[8,"Input"],[3,"Error"],[4,"Result"],[8,"Decode"],[15,"u8"],[15,"slice"],[15,"u32"],[8,"Default"],[15,"usize"],[8,"Output"],[8,"Sized"],[8,"Encode"],[8,"PartialEq"],[15,"bool"],[3,"HeaderBelowArchivingDepthError"],[4,"ImportError"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Storage"],[3,"HeaderImporter"],[4,"Error"],[4,"Option"],[3,"Vec"],[15,"u16"],[3,"Randomness"],[6,"SolutionRange"],[15,"u64"],[3,"SegmentIndex"],[6,"SegmentCommitment"],[3,"BTreeMap"],[3,"Global"],[3,"TypeId"],[3,"Type"]]},\
"sp_messenger":{"doc":"Primitives for Messenger.","t":"IIILLALLLAKLLLLIEIGGDGNQILLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKMKLLMLLLLLLLLLLLLLLLLLLLLLLLLDDDENGNNDNDNNNDDDDGEGNEDNNNEGNENNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLMMMLMLMMMLLLLLLLLLLLLLLLLLLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["MessengerApi","OnXDMRewards","RelayerApi","block_messages","chain_id","endpoint","extract_xdm_proof_state_roots","inbox_response_message_unsigned","is_domain_info_confirmed","messages","on_xdm_rewards","outbox_message_unsigned","relay_confirmation_depth","should_relay_inbox_message_response","should_relay_outbox_message","DomainInfo","Endpoint","EndpointHandler","EndpointId","EndpointPayload","EndpointRequest","EndpointResponse","Id","MessageId","Sender","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","domain_best_number","domain_state_root","drop","drop","dst_endpoint","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","identity","init","init","into","into","into_mut","into_mut","into_ref","into_ref","message","message_response","message_response_weight","message_weight","payload","send_message","size_hint","size_hint","src_endpoint","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","BlockInfo","BlockMessageWithStorageKey","BlockMessagesWithStorageKey","ChainId","ChannelClose","ChannelId","ChannelOpen","Consensus","CrossDomainMessage","Domain","DomainStateRootStorage","Endpoint","EndpointRequest","EndpointResponse","ExtractedStateRootsFromProof","FeeModel","InitiateChannelParams","Message","MessageId","MessageWeightTag","Nonce","None","Payload","Proof","Protocol","ProtocolChannelClose","ProtocolChannelOpen","ProtocolMessageRequest","ProtocolMessageResponse","Request","RequestResponse","Response","V0","VersionedPayload","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","append","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_hash","block_number","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id","channel_id","channel_id","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_chain_block_info","consensus_chain_block_info","consensus_chain_id","consensus_chain_state_root","consensus_chain_state_root","contains_key","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","domain_info","domain_proof","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dst_chain_id","dst_chain_id","dst_chain_id","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_state_roots_from_proof","fee_model","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_optional_value_to_query","from_query_to_optional_value","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_relayer_msg_with_proof","get","get_hash","hash","hashed_key_for","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inbox_response","inbox_responses","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","is_clear","is_consensus_chain","last_delivered_message_response_nonce","max_encoded_len","max_outgoing_messages","message_proof","migrate_key","module_prefix","mutate","mutate_exists","nonce","nonce","nonce","outbox","outbox","partial_cmp","payload","proof","relay_fee","remove","serialize","set","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","src_chain_id","src_chain_id","src_chain_id","storage_key","storage_key","storage_prefix","swap","take","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_append","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_mutate","try_mutate_exists","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight_tag","weight_tag"],"q":[[0,"sp_messenger"],[15,"sp_messenger::endpoint"],[123,"sp_messenger::messages"]],"d":["Api to provide XDM extraction from Runtime Calls.","Trait to handle XDM rewards.","Api useful for relayers to fetch messages and submit …","Returns all the outbox and inbox responses to deliver. …","Returns the the chain_id of the Runtime.","","","Constructs an inbox response message to the dst_chain as …","","","","Constructs an outbox message to the dst_chain as an …","Returns the confirmation depth to relay message.","Returns true if the inbox message response is ready to be …","Returns true if the outbox message is ready to be relayed …","Trait that can provide info for a given Domain.","Endpoint as defined in the formal spec. Endpoint is an …","Handler to","Represents a particular endpoint in a given Execution …","Endpoint request or response payload.","Request sent by src_endpoint to dst_endpoint.","Response for the message request.","Id of the endpoint on a specific chain.","Unique Id of the message between dst_chain and src_chain.","Sender provides abstraction on sending messages to other …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the best known number of a given Domain.","Returns the known state root of a specific block.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Triggered by pallet-messenger when a new inbox message is …","Triggered by pallet-messenger when a response for a …","Return the maximal possible consume weight of …","Return the maximal possible consume weight of <code>message</code>","","Sends a message to dst_chain_id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block info used as part of the Cross chain message proof.","Message with storage key to generate storage proof using …","Set of messages with storage keys to be relayed in a given …","Identifier of a chain.","Request to close an open channel with foreign chain.","Channel identity.","Request to open a channel with foreign chain.","","Cross Domain message contains Message and its proof on …","","This is a representation of actual StateRoots storage in …","Endpoint message.","","","Holds the Block info and state roots from which a proof …","Fee model to send a request and receive a response from …","Parameters for a new channel between two chains.","Message contains information to be sent to or received …","Unique Id of a message between two chains.","Message weight tag used to indicate the consumed weight …","Nonce used as an identifier and ordering of messages …","","Payload of the message","Proof combines the storage proofs to validate messages.","Protocol message.","","","Defines protocol requests performed on chains.","Defines protocol requests performed on chains.","","Protocol message that encompasses  request or its response.","","","Versioned message payload","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block hash of the chain.","Block number of the chain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ChannelId the message was sent through.","ChannelId the message was sent through.","ChannelId the message was sent through.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consensus chain block info when proof was constructed","Consensus chain block info when proof was constructed","","State root of Consensus chain at above number and block …","State root of Consensus chain at above number and block …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Storage proof that src chain state_root is registered on …","Storage proof that src chain state_root is registered on …","","","","","","","","","","","","","","","","","Chain this message is intended for.","Chain this message is intended for.","Chain this message is intended for.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts state roots. If the chain proof is present, then …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Last delivered message response nonce on src_chain.","","","Storage proof that message is processed on src_chain.","","","","","Message nonce within the channel.","Message nonce within the channel.","Message nonce within the channel.","","","","Payload of the message","Proof of message processed on src_chain.","Fee to relay message from one chain to another","","","","","","","","","","","","","","","","","","","Chain which initiated this message.","Chain which initiated this message.","Chain which initiated this message.","","Storage key to generate proof for using proof backendhe message weight tag","The message weight tag"],"i":[0,0,0,63,63,0,64,63,64,0,65,63,63,63,63,0,0,0,0,0,0,0,17,66,0,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,67,67,17,18,18,17,18,17,18,17,17,17,18,18,18,17,18,17,18,17,17,18,18,17,17,18,18,17,18,17,18,17,18,17,18,17,18,68,68,68,68,18,66,17,18,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,0,0,0,0,39,0,39,4,0,4,0,41,43,43,0,0,0,0,0,0,0,43,0,0,41,43,43,0,0,40,0,40,42,0,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,11,11,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,44,9,46,37,38,43,11,1,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,4,45,7,4,45,7,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,38,43,11,1,4,4,4,4,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,4,7,45,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,44,9,46,37,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,37,37,38,38,38,39,39,39,40,40,40,41,41,41,42,42,42,43,43,43,4,4,4,44,44,44,11,11,11,45,45,45,7,7,7,9,9,9,46,46,46,1,1,1,9,38,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,69,37,38,39,40,41,42,43,4,4,4,44,11,45,7,9,46,1,69,69,37,37,38,38,39,39,40,40,41,41,42,42,43,43,4,4,44,44,11,11,45,45,7,7,9,9,46,46,1,1,69,69,69,69,37,37,38,38,39,39,40,40,41,41,42,42,43,43,4,4,44,44,11,11,45,45,7,7,9,9,46,46,1,1,9,69,4,4,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,43,1,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,69,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,38,43,11,1,4,44,4,38,45,69,69,69,69,44,9,46,43,1,4,44,9,37,69,4,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,44,9,46,69,46,69,69,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,69,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,69,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,69,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,37,69,37,38,39,40,41,42,43,4,44,11,45,7,9,46,1,9,46],"f":[0,0,0,[[],[[3,[1,2]]]],[[],[[3,[4,2]]]],0,[[[6,[5]]],[[3,[[8,[7]],2]]]],[9,[[3,[8,2]]]],[[10,11],[[3,[12,2]]]],0,[[]],[9,[[3,[8,2]]]],[[],[[3,[2]]]],[[4,13],[[3,[12,2]]]],[[4,13],[[3,[12,2]]]],0,0,0,0,0,0,0,0,0,0,[14],[14],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[]],[[]],[[]],[[]],[17,17],[18,18],[[]],[[]],[19,[[3,[17,20]]]],[19,[[3,[18,20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[23],[23],[23],[23],[10,8],[10,8],[23],[23],0,[[17,[0,[24,25]]]],[[18,[0,[24,25]]]],[[17,17],12],[[18,18],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[17,26],27],[[18,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[4,18],28],[[4,18,28],29],[[],30],[[],30],0,[[4,18],[[3,[31]]]],[17,23],[18,23],0,[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],32],[[],32],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[34,[34,[35]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[[37,[36]]],[[37,[36]]]],[[[38,[36]]],[[38,[36]]]],[[[39,[36]]],[[39,[36]]]],[[[40,[36,36]]],[[40,[36,36]]]],[[[41,[36]]],[[41,[36]]]],[[[42,[36]]],[[42,[36]]]],[43,43],[4,4],[[[44,[36]]],[[44,[36]]]],[[[11,[36,36]]],[[11,[36,36]]]],[[[45,[36,36,36]]],[[45,[36,36,36]]]],[[[7,[36,36,36]]],[[7,[36,36,36]]]],[[[9,[36,36,36]]],[[9,[36,36,36]]]],[46,46],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,4],47],0,0,[[],4],0,0,[34,12],[19,[[3,[[37,[48]],20]]]],[19,[[3,[38,20]]]],[19,[[3,[39,20]]]],[19,[[3,[[40,[48,48]],20]]]],[19,[[3,[41,20]]]],[19,[[3,[42,20]]]],[19,[[3,[43,20]]]],[19,[[3,[4,20]]]],[19,[[3,[44,20]]]],[19,[[3,[[11,[48,48]],20]]]],[19,[[3,[[45,[48]],20]]]],[19,[[3,[[7,[48]],20]]]],[19,[[3,[9,20]]]],[19,[[3,[46,20]]]],[19,[[3,[1,20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,[21,[5]]],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[22,19],[[3,[20]]]],[[],[[37,[49]]]],[[],[[38,[49]]]],[[],43],[[],[[11,[49,49]]]],[[],1],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[50,[[3,[4]]]],0,0,[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],0,0,0,[[[37,[35]]],[[6,[5]]]],[[[37,[35]],[0,[24,25]]]],[[38,[0,[24,25]]]],[[39,[0,[24,25]]]],[[[40,[35,35]],[0,[24,25]]]],[[41,[0,[24,25]]]],[[42,[0,[24,25]]]],[[43,[0,[24,25]]]],[[4,[0,[24,25]]]],[[44,[0,[24,25]]]],[[[11,[35,35]],[0,[24,25]]]],[[[45,[35]],[0,[24,25]]]],[[[7,[35]],[0,[24,25]]]],[[9,[0,[24,25]]]],[[46,[0,[24,25]]]],[[1,[0,[24,25]]]],[[[37,[51]],[37,[51]]],12],[[[38,[51]],[38,[51]]],12],[[[39,[51]],[39,[51]]],12],[[[40,[51,51]],[40,[51,51]]],12],[[[41,[51]],[41,[51]]],12],[[[42,[51]],[42,[51]]],12],[[43,43],12],[[4,4],12],[[[44,[51]],[44,[51]]],12],[[[11,[51,51]],[11,[51,51]]],12],[[[45,[51,51,51]],[45,[51,51,51]]],12],[[[7,[51,51,51]],[7,[51,51,51]]],12],[[[9,[51,51,51]],[9,[51,51,51]]],12],[[46,46],12],[[1,1],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[9,[[0,[36,52,53]],[0,[36,52,53]],[0,[36,48,54,52,53]]]]],[[8,[[7,[[0,[36,52,53]],[0,[36,52,53]],[0,[36,48,54,52,53]]]]]]]],0,[[[37,[55]],26],27],[[[38,[55]],26],27],[[[39,[55]],26],27],[[[40,[55,55]],26],27],[[[41,[55]],26],27],[[[42,[55]],26],27],[[43,26],27],[[4,26],27],[[[44,[55]],26],27],[[[11,[55,55]],26],27],[[[45,[55,55,55]],26],27],[[[7,[55,55,55]],26],27],[[[9,[55,55,55]],26],27],[[46,26],27],[[1,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,4],[22,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[[0,[52,53]]]]]],[[],[[8,[[0,[52,53]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[46,45],9],[34],[[[0,[56,25]],57],58],[[4,59]],[34,[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[43,42],43],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[34,34]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[4,12],0,[[],23],0,0,[34,8],[[],[[21,[5]]]],[[34,60]],[[34,60]],0,0,0,[42,43],0,[[4,4],[[8,[47]]]],0,0,0,[34],[[4,61],3],[34],[[[37,[35]]],23],[38,23],[39,23],[[[40,[35,35]]],23],[41,23],[42,23],[43,23],[4,23],[44,23],[[[11,[35,35]]],23],[[[45,[35]]],23],[[[7,[35]]],23],[9,23],[46,23],[1,23],0,0,0,[[10,[0,[52,53]],[0,[52,53]]],62],0,[[],[[21,[5]]]],[[34,34]],[34],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[[21,[5]]],[[6,[5,16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[34,36]],34],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[34,3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[34,60],3],[[34,60],3],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[15,[5]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],[[6,[5,16]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[35]],60]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0],"c":[],"p":[[3,"BlockMessagesWithStorageKey"],[4,"ApiError"],[4,"Result"],[4,"ChainId"],[15,"u8"],[3,"Vec"],[3,"ExtractedStateRootsFromProof"],[4,"Option"],[3,"CrossDomainMessage"],[3,"DomainId"],[3,"BlockInfo"],[15,"bool"],[6,"MessageId"],[3,"Private"],[15,"array"],[3,"Global"],[4,"Endpoint"],[3,"EndpointRequest"],[8,"Input"],[3,"Error"],[15,"slice"],[15,"u32"],[15,"usize"],[8,"Output"],[8,"Sized"],[3,"Formatter"],[6,"Result"],[6,"EndpointResponse"],[6,"DispatchResult"],[3,"Weight"],[4,"DispatchError"],[3,"TypeId"],[3,"Type"],[8,"EncodeLike"],[8,"Encode"],[8,"Clone"],[3,"FeeModel"],[3,"InitiateChannelParams"],[4,"ProtocolMessageRequest"],[4,"RequestResponse"],[4,"Payload"],[4,"VersionedPayload"],[4,"MessageWeightTag"],[3,"Message"],[3,"Proof"],[3,"BlockMessageWithStorageKey"],[4,"Ordering"],[8,"Decode"],[8,"Default"],[8,"Deserializer"],[8,"PartialEq"],[8,"FullCodec"],[8,"TypeInfo"],[8,"Into"],[8,"Debug"],[8,"Hash"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[8,"FnOnce"],[8,"Serializer"],[3,"StorageKey"],[8,"RelayerApi"],[8,"MessengerApi"],[8,"OnXDMRewards"],[8,"Sender"],[8,"DomainInfo"],[8,"EndpointHandler"],[3,"DomainStateRootStorage"]]},\
"sp_objects":{"doc":"Primitives for Objects.","t":"ILL","n":["ObjectsApi","extract_block_object_mapping","validated_object_call_hashes"],"q":[[0,"sp_objects"]],"d":["","Extract block object mapping for a given block","Returns all the validated object call hashes for a given …"],"i":[0,6,6],"f":[0,[[[2,[1]]],[[5,[3,4]]]],[[],[[5,[[2,[1]],4]]]]],"c":[],"p":[[6,"Hash"],[3,"Vec"],[3,"BlockObjectMapping"],[4,"ApiError"],[4,"Result"],[8,"ObjectsApi"]]},\
"subspace_archiving":{"doc":"Collection of modules used for dealing with archived state …","t":"AAADENNNNNNDNNEENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMNNNNDEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNDDEENLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMM","n":["archiver","piece_reconstructor","reconstructor","Archiver","ArchiverInstantiationError","Block","BlockContinuation","BlockStart","FailedToInitializeErasureCoding","InvalidBlockSmallSize","InvalidLastArchivedBlock","NewArchivedSegment","Padding","ParentSegmentHeader","Segment","SegmentItem","V0","add_block","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","init","init","init","init","init","into","into","into","into","into","is_piece_valid","is_record_commitment_hash_valid","last_archived_block_number","new","object_mapping","partial_cmp","pieces","provide","segment_header","serialize","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_initial_state","archived_block_bytes","block_bytes","items","bytes","bytes","bytes","DataShardsReconstruction","FailedToInitializeErasureCoding","IncorrectPiecePosition","InvalidInputPieceCommitment","PiecesReconstructor","ReconstructorError","ReconstructorInstantiationError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","new","partial_cmp","provide","provide","reconstruct_piece","reconstruct_segment","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","DataShardsReconstruction","FailedToInitializeErasureCoding","IncorrectSegmentOrder","ReconstructedContents","Reconstructor","ReconstructorError","ReconstructorInstantiationError","SegmentDecoding","add_segment","blocks","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","hash","init","init","init","init","into","into","into","into","new","partial_cmp","provide","provide","segment_header","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","actual_segment_index","expected_segment_index"],"q":[[0,"subspace_archiving"],[3,"subspace_archiving::archiver"],[138,"subspace_archiving::archiver::ArchiverInstantiationError"],[140,"subspace_archiving::archiver::Segment"],[141,"subspace_archiving::archiver::SegmentItem"],[144,"subspace_archiving::piece_reconstructor"],[211,"subspace_archiving::reconstructor"],[298,"subspace_archiving::reconstructor::ReconstructorError"]],"d":["","","","Block archiver for Subspace blockchain.","Archiver instantiation error","Contains full block inside","Continuation of the partial block spilled over into the …","Contains the beginning of the block inside, remainder will …","Failed to initialize erasure coding","Invalid block, its size is smaller than already archived …","Invalid last archived block, its size is the same as …","Newly archived segment as a combination of segment header …","Special dummy enum variant only used as an implementation …","Segment header of the parent","Segment represents a collection of items stored in …","Kinds of items that are contained within a segment","","Adds new block to internal buffer, potentially producing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Validate witness embedded within a piece produced by …","Validate witness for record commitment hash produced by …","Get last archived block if there was any","Create a new instance with specified record size and …","Mappings for objects stored in corresponding pieces.","","Segment of archived history containing pieces","","Segment header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new instance of the archiver with initial state …","Already archived portion of the block","Full block size","Segment items","Block bytes","Block bytes","Block bytes","Segment size is not bigger than record size","Failed to initialize erasure coding","Incorrect piece position provided.","Commitment of input piece is invalid.","Reconstructor helps to retrieve blocks from archived …","Reconstructor-related instantiation error","Reconstructor-related instantiation error.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns the missing piece for a segment using given set of …","Returns all the pieces for a segment using given set of …","","","","","","","","","","","","","","","Error during data shards reconstruction","Failed to initialize erasure coding","Incorrect segment order, each next segment must have …","Data structure that contains information reconstructed …","Reconstructor helps to retrieve blocks from archived …","Reconstructor-related instantiation error","Reconstructor-related instantiation error.","Segment size is not bigger than record size","Given a set of pieces of a segment of the archived history …","Reconstructed encoded blocks with their block numbers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Segment header stored in a segment","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,8,8,8,9,9,9,0,8,8,0,0,7,1,7,8,6,9,1,7,8,6,9,1,7,8,6,9,1,7,8,6,9,1,9,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,9,1,7,8,6,9,1,6,7,8,6,9,1,7,8,6,7,8,6,9,7,8,6,9,7,8,6,9,9,1,7,8,6,9,1,9,7,8,6,9,1,7,8,6,9,1,0,0,1,1,6,9,6,9,6,6,7,8,6,7,8,6,7,8,6,9,1,9,7,8,6,9,1,7,8,6,9,1,7,8,6,9,1,1,45,45,46,47,48,49,37,36,37,37,0,0,0,36,37,38,36,37,38,36,37,38,36,37,38,36,36,37,38,36,37,38,36,37,38,36,37,36,36,36,37,37,38,36,37,38,36,36,37,38,36,37,38,38,36,36,37,38,38,36,37,38,36,37,36,37,38,36,37,38,36,37,38,43,44,43,0,0,0,0,43,41,42,44,43,42,41,44,43,42,41,44,43,42,41,44,43,42,41,44,42,44,43,42,41,44,43,42,41,44,43,42,41,44,43,42,44,42,44,44,43,43,42,41,44,43,42,41,44,44,43,42,41,44,43,42,41,41,44,44,43,42,44,43,42,41,44,43,44,43,42,41,44,43,42,41,44,43,42,41,50,50],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[3,[2]],4,5],[[3,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[8,8],[6,6],[9,9],[1,1],[[]],[[]],[[]],[[]],[[]],[[9,9],10],[11,[[13,[7,12]]]],[11,[[13,[8,12]]]],[11,[[13,[6,12]]]],[[[14,[2]]],[[13,[12]]]],[[[14,[2]]],[[13,[12]]]],[[[14,[2]]],[[13,[12]]]],[[15,[14,[2]]],[[13,[12]]]],[[15,[14,[2]]],[[13,[12]]]],[[15,[14,[2]]],[[13,[12]]]],[[15,11],[[13,[12]]]],[[15,11],[[13,[12]]]],[[15,11],[[13,[12]]]],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[17,[[13,[6]]]],[16],[16],[16],[16],[16],[[7,[0,[18,19]]]],[[8,[0,[18,19]]]],[[6,[0,[18,19]]]],[[7,7],5],[[8,8],5],[[6,6],5],[[9,9],5],[[],5],[[],5],[[],5],[[],5],[[7,20],21],[[8,20],21],[[6,20],21],[[9,20],21],[[9,20],21],[[1,20],21],[[]],[[]],[[]],[[]],[[]],[[9,22]],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[23,24,25,15],5],[[23,26,25,27,15],5],[1,[[29,[28]]]],[23,[[13,[1,9]]]],0,[[9,9],[[29,[10]]]],0,[30],0,[[6,31],13],[7,16],[8,16],[6,16],[[[14,[2]]],[[3,[2,32]]]],[[[14,[2]]],[[3,[2,32]]]],[[[14,[2]]],[[3,[2,32]]]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[],34],[[],34],[[],34],[[23,35,[14,[2]],4],[[13,[1,9]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[37,37],[38,38],[[]],[[]],[[]],[[36,36],10],[16],[16],[16],[16],[16],[16],[16],[16],[16],[[36,36],5],[[37,37],5],[[],5],[[36,20],21],[[36,20],21],[[37,20],21],[[37,20],21],[[38,20],21],[[]],[[]],[[]],[[36,22]],[[],16],[[],16],[[],16],[[]],[[]],[[]],[23,[[13,[38,36]]]],[[36,36],[[29,[10]]]],[30],[30],[[38,[14,[[29,[39]]]],16],[[13,[39,37]]]],[[38,[14,[[29,[39]]]]],[[13,[40,37]]]],[[]],[[]],[[]],[[],33],[[],33],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[],34],0,0,0,0,0,0,0,0,[[41,[14,[[29,[39]]]]],[[13,[42,43]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[43,43],[42,42],[41,41],[[]],[[]],[[]],[[]],[[44,44],10],[[],42],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[[44,44],5],[[43,43],5],[[42,42],5],[[],5],[[],5],[[44,20],21],[[44,20],21],[[43,20],21],[[43,20],21],[[42,20],21],[[41,20],21],[[]],[[]],[[]],[[]],[[44,22]],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[],[[13,[41,44]]]],[[44,44],[[29,[10]]]],[30],[30],0,[[]],[[]],[[]],[[]],[[],33],[[],33],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[],34],[[],34],0,0],"c":[],"p":[[3,"Archiver"],[15,"u8"],[3,"Vec"],[3,"BlockObjectMapping"],[15,"bool"],[3,"NewArchivedSegment"],[4,"Segment"],[4,"SegmentItem"],[4,"ArchiverInstantiationError"],[4,"Ordering"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"slice"],[15,"u32"],[15,"usize"],[8,"Deserializer"],[8,"Output"],[8,"Sized"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[3,"Kzg"],[3,"PieceArray"],[6,"SegmentCommitment"],[3,"Scalar"],[3,"Witness"],[6,"BlockNumber"],[4,"Option"],[3,"Demand"],[8,"Serializer"],[3,"Global"],[3,"String"],[3,"TypeId"],[4,"SegmentHeader"],[4,"ReconstructorInstantiationError"],[4,"ReconstructorError"],[3,"PiecesReconstructor"],[3,"Piece"],[3,"ArchivedHistorySegment"],[3,"Reconstructor"],[3,"ReconstructedContents"],[4,"ReconstructorError"],[4,"ReconstructorInstantiationError"],[13,"InvalidBlockSmallSize"],[13,"V0"],[13,"Block"],[13,"BlockStart"],[13,"BlockContinuation"],[13,"IncorrectSegmentOrder"]]},\
"subspace_core_primitives":{"doc":"Core primitives for Subspace Network.","t":"EDRRGGGGGNSNDDDSSSSSSSSSDESSSRNDDDDDDDDDDDDRRDDDDDDDDSSSSSSSSSSSSSSDGDGEDGDGDNSSSSLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMALLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLMLMLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDLLLLLLLLLLLLLLLLLLLLLLLSSDLLFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLDRDRRDDLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDEEDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMM","n":["ArchivedBlockProgress","ArchivedHistorySegment","BLAKE2B_256_HASH_SIZE","BLAKE3_HASH_SIZE","Blake2b256Hash","Blake3Hash","BlockHash","BlockNumber","BlockWeight","Complete","ERASURE_CODING_RATE","EmptyVec","FlatPieces","HistorySize","LastArchivedBlock","MAX","MAX","MIDDLE","NUM_CHECKPOINTS","NUM_CHUNKS","NUM_CHUNKS","NUM_PIECES","NUM_RAW_RECORDS","NUM_S_BUCKETS","NonEmptyVec","NonEmptyVecErr","ONE","ONE","ONE","PUBLIC_KEY_LENGTH","Partial","Piece","PieceArray","PieceIndex","PieceOffset","PosProof","PosQualityBytes","PosSeed","PotCheckpoints","PotKey","PotOutput","PotSeed","PublicKey","RANDOMNESS_LENGTH","REWARD_SIGNATURE_LENGTH","Randomness","RawRecord","Record","RecordCommitment","RecordWitness","RecordedHistorySegment","RewardSignature","SBucket","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SectorId","SectorIndex","SectorSlotChallenge","SegmentCommitment","SegmentHeader","SegmentIndex","SlotNumber","Solution","SolutionRange","U256","V0","ZERO","ZERO","ZERO","ZERO","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","archived_progress","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","audit_chunk_offset","backward_checked","backward_checked","backward_checked","backward_checked","bidirectional_distance","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_div","checked_mul","checked_sub","checksum","chunk","chunk_witness","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","commitment","commitment_mut","crypto","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_into","decode_into","decode_into","decode_into","decode_into","decode_into","decode_into","decode_into","decode_into","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derive_evaluation_seed","derive_expiration_history_size","derive_global_challenge","derive_global_randomness","derive_piece_index","derive_sector_slot_challenge","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","first","first_piece_index","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","forward_checked","forward_checked","forward_checked","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_be_bytes","from_bytes","from_genesis","from_hex","from_hex","from_hex","from_le_bytes","from_str","genesis_solution","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","history_size","in_pieces","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_reward_address_format","iter","iter_mut","key","last","last_archived_block","last_piece_index","len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","new","new","new","new","new_boxed","new_boxed","new_boxed","new_boxed","new_with_entry","new_zero_vec","number","objects","one","output","par_parity","par_parity_mut","par_source","par_source_mut","parity","parity_mut","partial","partial_archived","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","piece_offset","position","prev_segment_header_hash","proof_of_space","public_key","push","record","record_commitment","record_mut","record_witness","rem","reward_address","s_bucket_audit_index","saturating_add","saturating_mul","saturating_sub","sector_expiration_check","sector_index","seed","seed_with_entropy","segment_commitment","segment_index","segment_index","segment_index","segment_piece_indexes","segment_piece_indexes_source_first","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_complete","set_partial","set_partial_archived","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slice_from_repr","slice_mut_from_repr","slice_mut_to_repr","slice_to_repr","source","source_mut","split","split_mut","steps_between","steps_between","steps_between","steps_between","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","to_be_bytes","to_bytes","to_bytes","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_le_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","witness","witness_mut","wrapping_add","wrapping_sub","zero","last_archived_block","prev_segment_header_hash","segment_commitment","segment_index","Blake3Checksummed","borrow","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","drop","encode_to","encoded_size","fmt","from","init","into","size_hint","to_keyed_vec","to_owned","try_from","try_into","type_id","FULL_BYTES","SAFE_BYTES","Scalar","as_mut","as_ref","blake2b_256_254_hash","blake2b_256_254_hash_to_scalar","blake2b_256_hash","blake2b_256_hash_list","blake2b_256_hash_with_key","blake3_hash","blake3_hash_list","blake3_hash_parallel","borrow","borrow_mut","clone","clone_into","cmp","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","drop","encoded_fixed_size","encoded_size","eq","equivalent","fmt","from","from","from","from","hash","init","into","kzg","max_encoded_len","partial_cmp","serialize","size_hint","slice_from_repr","slice_mut_from_repr","slice_mut_to_repr","slice_option_from_repr","slice_option_mut_from_repr","slice_option_mut_to_repr","slice_option_to_repr","slice_to_repr","to_bytes","to_keyed_vec","to_owned","try_from","try_from","try_from","try_into","type_id","type_info","using_encoded","vec_from_repr","vec_option_from_repr","vec_option_to_repr","vec_to_repr","Commitment","EMBEDDED_KZG_SETTINGS_BYTES","Kzg","NUM_G1_POWERS","NUM_G2_POWERS","Polynomial","Witness","as_mut","as_mut","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_to_kzg_settings","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commit","create_witness","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","embedded_kzg_settings","encoded_fixed_size","encoded_fixed_size","encoded_size","encoded_size","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_fft_settings","hash","init","init","init","init","into","into","into","into","max_encoded_len","max_encoded_len","new","normalize","poly","serialize","serialize","size_hint","size_hint","slice_from_repr","slice_mut_from_repr","slice_mut_to_repr","slice_option_from_repr","slice_option_mut_from_repr","slice_option_mut_to_repr","slice_option_to_repr","slice_to_repr","to_bytes","to_bytes","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_from_bytes","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_info","type_info","using_encoded","using_encoded","vec_from_repr","vec_option_from_repr","vec_option_to_repr","vec_to_repr","verify","BlockObject","BlockObjectMapping","GlobalObject","PieceObject","PieceObjectMapping","V0","V0","V0","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","objects","objects","offset","offset","offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","piece_index","serialize","serialize","serialize","serialize","serialize","set_offset","size_hint","size_hint","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","using_encoded","using_encoded","hash","offset","offset","piece_index","hash","offset"],"q":[[0,"subspace_core_primitives"],[1366,"subspace_core_primitives::SegmentHeader"],[1370,"subspace_core_primitives::checksum"],[1394,"subspace_core_primitives::crypto"],[1462,"subspace_core_primitives::crypto::kzg"],[1602,"subspace_core_primitives::objects"],[1775,"subspace_core_primitives::objects::BlockObject"],[1777,"subspace_core_primitives::objects::GlobalObject"],[1779,"subspace_core_primitives::objects::PieceObject"]],"d":["Progress of an archived block.","Archived history segment after archiving is applied.","Size of BLAKE2b-256 hash output (in bytes).","Size of BLAKE3 hash output (in bytes).","BLAKE2b-256 hash output","BLAKE3 hash output","Block hash in Subspace network.","Block number in Subspace network.","BlockWeight type for fork choice rules.","The block has been fully archived.","Erasure coding rate for records during archiving process.","Tried to create with an empty Vec","Flat representation of multiple pieces concatenated for …","Size of blockchain history in segments.","Last archived block","Max s-bucket index","Maximum value.","The middle of the piece distance field. The analogue of …","Number of PoT checkpoints produced (used to optimize …","Number of chunks (scalars) within one raw record.","Number of chunks (scalars) within one record.","Number of pieces in one segment of archived history.","Number of raw records in one segment of recorded history.","Number of s-buckets contained within one record (and by …","A Vec&lt;&gt; that enforces the invariant that it cannot be …","Error codes for <code>NonEmptyVec</code>.","Piece index 1.","Piece index 1.","Segment index 1.","Length of public key in bytes.","Number of partially archived bytes of a block.","A piece of archival history in Subspace Network.","A piece of archival history in Subspace Network.","Piece index in consensus","Piece offset in sector","Proof of space proof bytes.","Proof of space quality.","Proof of space seed.","Proof of time checkpoints, result of proving","Proof of time key(input to the encryption).","Proof of time output, can be intermediate checkpoint or …","Proof of time seed","A Ristretto Schnorr public key as bytes produced by …","Byte length of a randomness type.","Length of signature in bytes","Type of randomness.","Raw record contained within recorded history segment …","Record contained within a piece.","Record commitment contained within a piece.","Record witness contained within a piece.","Recorded history segment before archiving is applied.","A Ristretto Schnorr signature as bytes produced by …","S-bucket used in consensus","Size in bytes.","Size of raw record in bytes, is guaranteed to be a …","Size of a segment record given the global piece size (in …","Size of record commitment in bytes.","Size of record witness in bytes.","Size of a piece (in bytes).","Size of recorded history segment in bytes.","Size of archived history segment in bytes.","Size of proof of space seed in bytes.","Size of proof of space quality in bytes.","Size of proof of space proof in bytes.","Size of proof of time key in bytes","Size of proof of time seed in bytes","Size of proof of time proof in bytes","Data structure representing sector ID in farmer’s plot","Sector index in consensus","Challenge used for a particular sector for particular slot","Segment commitment type.","Segment header for a specific segment.","Segment index type.","Slot number in Subspace network.","Farmer solution for slot challenge.","Type of solution range.","256-bit unsigned integer","V0 of the segment header data structure","S-bucket 0.","Piece index 0.","Piece index 0.","Segment index 0.","","","","","","","","","","Progress of an archived block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the slice of the entries.","","","","","","","","","","","","","Audit chunk offset within above chunk","","","","","Bidirectional distance metric implemented on top of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Subtracts two numbers, checking for underflow. If …","Module containing wrapper for SCALE encoding/decoding with …","Chunk at above offset","Witness for above chunk","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Commitment contained within a piece.","Mutable commitment contained within a piece.","Various cryptographic utilities used across Subspace …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","We assume a block can always fit into the segment …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derive evaluation seed","Derive history size when sector created at <code>history_size</code> …","Derive global slot challenge from global randomness.","Derives the global randomness from the output","Derive piece index that should be stored in sector at …","Derive sector slot challenge for this sector from provided …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the first entry.","Get the first piece index in this segment.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create from big endian bytes","Create piece index from bytes.","Derive initial PoT seed from genesis block hash","","","","Create from little endian bytes","","Dummy solution for the genesis block","","","","","","","","","Proof hash.","","","Public key hash.","","","","","Hash of the whole segment header","","","","Size of the blockchain history at time of sector creation","Size of blockchain history in pieces.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract internal representation.","Transform solution with one reward address type into …","Returns an iterator for the entries.","Returns a mutable iterator for the entries.","Derive key from proof of time seed","Returns the last entry.","Last archived block","Get the last piece index in this segment.","Returns the number of entries.","","","","","","","","","","","","","","","","","","","","","","","","","Allocate <code>FlatPieces</code> that will hold <code>piece_count</code> pieces …","Create new instance.","Create new sector ID by deriving it from public key and …","Creates the Vec.","Create boxed value without hitting stack overflow","Create boxed value without hitting stack overflow","Create boxed value without hitting stack overflow","Create boxed value without hitting stack overflow","Creates the Vec with the entry.","Create vector filled with zeroe records without hitting …","Block number","Data structures related to objects (useful data) stored on …","One (multiplicative identity) of this type.","Get proof of time output out of checkpoints (last …","Parallel iterator over parity pieces (odd indices).","Mutable parallel iterator over parity pieces (odd indices).","Parallel iterator over source pieces (even indices).","Mutable parallel iterator over source pieces (even …","Iterator over parity pieces (odd indices).","Mutable iterator over parity pieces (odd indices).","Return the number of partially archived bytes if the …","Returns the number of partially archived bytes for a block.","","","","","","","","","","","","","","","","Pieces offset within sector","Position of a piece in a segment","Hash of the segment header of the previous segment","Proof of space for piece offset","Public key of the farmer that created the solution","Adds an entry to the end.","Record contained within a piece.","Record commitment that can use used to verify that piece …","Mutable record contained within a piece.","Witness for above record commitment","","Address for receiving block reward","Index of s-bucket within sector to be audited","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction. Computes <code>self - other</code>, saturating …","History size at which expiration check for sector happens.","Index of the sector where solution was found","Derive seed from proof of time in case entropy injection …","Derive seed from proof of time with entropy injection","Segment commitment of the records in a segment.","Segment index piece index corresponds to","Segment index that corresponds to this history size.","Segment index","List of piece indexes that belong to this segment.","List of piece indexes that belong to this segment with …","","","","","","","","","","","","","","","","","","","","","","Sets the archived state of this block to …","Sets new number of partially archived bytes.","Sets new number of partially archived bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","Convenient conversion from slice of underlying …","Convenient conversion from mutable slice of underlying …","Convenient conversion from mutable slice of record to …","Convenient conversion from slice of record to underlying …","Iterator over source pieces (even indices).","Mutable iterator over source pieces (even indices).","Split piece into underlying components.","Split piece into underlying mutable components.","","","","","","","","","","","","","","Convert to big endian bytes","Convert piece index to bytes.","Convert piece offset to bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert to little endian bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the entries in the collection.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Witness contained within a piece.","Mutable witness contained within a piece.","","","Zero (additive identity) of this type.","Last archived block","Hash of the segment header of the previous segment","Root of commitments of all records in a segment.","Segment index","Wrapper data structure that when encoded/decoded will …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","How many bytes Scalar contains physically, use …","How many full bytes can be stored in BLS12-381 scalar (for …","Representation of a single BLS12-381 scalar value.","","","BLAKE2b-256 hashing of a single value truncated to 254 …","BLAKE2b-256 hashing of a single value truncated to 254 …","BLAKE2b-256 hashing of a single value.","BLAKE2b-256 hashing of a list of values.","BLAKE2b-256 keyed hashing of a single value.","BLAKE3 hashing of a single value.","BLAKE3 hashing of a list of values.","BLAKE3 hashing of a single value in parallel (only useful …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Tools for KZG commitment scheme","","","","","Convenient conversion from slice of underlying …","Convenient conversion from mutable slice of underlying …","Convenient conversion from mutable slice of scalar to …","Convenient conversion from slice of optional underlying …","Convenient conversion from optional mutable slice of …","Convenient conversion from optional mutable slice of …","Convenient conversion from slice of optional scalar to …","Convenient conversion from slice of scalar to underlying …","Convert scalar into bytes","","","","","","","","","","Convenient conversion from vector of underlying …","Convenient conversion from vector of optional underlying …","Convenient conversion from vector of optional scalar to …","Convenient conversion from vector of scalar to underlying …","Commitment to polynomial","Embedded KZG settings as bytes, too big for <code>no_std</code> in most …","Wrapper data structure for working with KZG commitment …","Number of G1 powers stored in <code>EMBEDDED_KZG_SETTINGS_BYTES</code>","Number of G2 powers stored in <code>EMBEDDED_KZG_SETTINGS_BYTES</code>","Commitment to polynomial","Witness for polynomial evaluation","","","","","","","","","","","","","Function turns bytes into <code>FsKZGSettings</code>, it is up to the …","","","","","","","","","Computes a <code>Commitment</code> to <code>polynomial</code>","Computes a <code>Witness</code> of evaluation of <code>polynomial</code> at <code>index</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Embedded KZG settings","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Get FFT settings for specified number of values, uses …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create new instance with given KZG settings.","Normalize polynomial by removing trailing zeroes","Create polynomial from data. Data must be multiple of 32 …","","","","","Convenient conversion from slice of underlying …","Convenient conversion from mutable slice of underlying …","Convenient conversion from mutable slice of commitment to …","Convenient conversion from slice of optional underlying …","Convenient conversion from optional mutable slice of …","Convenient conversion from optional mutable slice of …","Convenient conversion from slice of optional commitment to …","Convenient conversion from slice of commitment to …","Convert commitment to raw bytes","Convert witness to raw bytes","","","","","","","","","","","","","","","Try to deserialize commitment from raw bytes","Try to deserialize witness from raw bytes","","","","","","","","","","","","","Convenient conversion from vector of underlying …","Convenient conversion from vector of optional underlying …","Convenient conversion from vector of optional commitment …","Convenient conversion from vector of commitment to …","Verifies that <code>value</code> is the evaluation at <code>index</code> of the …","Object stored inside of the block","Mapping of objects stored inside of the block","Object stored inside in the history of the blockchain","Object stored inside of the block","Mapping of objects stored inside of the piece","V0 of object mapping data structure","V0 of object mapping data structure","V0 of object mapping data structure","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Object hash","","","Object hash","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Objects stored inside of the block","Objects stored inside of the block","Offset of object in the encoded block.","Offset of the object","Offset of the object","","","","","","Piece index where object is contained (at least its …","","","","","","Sets new offset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Object hash","Offset of object in the encoded block.","Offset of the object","Piece index where object is contained (at least its …","Object hash","Offset of the object"],"i":[0,0,0,0,0,0,0,0,0,39,16,68,0,0,0,1,5,5,38,8,9,34,16,9,0,0,2,3,4,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,8,9,10,11,12,16,34,35,36,37,18,19,20,0,0,0,0,0,0,0,0,0,0,41,1,2,3,4,1,2,3,4,5,1,2,3,4,40,8,9,10,11,12,13,15,16,17,24,25,26,8,9,10,11,12,13,13,15,16,17,18,19,20,8,9,10,11,12,13,15,16,17,8,9,10,11,12,13,15,16,17,8,9,10,11,12,13,13,15,16,17,18,19,20,24,25,26,28,8,9,10,11,12,13,15,16,17,24,25,26,42,1,2,3,4,0,1,2,3,8,9,10,11,12,13,15,4,33,16,34,17,35,36,37,18,19,20,38,24,25,39,40,41,42,5,43,26,28,68,1,2,3,8,9,10,11,12,13,15,4,33,16,34,17,35,36,37,18,19,20,38,24,25,39,40,41,42,5,43,26,28,68,5,5,5,5,0,42,42,1,2,3,8,9,10,11,12,13,15,4,33,16,34,17,35,36,37,18,19,20,38,24,25,39,40,41,42,5,43,26,28,1,2,3,8,9,10,11,12,13,15,4,33,16,34,17,35,36,37,18,19,20,38,24,25,39,40,41,42,5,43,26,28,1,2,3,12,13,15,4,33,24,25,39,40,5,43,26,13,13,0,1,2,3,10,11,12,13,15,4,33,34,17,37,18,19,20,38,24,25,39,40,41,42,5,26,28,1,2,3,10,11,12,13,15,4,33,34,17,37,18,19,20,38,24,25,39,40,41,42,5,26,28,1,2,3,10,11,12,13,15,4,33,34,17,37,18,19,20,38,24,25,39,40,41,42,5,26,28,1,2,3,10,11,13,4,33,34,1,2,3,10,11,12,13,15,4,33,34,17,37,18,19,20,38,24,25,39,40,41,42,5,26,28,1,2,3,8,9,10,11,12,13,15,4,16,34,17,37,18,19,20,38,24,39,5,1,2,3,8,8,9,9,10,10,11,11,12,12,13,13,15,15,4,33,33,16,16,34,34,17,17,35,35,36,36,37,37,18,18,19,19,20,20,38,38,24,24,25,25,39,40,41,42,5,43,43,26,28,68,1,2,3,8,8,9,9,10,10,11,11,12,12,13,13,15,15,4,33,33,16,16,34,34,17,35,36,37,37,18,18,19,19,20,20,38,38,24,25,39,40,41,42,5,43,26,28,68,26,26,17,20,26,26,1,2,3,12,13,15,4,33,34,17,37,18,19,20,24,25,39,40,41,42,26,1,2,3,4,5,1,2,3,4,1,2,3,8,9,10,11,12,13,15,4,33,16,34,17,35,36,37,18,19,20,38,24,25,39,40,41,42,5,43,26,28,68,1,2,3,10,11,12,13,15,4,33,34,17,37,18,19,20,38,24,25,5,26,28,8,9,10,11,12,13,15,16,17,24,25,26,8,9,10,11,12,13,15,16,17,24,25,26,1,2,3,10,11,12,13,15,4,33,34,17,37,18,19,20,38,24,25,39,40,41,42,5,26,28,1,2,3,8,9,10,11,12,13,15,4,33,16,34,17,35,36,37,18,19,20,38,24,25,39,40,41,42,5,43,26,28,1,2,3,8,9,10,11,12,13,15,4,33,16,34,17,35,36,37,18,19,20,38,24,25,39,40,41,42,5,43,26,28,28,4,1,1,2,2,3,3,8,9,10,11,12,13,15,4,4,33,33,16,34,17,35,36,37,18,18,19,19,20,20,38,24,24,25,39,40,41,42,5,5,43,26,28,68,1,2,3,4,1,1,2,2,3,3,8,9,10,10,11,11,12,12,13,15,15,4,4,33,33,33,16,34,17,17,35,35,36,36,37,37,18,18,19,19,20,20,38,24,24,25,25,39,40,41,42,5,5,5,5,5,5,43,26,28,68,5,2,19,13,15,37,5,18,42,1,2,3,12,13,15,4,33,37,19,24,24,25,39,40,41,41,5,43,26,42,33,1,2,3,8,9,10,11,12,13,15,4,33,16,34,17,35,36,37,18,19,20,38,24,25,39,40,41,42,5,43,26,28,68,1,2,3,8,9,10,11,12,13,15,4,33,16,34,17,35,36,37,18,19,20,38,24,25,39,40,41,42,5,43,26,28,68,15,42,28,28,19,28,41,4,28,1,2,3,10,11,13,4,33,34,17,37,18,19,20,38,1,2,3,4,5,1,2,3,4,15,33,26,28,8,9,13,16,28,9,40,0,5,38,15,15,15,15,15,15,39,40,1,2,3,12,13,15,4,33,24,25,39,40,5,43,26,42,2,41,42,42,28,13,42,13,42,5,42,43,5,5,5,33,42,20,20,41,2,33,41,4,4,1,2,3,12,13,15,4,33,34,17,37,18,19,20,24,25,39,40,41,42,26,40,39,40,1,2,3,10,11,12,13,15,4,33,34,17,37,18,19,20,38,24,25,39,40,41,42,5,26,28,9,9,9,9,15,15,13,13,1,2,3,4,1,2,3,4,5,1,2,3,4,5,2,3,1,2,3,10,11,12,13,15,4,33,34,17,37,18,19,20,38,24,25,39,40,41,42,5,26,28,5,1,2,3,8,9,10,11,12,13,15,4,33,16,34,17,35,36,37,18,19,20,38,24,25,39,40,41,42,5,43,26,28,1,2,3,4,33,18,19,20,24,5,28,1,1,2,3,8,9,10,10,11,11,12,12,12,13,15,4,33,16,34,17,35,36,37,18,19,20,38,24,25,39,40,41,42,5,43,26,28,68,1,2,3,8,9,10,11,12,13,15,4,33,16,34,17,35,36,37,18,19,20,38,24,25,39,40,41,42,5,43,26,28,68,1,2,3,8,9,10,11,12,13,15,4,33,16,34,17,35,36,37,18,19,20,38,24,25,39,40,41,42,5,43,26,28,68,1,2,3,10,11,12,13,15,4,33,34,17,37,18,19,20,38,24,25,39,40,41,42,5,26,1,2,3,10,11,12,13,15,4,33,34,17,37,18,19,20,38,24,25,5,26,28,13,13,5,5,5,107,107,107,107,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,91,91,0,91,91,0,0,0,0,0,0,0,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,0,0,0,0,0,0,93,95,93,95,97,93,95,98,97,93,95,98,0,97,93,95,98,97,93,95,98,98,98,93,95,93,95,93,95,93,95,93,95,97,93,93,95,95,98,97,93,93,95,95,98,93,95,97,93,95,98,0,93,95,93,95,93,95,93,95,97,93,95,98,97,97,93,93,95,95,98,98,93,97,93,95,98,97,93,95,98,93,95,98,97,98,93,95,93,95,93,93,93,93,93,93,93,93,93,95,93,95,97,93,95,98,97,93,93,93,95,95,95,98,93,95,97,93,95,98,97,93,95,98,93,95,93,95,93,93,93,93,98,0,0,0,0,0,102,104,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,103,105,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,103,105,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,102,103,104,104,105,106,102,103,104,105,106,102,103,104,105,106,103,105,102,104,106,102,103,104,105,106,106,102,103,104,105,106,102,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,102,103,104,105,106,103,105,108,108,109,109,110,110],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[1,1]],[[2,2]],[[3,3]],[[4,4]],0,[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[8,[[7,[6]]]],[9,[[7,[6]]]],[10,[[7,[6]]]],[11,[[7,[6]]]],[12,[[7,[6]]]],[13,[[7,[6]]]],[13,[[14,[6]]]],[15,[[7,[6]]]],[16,[[7,[6]]]],[17,[[7,[6]]]],[18,[[14,[6]]]],[19,[[14,[6]]]],[20,[[14,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[8,[[7,[6]]]],[9,[[7,[6]]]],[10,[[7,[6]]]],[11,[[7,[6]]]],[12,[[7,[6]]]],[13,[[7,[6]]]],[13,[[14,[6]]]],[15,[[7,[6]]]],[16,[[7,[6]]]],[17,[[7,[6]]]],[18,[[14,[6]]]],[19,[[14,[6]]]],[20,[[14,[6]]]],[24,[[7,[6]]]],[25,[[7,[6]]]],[26,[[7,[6]]]],[[[28,[27]]],[[7,[27]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],[[],[[23,[[7,[21]],22]]]],0,[[1,29],[[30,[1]]]],[[2,29],[[30,[2]]]],[[3,29],[[30,[3]]]],[[4,29],[[30,[4]]]],[[[0,[31,32]],[0,[31,32]]],[[0,[31,32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,5],[[30,[5]]]],[[5,5],[[30,[5]]]],[[5,5],[[30,[5]]]],[[5,5],[[30,[5]]]],0,0,0,[1,1],[2,2],[3,3],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[15,15],[4,4],[33,33],[16,16],[34,34],[17,17],[35,35],[36,36],[37,37],[18,18],[19,19],[20,20],[38,38],[24,24],[25,25],[39,39],[40,40],[41,41],[[[42,[27,27]]],[[42,[27,27]]]],[5,5],[43,43],[26,26],[[[28,[27]]],[[28,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],44],[[2,2],44],[[3,3],44],[[12,12],44],[[13,13],44],[[15,15],44],[[4,4],44],[[33,33],44],[[24,24],44],[[25,25],44],[[39,39],44],[[40,40],44],[[5,5],44],[[43,43],44],[[26,26],44],[13,10],[13,10],0,[45,[[23,[1,46]]]],[45,[[23,[2,46]]]],[45,[[23,[3,46]]]],[45,[[23,[10,46]]]],[45,[[23,[11,46]]]],[45,[[23,[12,46]]]],[45,[[23,[13,46]]]],[45,[[23,[15,46]]]],[45,[[23,[4,46]]]],[45,[[23,[33,46]]]],[45,[[23,[34,46]]]],[45,[[23,[17,46]]]],[45,[[23,[37,46]]]],[45,[[23,[18,46]]]],[45,[[23,[19,46]]]],[45,[[23,[20,46]]]],[45,[[23,[38,46]]]],[45,[[23,[24,46]]]],[45,[[23,[25,46]]]],[45,[[23,[39,46]]]],[45,[[23,[40,46]]]],[45,[[23,[41,46]]]],[45,[[23,[[42,[47,47]],46]]]],[45,[[23,[5,46]]]],[45,[[23,[26,46]]]],[45,[[23,[28,46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[45,[49,[1]]],[[23,[50,46]]]],[[45,[49,[2]]],[[23,[50,46]]]],[[45,[49,[3]]],[[23,[50,46]]]],[[45,[49,[10]]],[[23,[50,46]]]],[[45,[49,[11]]],[[23,[50,46]]]],[[45,[49,[13]]],[[23,[50,46]]]],[[45,[49,[4]]],[[23,[50,46]]]],[[45,[49,[33]]],[[23,[50,46]]]],[[45,[49,[34]]],[[23,[50,46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[],1],[[],2],[[],3],[[],8],[[],9],[[],10],[[],11],[[],12],[[],13],[[],15],[[],4],[[],16],[[],34],[[],17],[[],37],[[],18],[[],19],[[],20],[[],38],[[],24],[[],39],[[],5],[29],[29],[29],[29],[8],[29],[9],[29],[10],[11],[29],[29],[12],[29],[13],[15],[29],[29],[33],[29],[16],[29],[34],[29],[29],[17],[35],[29],[29],[36],[37],[29],[29],[18],[29],[19],[20],[29],[29],[38],[24],[29],[25],[29],[29],[29],[29],[29],[29],[29],[43],[29],[29],[29],[29],[29],[29],[29],[8],[9],[29],[29],[10],[29],[11],[29],[12],[13],[29],[29],[15],[29],[29],[33],[29],[16],[34],[29],[29],[29],[29],[29],[37],[18],[29],[19],[29],[29],[20],[38],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[[26,3,33],35],[[26,33,51,33],[[30,[33]]]],[[17,52],53],[20,17],[[26,3,33,54,33],2],[[26,53],43],[55,[[23,[1]]]],[55,[[23,[2]]]],[55,[[23,[3]]]],[55,[[23,[12]]]],[55,[[23,[13]]]],[55,[[23,[15]]]],[55,[[23,[4]]]],[55,[[23,[33]]]],[55,[[23,[34]]]],[55,[[23,[17]]]],[55,[[23,[37]]]],[55,[[23,[18]]]],[55,[[23,[19]]]],[55,[[23,[20]]]],[55,[[23,[24]]]],[55,[[23,[25]]]],[55,[[23,[39]]]],[55,[[23,[40]]]],[55,[[23,[41]]]],[55,[[23,[[42,[56,56]]]]]],[55,[[23,[26]]]],[1,1],[2,2],[3,3],[4,4],[5,5],[1],[2],[3],[4],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[1,[[57,[6]]]],[2,[[57,[6]]]],[3,[[57,[6]]]],[10,[[57,[6]]]],[11,[[57,[6]]]],[12,[[57,[6]]]],[13,[[57,[6]]]],[15,[[57,[6]]]],[4,[[57,[6]]]],[33,[[57,[6]]]],[34,[[57,[6]]]],[17,[[57,[6]]]],[37,[[57,[6]]]],[18,[[57,[6]]]],[19,[[57,[6]]]],[20,[[57,[6]]]],[38,[[57,[6]]]],[24,[[57,[6]]]],[25,[[57,[6]]]],[5,[[57,[6]]]],[26,[[57,[6]]]],[28,[[57,[6]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[],[[59,[58]]]],[[1,[0,[60,61]]]],[[2,[0,[60,61]]]],[[3,[0,[60,61]]]],[[10,[0,[60,61]]]],[[11,[0,[60,61]]]],[[12,[0,[60,61]]]],[[13,[0,[60,61]]]],[[15,[0,[60,61]]]],[[4,[0,[60,61]]]],[[33,[0,[60,61]]]],[[34,[0,[60,61]]]],[[17,[0,[60,61]]]],[[37,[0,[60,61]]]],[[18,[0,[60,61]]]],[[19,[0,[60,61]]]],[[20,[0,[60,61]]]],[[38,[0,[60,61]]]],[[24,[0,[60,61]]]],[[25,[0,[60,61]]]],[[39,[0,[60,61]]]],[[40,[0,[60,61]]]],[[41,[0,[60,61]]]],[[[42,[62,62]],[0,[60,61]]]],[[5,[0,[60,61]]]],[[26,[0,[60,61]]]],[[28,[0,[60,61]]]],[[1,1],63],[[2,2],63],[[3,3],63],[[8,8],63],[[9,9],63],[[10,10],63],[[11,11],63],[[12,12],63],[[13,13],63],[[15,15],63],[[4,4],63],[[33,33],63],[[16,16],63],[[34,34],63],[[17,17],63],[[35,35],63],[[36,36],63],[[37,37],63],[[18,18],63],[[19,19],63],[[20,20],63],[[38,38],63],[[24,24],63],[[25,25],63],[[39,39],63],[[40,40],63],[[41,41],63],[[[42,[64,64]],[42,[64,64]]],63],[[5,5],63],[[43,43],63],[[26,26],63],[[[28,[64]],[28,[64]]],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[[28,[27]]],27],[4,2],[[1,65],66],[[1,65],66],[[2,65],66],[[2,65],66],[[3,65],66],[[3,65],66],[[8,65],66],[[9,65],66],[[10,65],66],[[11,65],66],[[12,65],66],[[13,65],66],[[15,65],66],[[4,65],66],[[4,65],66],[[33,65],66],[[33,65],66],[[16,65],66],[[34,65],66],[[17,65],66],[[35,65],66],[[36,65],66],[[37,65],66],[[18,65],66],[[18,65],66],[[19,65],66],[[19,65],66],[[20,65],66],[[20,65],66],[[38,65],66],[[24,65],66],[[24,65],66],[[25,65],66],[[39,65],66],[[40,65],66],[[41,65],66],[[[42,[67,67]],65],66],[[5,65],66],[[5,65],66],[[43,65],66],[[26,65],66],[[[28,[67]],65],66],[[68,65],66],[[1,29],[[30,[1]]]],[[2,29],[[30,[2]]]],[[3,29],[[30,[3]]]],[[4,29],[[30,[4]]]],[54,1],[[]],[[]],[69,2],[54,3],[[]],[[]],[[]],[[]],[[[14,[6]]],10],[[[14,[6]]],11],[[]],[13,12],[[]],[[]],[[]],[13,15],[[]],[69,4],[[]],[4,33],[70,33],[[]],[[]],[[[14,[6]]],17],[[]],[[]],[[[14,[6]]],35],[[]],[[[14,[6]]],36],[[]],[[[14,[6]]],37],[[]],[[[14,[6]]],18],[[]],[[[14,[6]]],19],[[[14,[6]]],20],[[]],[[]],[[[14,[6]]],24],[[]],[[]],[[[14,[6]]],25],[[]],[[]],[[]],[[]],[71,5],[[]],[69,5],[48,5],[54,5],[6,5],[[]],[[]],[[]],[[]],[[[14,[6]]],5],[[[14,[6]]],2],[[[7,[6]],[7,[6]]],19],[[[72,[[7,[6]]]]],[[23,[13]]]],[[[72,[[7,[6]]]]],[[23,[15]]]],[[[72,[[7,[6]]]]],[[23,[37]]]],[[[14,[6]]],5],[73,[[23,[18]]]],[[],42],[[1,74]],[[2,74]],[[3,74]],[[12,74]],[[13,74]],[[15,74]],[[4,74]],[[33,74]],[37,53],[[19,74]],[[24,74]],[24,53],[[25,74]],[[39,74]],[[40,74]],[[41,74]],[41,53],[[5,74]],[[43,74]],[[26,74]],0,[33,70],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,[[57,[13]]]],[[[42,[[75,[75]]]]],42],[[[28,[27]]],[[77,[76]]]],[[[28,[27]]],[[77,[76]]]],[19,18],[[[28,[27]]],27],[41,40],[4,2],[[[28,[27]]],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[1,1],[2,2],[3,3],[4,4],[5,5],[1],[2],[3],[4],[29,15],[70,33],[[53,78],26],[[[57,[27]]],[[23,[[28,[27]],68]]]],[[],[[77,[8]]]],[[],[[77,[9]]]],[[],[[77,[13]]]],[[],[[77,[16]]]],[27,[[28,[27]]]],[29,[[57,[9]]]],0,0,[[],5],[38,20],[15,79],[15,79],[15,79],[15,79],[15,80],[15,80],[39,[[30,[48]]]],[40,[[30,[48]]]],[[1,1],[[30,[44]]]],[[2,2],[[30,[44]]]],[[3,3],[[30,[44]]]],[[12,12],[[30,[44]]]],[[13,13],[[30,[44]]]],[[15,15],[[30,[44]]]],[[4,4],[[30,[44]]]],[[33,33],[[30,[44]]]],[[24,24],[[30,[44]]]],[[25,25],[[30,[44]]]],[[39,39],[[30,[44]]]],[[40,40],[[30,[44]]]],[[5,5],[[30,[44]]]],[[43,43],[[30,[44]]]],[[26,26],[[30,[44]]]],0,[2,48],[41,53],0,0,[[[28,[27]],27]],[13,9],0,[13,9],0,[5,5],0,[43,1],[[5,5],5],[[5,5],5],[[5,5],5],[[33,33],[[30,[33]]]],0,[20,19],[[20,81],19],[41,51],[2,4],[33,4],[41,4],[4,[[14,[2]]]],[4,[[14,[2]]]],[[1,82],23],[[2,82],23],[[3,82],23],[[12,82],23],[[13,82],23],[[15,82],23],[[4,82],23],[[33,82],23],[[34,82],23],[[17,82],23],[[37,82],23],[[18,82],23],[[19,82],23],[[20,82],23],[[24,82],23],[[25,82],23],[[39,82],23],[[40,82],23],[[41,82],23],[[[42,[83,83]],82],23],[[26,82],23],[40],[[39,48]],[[40,84]],[1,29],[2,29],[3,29],[10,29],[11,29],[12,29],[13,29],[15,29],[4,29],[33,29],[34,29],[17,29],[37,29],[18,29],[19,29],[20,29],[38,29],[24,29],[25,29],[39,29],[40,29],[41,29],[[[42,[62,62]]],29],[5,29],[26,29],[28,29],[[[7,[[14,[6]]]]],[[7,[9]]]],[[[7,[[14,[6]]]]],[[7,[9]]]],[[[7,[9]]],[[7,[[14,[6]]]]]],[[[7,[9]]],[[7,[[14,[6]]]]]],[15,80],[15,80],[13],[13],[[1,1],[[30,[29]]]],[[2,2],[[30,[29]]]],[[3,3],[[30,[29]]]],[[4,4],[[30,[29]]]],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[1,1]],[[2,2]],[[3,3]],[[4,4]],[5,[[14,[6]]]],[2,[[14,[6]]]],[3,[[14,[6]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[5,[[14,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[[28,[27]]],[[57,[27]]]],[[],23],[29,[[23,[1]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[[7,[6]]],[[23,[10]]]],[[[7,[6]]],[[23,[11]]]],[[],23],[[[57,[6]]],[[23,[12]]]],[[],23],[[[7,[6]]],[[23,[12]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[1,89]],[[2,89]],[[3,89]],[[10,89]],[[11,89]],[[12,89]],[[13,89]],[[15,89]],[[4,89]],[[33,89]],[[34,89]],[[17,89]],[[37,89]],[[18,89]],[[19,89]],[[20,89]],[[38,89]],[[24,89]],[[25,89]],[[5,89]],[[26,89]],[[28,89]],[13,11],[13,11],[[5,5],5],[[5,5],5],[[],5],0,0,0,0,0,[[]],[[]],[[[90,[27]]],[[90,[27]]]],[[]],[45,[[23,[[90,[47]],46]]]],[[[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,45],[[23,[46]]]],[29],[29],[29],[[[90,[62]],[0,[60,61]]]],[[[90,[62]]],29],[[[90,[67]],65],66],[[]],[[],29],[[]],[[[90,[62]]],29],[[[7,[6]]],[[57,[6,85]]]],[[]],[[],23],[[],23],[[],87],0,0,0,[91,92],[91,92],[[[7,[6]]],53],[[[7,[6]]],91],[[[7,[6]]],53],[[[7,[[7,[6]]]]],53],[[[7,[6]],[7,[6]]],53],[[[7,[6]]],81],[[[7,[[7,[6]]]]],81],[[[7,[6]]],81],[[]],[[]],[91,91],[[]],[[91,91],44],[45,[[23,[91,46]]]],[[[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,45],[[23,[46]]]],[[],91],[91],[29],[29],[91],[55,[[23,[91]]]],[29],[[],[[30,[29]]]],[91,29],[[91,91],63],[[],63],[[91,65],66],[92,91],[[]],[[[14,[6]]],91],[[[14,[6]]],91],[[91,74]],[[],29],[[]],0,[[],29],[[91,91],[[30,[44]]]],[[91,82],23],[91,29],[[[7,[92]]],[[7,[91]]]],[[[7,[92]]],[[7,[91]]]],[[[7,[91]]],[[7,[92]]]],[[[7,[[30,[92]]]]],[[7,[[30,[91]]]]]],[[[7,[[30,[92]]]]],[[7,[[30,[91]]]]]],[[[7,[[30,[91]]]]],[[7,[[30,[92]]]]]],[[[7,[[30,[91]]]]],[[7,[[30,[92]]]]]],[[[7,[91]]],[[7,[92]]]],[91,[[14,[6]]]],[[[7,[6]]],[[57,[6,85]]]],[[]],[[[14,[6]]],[[23,[91]]]],[[],23],[[[14,[6]]],[[23,[91]]]],[[],23],[[],87],[[],88],[[91,89]],[[[57,[92]]],[[57,[91]]]],[[[57,[[30,[92]]]]],[[57,[[30,[91]]]]]],[[[57,[[30,[91]]]]],[[57,[[30,[92]]]]]],[[[57,[91]]],[[57,[92]]]],0,0,0,0,0,0,0,[93,94],[95,94],[93,94],[95,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]],29,29],[[23,[96,86]]]],[97,97],[93,93],[95,95],[98,98],[[]],[[]],[[]],[[]],[[98,97],[[23,[93,86]]]],[[98,97,29,48],[[23,[95,86]]]],[45,[[23,[93,46]]]],[45,[[23,[95,46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[],93],[[],95],[29],[93],[29],[95],[29],[29],[29],[29],[93],[29],[95],[29],[55,[[23,[93]]]],[55,[[23,[95]]]],[29],[29],[29],[29],[[],96],[[],[[30,[29]]]],[[],[[30,[29]]]],[93,29],[95,29],[[93,93],63],[[95,95],63],[[],63],[[],63],[[97,65],66],[[93,65],66],[[95,65],66],[[98,65],66],[[]],[99,97],[94,93],[[]],[94,95],[[]],[[]],[[98,29],[[23,[[101,[100]],86]]]],[[93,74]],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[],29],[[],29],[96,98],[97],[[98,[7,[91]]],[[23,[97,86]]]],[[93,82],23],[[95,82],23],[93,29],[95,29],[[[7,[94]]],[[7,[93]]]],[[[7,[94]]],[[7,[93]]]],[[[7,[93]]],[[7,[94]]]],[[[7,[[30,[94]]]]],[[7,[[30,[93]]]]]],[[[7,[[30,[94]]]]],[[7,[[30,[93]]]]]],[[[7,[[30,[93]]]]],[[7,[[30,[94]]]]]],[[[7,[[30,[93]]]]],[[7,[[30,[94]]]]]],[[[7,[93]]],[[7,[94]]]],[93,[[14,[6]]]],[95,[[14,[6]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[]],[[]],[[]],[[]],[[],23],[[[14,[6]]],[[23,[93]]]],[[],23],[[[14,[6]]],[[23,[93]]]],[[[14,[6]]],[[23,[95]]]],[[[14,[6]]],[[23,[95]]]],[[],23],[[],23],[[[14,[6]]],[[23,[93,86]]]],[[[14,[6]]],[[23,[95,86]]]],[[],23],[[],23],[[],23],[[],23],[[],87],[[],87],[[],87],[[],87],[[],88],[[],88],[[93,89]],[[95,89]],[[[57,[94]]],[[57,[93]]]],[[[57,[[30,[94]]]]],[[57,[[30,[93]]]]]],[[[57,[[30,[93]]]]],[[57,[[30,[94]]]]]],[[[57,[93]]],[[57,[94]]]],[[98,93,29,48,91,95],63],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[102,102],[103,103],[104,104],[105,105],[106,106],[[]],[[]],[[]],[[]],[[]],[[102,102],44],[[103,103],44],[[104,104],44],[[105,105],44],[[106,106],44],[45,[[23,[102,46]]]],[45,[[23,[103,46]]]],[45,[[23,[104,46]]]],[45,[[23,[105,46]]]],[45,[[23,[106,46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,[7,[6]]],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[48,45],[[23,[46]]]],[[],103],[[],105],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[55,[[23,[102]]]],[55,[[23,[103]]]],[55,[[23,[104]]]],[55,[[23,[105]]]],[55,[[23,[106]]]],[29],[29],[29],[29],[29],[103,[[57,[6]]]],[105,[[57,[6]]]],[[102,[0,[60,61]]]],[[103,[0,[60,61]]]],[[104,[0,[60,61]]]],[[105,[0,[60,61]]]],[[106,[0,[60,61]]]],[[102,102],63],[[103,103],63],[[104,104],63],[[105,105],63],[[106,106],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[102,65],66],[[103,65],66],[[104,65],66],[[105,65],66],[[106,65],66],[[]],[[]],[[]],[[]],[[]],[102,53],[[102,74]],[[103,74]],[104,53],[[104,74]],[[105,74]],[[106,74]],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],0,0,[102,48],[104,48],[106,48],[[102,102],[[30,[44]]]],[[103,103],[[30,[44]]]],[[104,104],[[30,[44]]]],[[105,105],[[30,[44]]]],[[106,106],[[30,[44]]]],[106,2],[[102,82],23],[[103,82],23],[[104,82],23],[[105,82],23],[[106,82],23],[[102,48]],[102,29],[103,29],[104,29],[105,29],[106,29],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[[7,[6]]],[[57,[6,85]]]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],87],[[],87],[[],87],[[],87],[[],87],[[],88],[[],88],[[],88],[[],88],[[],88],[[103,89]],[[105,89]],0,0,0,0,0,0],"c":[],"p":[[3,"SBucket"],[3,"PieceIndex"],[3,"PieceOffset"],[3,"SegmentIndex"],[3,"U256"],[15,"u8"],[15,"slice"],[3,"RawRecord"],[3,"Record"],[3,"RecordCommitment"],[3,"RecordWitness"],[3,"Piece"],[3,"PieceArray"],[15,"array"],[3,"FlatPieces"],[3,"RecordedHistorySegment"],[3,"Randomness"],[3,"PotKey"],[3,"PotSeed"],[3,"PotOutput"],[8,"FromByteSlice"],[4,"Error"],[4,"Result"],[3,"PublicKey"],[3,"RewardSignature"],[3,"SectorId"],[8,"Clone"],[3,"NonEmptyVec"],[15,"usize"],[4,"Option"],[8,"WrappingSub"],[8,"Ord"],[3,"HistorySize"],[3,"ArchivedHistorySegment"],[3,"PosSeed"],[3,"PosQualityBytes"],[3,"PosProof"],[3,"PotCheckpoints"],[4,"ArchivedBlockProgress"],[3,"LastArchivedBlock"],[4,"SegmentHeader"],[3,"Solution"],[3,"SectorSlotChallenge"],[4,"Ordering"],[8,"Input"],[3,"Error"],[8,"Decode"],[15,"u32"],[19,"MaybeUninit"],[3,"DecodeFinished"],[6,"SegmentCommitment"],[6,"SlotNumber"],[6,"Blake2b256Hash"],[15,"u16"],[8,"Deserializer"],[8,"Deserialize"],[3,"Vec"],[15,"char"],[8,"FromIterator"],[8,"Output"],[8,"Sized"],[8,"Encode"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"NonEmptyVecErr"],[15,"u64"],[3,"NonZeroU64"],[15,"u128"],[8,"AsRef"],[15,"str"],[8,"Hasher"],[8,"Into"],[8,"Iterator"],[3,"Box"],[6,"SectorIndex"],[8,"IndexedParallelIterator"],[8,"ExactSizeIterator"],[6,"Blake3Hash"],[8,"Serializer"],[8,"Serialize"],[6,"BlockNumber"],[3,"Global"],[3,"String"],[3,"TypeId"],[3,"Type"],[8,"FnOnce"],[3,"Blake3Checksummed"],[3,"Scalar"],[3,"FsFr"],[3,"Commitment"],[3,"FsG1"],[3,"Witness"],[3,"FsKZGSettings"],[3,"Polynomial"],[3,"Kzg"],[3,"FsPoly"],[3,"FsFFTSettings"],[3,"Arc"],[4,"BlockObject"],[3,"BlockObjectMapping"],[4,"PieceObject"],[3,"PieceObjectMapping"],[4,"GlobalObject"],[13,"V0"],[13,"V0"],[13,"V0"],[13,"V0"]]},\
"subspace_erasure_coding":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLL","n":["ErasureCoding","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","extend","extend_commitments","fmt","from","init","into","max_shards","new","recover","recover_poly","recover_source","to_owned","try_from","try_into","type_id"],"q":[[0,"subspace_erasure_coding"]],"d":["Erasure coding abstraction.","","","","","","","","Extend sources using erasure coding.","Extend commitments using erasure coding.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Max number of shards supported (both source and parity …","Create new erasure coding instance.","Recovery of missing shards from given shards (at least 1/2 …","Recovery of missing shards from given shards (at least 1/2 …","Recovery of source shards from given shards (at least 1/2 …","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1,1],[[]],[2],[2],[2],[[1,[4,[3]]],[[7,[[5,[3]],6]]]],[[1,[4,[8]]],[[7,[[5,[8]],6]]]],[[1,9],10],[[]],[[],2],[[]],[1,2],[11,[[7,[1,6]]]],[[1,[4,[[12,[3]]]]],[[7,[[5,[3]],6]]]],[[1,[4,[[12,[3]]]]],[[7,[13,6]]]],[[1,[4,[[12,[3]]]]],[[7,[14,6]]]],[[]],[[],7],[[],7],[[],15]],"c":[],"p":[[3,"ErasureCoding"],[15,"usize"],[3,"Scalar"],[15,"slice"],[3,"Vec"],[3,"String"],[4,"Result"],[3,"Commitment"],[3,"Formatter"],[6,"Result"],[3,"NonZeroUsize"],[4,"Option"],[3,"Polynomial"],[8,"ExactSizeIterator"],[3,"TypeId"]]},\
"subspace_farmer":{"doc":"<code>subspace-farmer</code> library implementation overview","t":"DCDCLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLALLLALALLLALLLLLLLLLLLLLLLLALLGIKKKKKKKKKKKDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFENNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNENDEEEDEEDNNNNNLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLMLLLALMALLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNDENDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDLLLLLLLLLLLLLLLLLLAAAFDLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLL","n":["Identity","NodeClient","NodeRpcClient","RpcClientError","acknowledge_archived_segment_header","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create","deref","deref","deref","deref_mut","deref_mut","drop","drop","entropy","farmer_app_info","file_size","fmt","from","from","init","init","into","into","jsonrpsee","last_segment_headers","new","node_client","open","open_or_create","piece","piece_cache","public_key","reward_signing","secret_key","segment_headers","sign_reward_hash","single_disk_farm","submit_reward_signature","submit_solution_response","subscribe_archived_segment_headers","subscribe_node_sync_status_change","subscribe_reward_signing","subscribe_slot_info","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unique_saturated_into","unique_saturated_into","utils","vzip","vzip","Error","NodeClient","acknowledge_archived_segment_header","farmer_app_info","last_segment_headers","piece","segment_headers","submit_reward_signature","submit_solution_response","subscribe_archived_segment_headers","subscribe_node_sync_status_change","subscribe_reward_signing","subscribe_slot_info","CacheWorker","PieceCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","get_piece","init","init","into","into","new","record","replace_backing_caches","run","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unique_saturated_into","unique_saturated_into","vzip","vzip","reward_signing","BackgroundTaskError","CacheCantBeOpened","CacheFileDoesNotExist","CantPreallocateMetadataFile","CantPreallocatePlotFile","Error","FailedToCreateThreadPool","FailedToDecodeMetadataHeader","FailedToDecodeMetadataHeader","FailedToDecodeSectorMetadata","FailedToDetermineFileSize","FailedToGetFarmerInfo","FailedToGetFarmerInfo","FailedToGetSegmentHeader","FailedToMapMetadata","FailedToReadBytes","FailedToSubmitSolutionsResponse","FailedToSubscribeArchivedSegments","FailedToSubscribeSlotInfo","FailedToWriteBytes","FarmInfoCantBeOpened","FarmInfoFileDoesNotExist","FarmTooLarge","Farming","FarmingError","Found","IdentityCantBeOpened","IdentityFileDoesNotExist","IdentityMismatch","InsufficientAllocatedSpace","InvalidPiecesInSector","Io","Io","Io","LowLevel","LowLevelProving","MetadataCantBeOpened","MetadataFileDoesNotExist","MetadataFileTooSmall","MissingArchivedSegmentHeader","NotFound","PieceCacheError","Plotting","PlottingError","PublicKeyMismatch","SingleDiskFarm","SingleDiskFarmError","SingleDiskFarmId","SingleDiskFarmInfo","SingleDiskFarmOptions","SingleDiskFarmScrubError","SingleDiskFarmSummary","SingleDiskSemaphore","Ulid","UnexpectedMetadataVersion","UnexpectedMetadataVersion","V0","WrongChain","acquire","allocated_space","allocated_space","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_percentage","clone","clone","clone","clone_into","clone_into","clone_into","cmp","collect_summary","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","directory","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","erasure_coding","farmer_app_info","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","genesis_hash","get_hash","hash","id","id","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","kzg","load_from","max_pieces_in_sector","new","new","new","new","node_client","on_sector_plotted","on_solution","partial_cmp","piece_cache","piece_cache","piece_getter","piece_reader","piece_reader","pieces_in_sector","plotted_sectors","plotted_sectors_count","provide","provide","provide","provide","provide","public_key","reward_address","run","scrub","serialize","serialize","source","source","source","source","store_to","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","error","error","error","error","error","error","error","segment_index","allocated_sectors","allocated_space","allocated_space","correct_chain","correct_public_key","id","id","id","initialized_with","max_sectors","max_space","max_supported","min_space","wrong_chain","wrong_public_key","allocated_space","genesis_hash","id","pieces_in_sector","public_key","error","error","error","error","error","error","error","file","file","file","file","file","file","file","file","file","file","file","file","identity","info","offset","offset","reserved_size","size","size","size","directory","directory","directory","error","info","CantPreallocateCacheFile","ChecksumMismatch","DiskPieceCache","DiskPieceCacheError","Io","Offset","OffsetOutsideOfRange","ZeroCapacity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","into","into","into","provide","source","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","max","provided","PieceReader","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","read_piece","to_owned","try_from","try_into","type_id","unique_saturated_into","vzip","farmer_piece_getter","piece_validator","readers_and_pieces","run_future_in_dedicated_thread","FarmerPieceGetter","borrow","borrow_mut","deref","deref_mut","drop","from","get_piece","init","into","new","try_from","try_into","type_id","unique_saturated_into","vzip","SegmentCommitmentPieceValidator","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","try_from","try_into","type_id","unique_saturated_into","validate_piece","vzip","ReadersAndPieces","add_sector","borrow","borrow_mut","contains_piece","delete_sector","deref","deref_mut","drop","fmt","from","init","into","new","piece_indices","read_piece","try_from","try_into","type_id","unique_saturated_into","vzip"],"q":[[0,"subspace_farmer"],[64,"subspace_farmer::node_client"],[77,"subspace_farmer::piece_cache"],[114,"subspace_farmer::reward_signing"],[115,"subspace_farmer::single_disk_farm"],[413,"subspace_farmer::single_disk_farm::FarmingError"],[417,"subspace_farmer::single_disk_farm::PlottingError"],[421,"subspace_farmer::single_disk_farm::SingleDiskFarmError"],[436,"subspace_farmer::single_disk_farm::SingleDiskFarmInfo"],[441,"subspace_farmer::single_disk_farm::SingleDiskFarmScrubError"],[468,"subspace_farmer::single_disk_farm::SingleDiskFarmSummary"],[473,"subspace_farmer::single_disk_farm::piece_cache"],[536,"subspace_farmer::single_disk_farm::piece_cache::DiskPieceCacheError"],[538,"subspace_farmer::single_disk_farm::piece_reader"],[557,"subspace_farmer::utils"],[561,"subspace_farmer::utils::farmer_piece_getter"],[577,"subspace_farmer::utils::piece_validator"],[593,"subspace_farmer::utils::readers_and_pieces"]],"d":["<code>Identity</code> struct is an abstraction of public &amp; secret key …","","<code>WsClient</code> wrapper.","","","","","","","","","","","Creates new identity, overrides identity that might …","","","","","","","","Returns entropy used to generate keypair.","","Size of the identity file on disk","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new instance of <code>NodeClient</code>.","","Opens the existing identity, returns <code>Ok(None)</code> if it doesn…","Opens the existing identity, or creates a new one.","","","Returns the public key of the identity.","","Returns the secret key of the identity.","","Sign reward hash.","","Submit a block signature","","","","","","","","","","","","","","","","","","","To become error type agnostic","Abstraction of the Node Client","Acknowledge segment header.","Get farmer app info","Get the last segment headers.","Get piece by index.","Get segment headers for the segments","Submit a block signature","Submit a slot solution","Subscribe to archived segment headers","Subscribe to node sync status change","Subscribe to block signing request","Subscribe to slot","Cache worker used to drive the cache","Piece cache that aggregates caches of multiple disks","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get piece from cache","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create new piece cache instance and corresponding worker.","","","Run the cache worker with provided piece getter","","","","","","","","","","","","","Errors that happen in background tasks","Cache can’t be opened","Cache file does not exist","Can’t preallocate metadata file, probably not enough …","Can’t preallocate plot file, probably not enough space …","Failed to open farm","Failed to create thread pool","Failed to decode metadata header","Failed to decode metadata header","Failed to decode sector metadata","Failed to determine file size","Failed to retrieve farmer info","Failed to retrieve farmer info","Failed to get segment header","Failed to create memory mapping for metadata","Failed to read bytes from file","Failed to submit solutions response","Failed to subscribe to archived segments","Failed to subscribe to slot info notifications","Failed to write bytes from file","Farm info can’t be opened","Farm info file does not exist","Farm is too large","Farming error","Errors that happen during farming","Farm was found and read successfully","Identity can’t be opened","Identity file does not exist","Public key in identity doesn’t match metadata","Allocated space is not enough for one sector","Invalid number pieces in sector","I/O error occurred","I/O error occurred","I/O error occurred","Low-level plotting error","Low-level proving error","Metadata can’t be opened","Metadata file does not exist","Metadata file too small","Missing archived segment header","Farm was not found","Piece cache error","Plotting error","Errors that happen during plotting","Identity public key doesn’t match public key in the disk …","Single disk farm abstraction is a container for everything …","Errors happening when trying to create/open single disk …","An identifier for single disk farm, can be used for in …","Important information about the contents of the …","Options used to open single disk farm","Errors happening during scrubbing","Summary of single disk farm for presentational purposes","Semaphore that limits disk access concurrency in strategic …","Farm ID","Unexpected metadata version","Unexpected metadata version","V0 of the info","Wrong chain (genesis hash)","Acquire access, will block current thread until previously …","How much space in bytes is allocated for this farm","How much space in bytes was allocated","","","","","","","","","","","","","","","","","","","","","","","Percentage of allocated space dedicated for caching …","","","","","","","","Collect summary of single disk farm for presentational …","","","","","","","","","","","","","","","","","","","","","","","","","Path to directory where farm is stored.","","","","","","","","","","","","","","","","","","Erasure coding instance to use.","Information necessary for farmer application","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","ID of this farm","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kzg instance to use.","Load <code>SingleDiskFarm</code> from path is supposed to be stored, …","How many pieces one sector is supposed to contain (max)","Create new single disk farm instance","Create new semaphore for limiting concurrency of the major …","Creates new ID","","RPC client connected to Subspace node","Subscribe to sector plotting notification","Subscribe to new solution notification","","","Get piece cache instance","Piece receiver implementation for plotting purposes.","","Get piece reader to read plotted pieces later","How many pieces does one sector contain.","Read information about sectors plotted so far","Number of sectors successfully plotted so far","","","","","","","Address where farming rewards should go","Run and wait for background threads to exit or return an …","Check the farm for corruption and repair errors (caused by …","","","","","","","Store <code>SingleDiskFarm</code> info to path so it can be loaded …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wipe everything that belongs to this single disk farm","Lower-level error","Lower-level error","Lower-level error","Lower-level error","Lower-level error","Lower-level error","Lower-level error","Segment index that was missing","","Current allocated space","","Hex-encoded genesis hash during farm creation","Public key used during farm creation","Farm ID","Farm ID","Farm ID","Number of pieces in sector farm is initialized with","","","Max supported pieces in sector","Minimal allocated space","Hex-encoded current genesis hash","Current public key","How much space in bytes is allocated for this farm","Genesis hash of the chain used for farm creation","ID of the farm","How many pieces does one sector contain.","Public key of identity used for farm creation","Low-level error","Low-level error","Low-level error","Low-level error","Low-level error","Low-level error","Low-level error","Affected file","Affected file","Affected file","Info file","Info file","Identity file","Identity file","Metadata file","Metadata file","Metadata file","Cache file","Cache file","Identity public key","Disk farm info public key","Offset in the file","Offset in the file","Reserved size","Number of bytes to read","Number of bytes to read","File size","Path to directory where farm is stored.","Path to directory where farm is stored.","Path to directory where farm is stored.","Error itself","Farm info","Can’t preallocate cache file, probably not enough space …","Checksum mismatch","Piece cache stored on one disk","Disk piece cache open error","I/O error occurred","Offset wrapper for pieces in <code>DiskPieceCache</code>","Offset outsize of range","Cache size has zero capacity, this is not supported","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Max offset","Provided offset","Wrapper data structure that can be used to read pieces …","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Read piece from sector by offset, <code>None</code> means input …","","","","","","","","","","Runs future on a dedicated thread with the specified name, …","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Wrapper data structure for pieces plotted under multiple …","","","","Check if piece is known and can be retrieved","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Read piece from one of the associated readers.","","","","",""],"i":[0,0,0,0,1,6,1,6,1,6,1,6,1,6,6,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,0,1,1,0,6,6,1,0,6,0,6,1,6,0,1,1,1,1,1,1,6,1,6,1,6,1,6,1,6,1,0,6,1,0,0,30,30,30,30,30,30,30,30,30,30,30,0,0,34,27,34,27,27,27,34,27,34,27,34,27,27,34,27,27,34,27,34,27,27,27,27,34,27,34,27,34,27,34,27,34,27,34,27,0,0,50,50,49,49,43,47,49,50,49,50,47,48,48,47,50,47,48,47,50,50,50,49,51,0,43,50,50,49,49,49,47,48,49,48,47,50,50,50,48,43,49,51,0,50,0,0,0,0,0,0,0,0,40,49,50,39,49,37,39,65,43,65,45,47,48,37,40,39,49,50,51,43,65,45,47,48,37,40,39,49,50,51,65,37,40,39,37,40,39,40,45,43,65,45,47,48,37,40,39,49,50,51,43,65,45,47,48,37,40,39,49,50,51,40,39,65,43,65,45,45,47,48,37,40,39,49,50,51,40,40,40,40,40,65,65,47,47,48,48,37,40,40,39,49,49,50,50,51,51,43,65,45,47,47,47,47,48,48,48,37,40,40,39,49,49,49,50,51,51,51,39,40,40,45,39,43,65,45,47,48,37,40,39,49,50,51,43,65,45,47,48,37,40,39,49,50,51,65,39,65,45,37,40,39,65,45,45,40,0,45,65,0,45,39,45,45,47,48,49,50,51,39,65,45,45,40,39,47,48,49,51,39,37,40,39,47,48,40,49,50,51,43,65,45,47,48,37,40,39,49,50,51,43,65,45,47,48,37,40,39,49,50,51,43,65,45,47,48,37,40,39,49,50,51,43,65,45,47,48,37,40,39,49,50,51,43,65,45,47,48,37,40,39,49,50,51,45,94,95,96,97,98,99,100,101,102,103,102,104,105,104,105,106,106,102,102,106,103,104,105,107,107,107,107,107,108,109,110,111,112,113,114,108,109,110,115,111,116,112,117,113,118,119,114,120,120,109,110,118,109,110,118,121,122,123,123,121,57,57,0,0,57,0,57,57,57,78,33,57,78,33,78,33,78,33,57,78,33,57,78,33,57,78,33,57,57,78,78,33,57,57,78,33,57,78,33,57,78,33,57,57,78,33,57,78,57,78,33,57,78,33,57,78,33,57,78,33,57,78,33,124,124,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,0,0,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87],"f":[0,0,0,0,[[1,2],[[5,[[4,[3]]]]]],[[]],[[]],[[]],[[]],[6,6],[1,1],[[]],[[]],[[[8,[7]]],[[9,[6,0]]]],[10],[6],[10],[10],[10],[10],[10],[6,[[12,[11]]]],[1,[[5,[[4,[3]]]]]],[[],10],[[1,13],14],[[]],[[]],[[],10],[[],10],[[]],[[]],0,[[1,15],[[5,[[4,[3]]]]]],[16,[[9,[1,17]]]],0,[[[8,[7]]],[[9,[[18,[6]],0]]]],[[[8,[7]]],[[9,[6,0]]]],[[1,19],[[5,[[4,[3]]]]]],0,[6,20],0,[6,21],[[1,[22,[2]]],[[5,[[4,[3]]]]]],[[6,[12,[11]]],23],0,[[1,24],[[5,[[4,[3]]]]]],[[1,25],[[5,[[4,[3]]]]]],[1,[[5,[[4,[3]]]]]],[1,[[5,[[4,[3]]]]]],[1,[[5,[[4,[3]]]]]],[1,[[5,[[4,[3]]]]]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],26],[[],26],[[]],[[]],0,[[]],[[]],0,0,[2,[[5,[[4,[3]]]]]],[[],[[5,[[4,[3]]]]]],[15,[[5,[[4,[3]]]]]],[19,[[5,[[4,[3]]]]]],[[[22,[2]]],[[5,[[4,[3]]]]]],[24,[[5,[[4,[3]]]]]],[25,[[5,[[4,[3]]]]]],[[],[[5,[[4,[3]]]]]],[[],[[5,[[4,[3]]]]]],[[],[[5,[[4,[3]]]]]],[[],[[5,[[4,[3]]]]]],0,0,[[]],[[]],[[]],[[]],[27,27],[[]],[10],[10],[10],[10],[10],[10],[[27,13],14],[[]],[[]],[[27,28],[[18,[29]]]],[[],10],[[],10],[[]],[[]],[[30,31]],[[27,28],[[18,[32]]]],[[27,[22,[33]]]],[[[34,[30]],35]],[[]],[[],9],[[],9],[[],9],[[],9],[[],26],[[],26],[[]],[[]],[[]],[[]],[[30,6],[[9,[3,[4,[36]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[37,38],[39,15],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[37,37],[40,40],[39,39],[[]],[[]],[[]],[[40,40],41],[42,43],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[44,[[9,[40]]]],[44,[[9,[39]]]],0,[10],[10],[45],[10],[10],[10],[10],[10],[10],[10],[10],[10],[[40,40],46],[[],46],[[],46],[[],46],[[],46],0,0,[[47,13],14],[[47,13],14],[[48,13],14],[[48,13],14],[[37,13],14],[[40,13],14],[[40,13],14],[[39,13],14],[[49,13],14],[[49,13],14],[[50,13],14],[[50,13],14],[[51,13],14],[[51,13],14],[[]],[[]],[[]],[52,47],[[]],[53,47],[54,47],[[]],[53,48],[55,48],[[]],[56,40],[[]],[[]],[53,49],[[]],[57,49],[[]],[[]],[48,51],[47,51],[39,[[58,[11]]]],[[[0,[59,60]],61],15],[[40,62]],[45,40],[39,40],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[7,[[63,[[18,[39]]]]]],0,[[[65,[30,[0,[35,64]]]],10],[[9,[45,49]]]],[66,37],[[],40],[[40,[58,[11]],67,68,15],39],0,[[45,[70,[69]]],71],[[45,[70,[69]]],71],[[40,40],[[18,[41]]]],0,[45,33],0,0,[45,72],[39,68],[45,73],[45,10],[74],[74],[74],[74],[74],[39,67],0,[45,75],[7,[[9,[50]]]],[[40,76],9],[[39,76],9],[47,[[18,[36]]]],[48,[[18,[36]]]],[49,[[18,[36]]]],[51,[[18,[36]]]],[[39,7],63],[[]],[[]],[[]],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,63],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[78,78],[33,33],[[]],[[]],[10],[10],[10],[10],[10],[10],[10],[10],[10],[[57,13],14],[[57,13],14],[[78,13],14],[[78,13],14],[[33,13],14],[[]],[53,57],[[]],[[]],[[],10],[[],10],[[],10],[[]],[[]],[[]],[74],[57,[[18,[36]]]],[[]],[[]],[[],77],[[],77],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[72,72],[[]],[10],[10],[10],[[72,13],14],[[]],[[],10],[[]],[[72,79,80],[[18,[29]]]],[[]],[[],9],[[],9],[[],26],[[]],[[]],0,0,0,[[[0,[3,81,64]],77],[[63,[[0,[3,64]]]]]],0,[[]],[[]],[10],[10],[10],[[]],[[[83,[[0,[82,64]],30]],19,84],[[5,[[4,[3]]]]]],[[],10],[[]],[[85,86,27,[70,[[88,[[18,[87]]]]]]],83],[[],9],[[],9],[[],26],[[]],[[]],0,[[]],[[]],[10],[10],[10],[[]],[[],10],[[]],[[85,89,[88,[[91,[2,90]]]]],92],[[],9],[[],9],[[],26],[[]],[[[92,[30]],31,19,29],[[5,[[4,[3]]]]]],[[]],0,[[87,11,93]],[[]],[[]],[[87,19],46],[[87,11,93]],[10],[10],[10],[[87,13],14],[[]],[[],10],[[]],[[[22,[72]]],87],[87,73],[[87,19],[[18,[3]]]],[[],9],[[],9],[[],26],[[]],[[]]],"c":[],"p":[[3,"NodeRpcClient"],[3,"SegmentIndex"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Identity"],[3,"Path"],[8,"AsRef"],[4,"Result"],[15,"usize"],[15,"u8"],[15,"slice"],[3,"Formatter"],[6,"Result"],[15,"u64"],[15,"str"],[4,"Error"],[4,"Option"],[3,"PieceIndex"],[3,"PublicKey"],[3,"SecretKey"],[3,"Vec"],[3,"Signature"],[3,"RewardSignatureResponse"],[3,"SolutionResponse"],[3,"TypeId"],[3,"PieceCache"],[3,"Key"],[3,"Piece"],[8,"NodeClient"],[3,"PeerId"],[3,"ProviderRecord"],[3,"DiskPieceCache"],[3,"CacheWorker"],[8,"PieceGetter"],[8,"Error"],[3,"SingleDiskSemaphore"],[3,"SemaphoreGuard"],[4,"SingleDiskFarmInfo"],[4,"SingleDiskFarmId"],[4,"Ordering"],[3,"PathBuf"],[4,"SingleDiskFarmSummary"],[8,"Deserializer"],[3,"SingleDiskFarm"],[15,"bool"],[4,"FarmingError"],[4,"PlottingError"],[4,"SingleDiskFarmError"],[4,"SingleDiskFarmScrubError"],[4,"BackgroundTaskError"],[3,"ThreadPoolBuildError"],[3,"Error"],[4,"ProvingError"],[4,"PlottingError"],[3,"Ulid"],[4,"DiskPieceCacheError"],[15,"array"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[8,"Hasher"],[6,"Result"],[8,"Send"],[3,"SingleDiskFarmOptions"],[3,"NonZeroU16"],[3,"PublicKey"],[15,"u16"],[8,"Fn"],[3,"Arc"],[3,"HandlerId"],[3,"PieceReader"],[8,"Iterator"],[3,"Demand"],[6,"Result"],[8,"Serializer"],[3,"String"],[3,"Offset"],[6,"SectorIndex"],[3,"PieceOffset"],[8,"Unpin"],[8,"PieceValidator"],[3,"FarmerPieceGetter"],[4,"PieceGetterRetryPolicy"],[3,"Node"],[3,"PieceProvider"],[3,"ReadersAndPieces"],[6,"Mutex"],[3,"Kzg"],[6,"SegmentCommitment"],[3,"LruCache"],[3,"SegmentCommitmentPieceValidator"],[3,"PlottedSector"],[13,"FailedToSubscribeSlotInfo"],[13,"FailedToGetFarmerInfo"],[13,"FailedToMapMetadata"],[13,"FailedToSubmitSolutionsResponse"],[13,"FailedToGetFarmerInfo"],[13,"FailedToGetSegmentHeader"],[13,"FailedToSubscribeArchivedSegments"],[13,"MissingArchivedSegmentHeader"],[13,"FarmTooLarge"],[13,"InsufficientAllocatedSpace"],[13,"WrongChain"],[13,"IdentityMismatch"],[13,"InvalidPiecesInSector"],[13,"V0"],[13,"FailedToDetermineFileSize"],[13,"FailedToReadBytes"],[13,"FailedToWriteBytes"],[13,"FarmInfoCantBeOpened"],[13,"IdentityCantBeOpened"],[13,"MetadataCantBeOpened"],[13,"CacheCantBeOpened"],[13,"FarmInfoFileDoesNotExist"],[13,"IdentityFileDoesNotExist"],[13,"MetadataFileDoesNotExist"],[13,"MetadataFileTooSmall"],[13,"CacheFileDoesNotExist"],[13,"PublicKeyMismatch"],[13,"Found"],[13,"NotFound"],[13,"Error"],[13,"OffsetOutsideOfRange"]]},\
"subspace_farmer_components":{"doc":"Components of the reference implementation of Subspace …","t":"DALLLLLLLLALLMLLMMAAAMMALLLLLLLFIKKKKKNNNNNIENNDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLMFLMMMLLLLLLLLLLLLLLLLLLMMMMMMMMNNNNNENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMNNNNNDENNLLLLLLMLLLLLLLLLLLLLLLLLFFFFMLLLLLLLLLLLLLMMMMMMMMMMMMNDNNNNDEEEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMM","n":["FarmerProtocolInfo","auditing","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","file_ext","fmt","from","history_size","init","into","max_pieces_in_sector","min_sector_lifetime","plotting","proving","reading","recent_history_fraction","recent_segments","sector","serialize","to_owned","try_from","try_into","type_id","unique_saturated_into","vzip","audit_sector","FileExt","advise_random_access","advise_sequential_access","preallocate","read_exact_at","write_all_at","BadSectorMetadataOutputSize","BadSectorOutputSize","FailedToRetrievePiece","InvalidErasureCodingInstance","Limited","PieceGetter","PieceGetterRetryPolicy","PieceNotFound","PieceRecoveryFailed","PlottedSector","PlottingError","Unlimited","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","get_piece","init","init","init","into","into","into","piece_indexes","plot_sector","provide","sector_id","sector_index","sector_metadata","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","error","expected","expected","piece_index","piece_index","piece_index","provided","provided","FailedToCreateChunkWitness","FailedToCreatePolynomialForRecord","FailedToDecodeMetadataForRecord","FailedToDecodeSectorContentsMap","InvalidErasureCodingInstance","ProvingError","RecordReadingError","SolutionCandidates","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","from","init","init","into","into","into_iter","is_empty","len","provide","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unique_saturated_into","unique_saturated_into","vzip","vzip","chunk_offset","error","error","error","piece_offset","piece_offset","piece_offset","ChecksumMismatch","FailedToDecodeSectorContentsMap","FailedToErasureDecodeRecord","FailedToReadChunk","InvalidChunk","PlotRecord","ReadingError","WrongRecordSizeAfterDecoding","WrongSectorSize","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","commitment","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","init","init","into","into","provide","read_piece","read_sector_record_chunks","recover_extended_record_chunks","recover_source_record_chunks","scalars","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unique_saturated_into","unique_saturated_into","vzip","vzip","witness","actual","actual","chunk_location","chunk_location","encoded_chunk_used","error","error","expected","expected","piece_offset","s_bucket","ChecksumMismatch","EncodedChunksUsed","InvalidBytesLength","InvalidBytesLength","InvalidEncodedRecordChunks","SBucketOutOfRange","SectorContentsMap","SectorContentsMapEncodeIntoError","SectorContentsMapFromBytesError","SectorContentsMapIterationError","SectorMetadata","SectorMetadataChecksummed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_into","encode_to","encode_to","encoded_size","encoded_size","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","history_size","init","init","init","init","init","init","init","into","into","into","into","into","into","into","iter","iter_mut","iter_record_bitfields","iter_record_bitfields_mut","iter_record_chunk_to_plot","iter_s_bucket_encoded_record_chunks_used","iter_s_bucket_records","new","num_encoded_record_chunks","par_iter_record_chunk_to_plot","pieces_in_sector","provide","provide","provide","s_bucket_offsets","s_bucket_sizes","s_bucket_sizes","sector_index","sector_record_chunks_size","sector_record_metadata_size","sector_size","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","expected","actual","actual","expected","max","max","provided"],"q":[[0,"subspace_farmer_components"],[31,"subspace_farmer_components::auditing"],[32,"subspace_farmer_components::file_ext"],[38,"subspace_farmer_components::plotting"],[110,"subspace_farmer_components::plotting::PlottingError"],[118,"subspace_farmer_components::proving"],[166,"subspace_farmer_components::proving::ProvingError"],[173,"subspace_farmer_components::reading"],[225,"subspace_farmer_components::reading::ReadingError"],[236,"subspace_farmer_components::sector"],[421,"subspace_farmer_components::sector::SectorContentsMapEncodeIntoError"],[423,"subspace_farmer_components::sector::SectorContentsMapFromBytesError"],[427,"subspace_farmer_components::sector::SectorContentsMapIterationError"]],"d":["Information about the protocol necessary for farmer …","","","","","","","","","","File extension trait","","Returns the argument unchanged.","Size of the blockchain history","","Calls <code>U::from(self)</code>.","How many pieces one sector is supposed to contain (max)","Minimum lifetime of a plotted sector, measured in archived …","","","","Fraction of pieces from the “recent history” (…","Number of latest archived segments that are considered “…","","","","","","","","","Audit a single sector and generate a stream of solutions, …","Extension convenience trait that allows pre-allocating …","Advise OS/file system that file will use random access and …","Advise OS/file system that file will use sequential access …","Make sure file has specified number of bytes allocated for …","Read exact number of bytes at a specific offset","Write all provided bytes at a specific offset","Bad sector metadata output size","Bad sector output size","Failed to retrieve piece","Invalid erasure coding instance","Retry N times (including zero)","Duplicate trait for the …","Defines retry policy on error during piece acquiring.","Piece not found, can’t create sector, this should never …","Can’t recover missing piece","Information about sector that was plotted","Plotting status","No restrictions on retries","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indexes of pieces that were plotted","Plot a single sector, where <code>sector</code> and <code>sector_metadata</code> …","","Sector ID","Sector index","Sector metadata","","","","","","","","","","","","","","","","","","","Lower-level error","Expected size","Expected size","Piece index","Piece index","Piece index","Actual size","Actual size","Failed to create chunk witness","Failed to create polynomial for record","Failed to decode metadata for record","Failed to decode sector contents map","Invalid erasure coding instance","Errors that happen during proving","Record reading error","Container for solutions","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if no candidates inside","Total number of candidates","","","","","","","","","","","","","","","Chunk index","Lower-level error","Lower-level error","Lower-level error","Piece offset","Piece offset","Piece offset","Checksum mismatch","Failed to decode sector contents map","Failed to erasure-decode record","Failed to read chunk.","Invalid chunk, possible disk corruption","Record contained in the plot","Errors that happen during reading","Wrong record size after decoding","Wrong sector size","","","","","","","Record commitment","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Read piece from sector","Read sector record chunks, only plotted s-buckets are …","Given sector record chunks recover extended record chunks …","Given sector record chunks recover source record chunks in …","Record scalars","","","","","","","","","","","","","","Record witness","Actual size in bytes","Actual size in bytes","Chunk location","Chunk location","Indicates whether chunk was encoded","Lower-level error","Lower-level error","Expected size in bytes","Expected size in bytes","Piece offset","S-bucket","Checksum mismatch","Wrapper data structure that allows to iterate mutably over …","Invalid bytes length","Invalid bytes length","Invalid number of encoded record chunks","S-bucket provided is out of range","Abstraction on top of bitfields that allow making sense of …","Error happening when trying to encode <code>SectorContentsMap</code> …","Error happening when trying to create <code>SectorContentsMap</code> …","Error happening when trying to create <code>SectorContentsMap</code> …","Metadata of the plotted sector","Same as <code>SectorMetadata</code>, but with checksums verified during …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encode internal contents into <code>output</code>","","","Size of encoded checksummed sector metadata.","Size of sector contents map when encoded and stored in the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Reconstruct sector contents map from bytes.","Size of the blockchain history at time of sector creation","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Produces an iterator over encoded chunks bitfields.","Produces a mutable iterator over encoded chunks bitfields.","Iterate over individual record bitfields","Iterate mutably over individual record bitfields","Creates an iterator of …","Iterate over chunks of s-bucket indicating if encoded …","Creates an iterator of <code>(piece_offset, encoded_chunk_used)</code>, …","Create new sector contents map initialized with zeroes to …","Number of encoded chunks in each record","Creates an iterator of …","Number of pieces stored in this sector","","","","Returns offsets of each s-bucket relatively to the …","Returns sizes of each s-bucket","S-bucket sizes in a sector","Sector index","Size of the part of the plot containing record chunks …","Size of the part of the plot containing record metadata.","Exact sector plot size (sector contents map, record …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Actual length","Expected length","Actual length","Actual number of encoded record chunks","Expected length","Max supported","Max s-bucket","Provided s-bucket"],"i":[0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,1,1,0,0,64,64,64,64,64,23,23,23,23,20,0,0,23,23,0,0,20,20,21,23,20,21,23,20,21,20,21,20,20,21,23,20,21,23,20,21,23,20,20,20,21,23,23,20,21,23,28,20,21,23,20,21,23,21,0,23,21,21,21,20,21,23,20,21,23,20,21,23,20,21,23,20,21,23,20,21,23,65,66,67,68,69,65,66,67,34,34,34,34,34,0,34,0,34,16,34,16,16,16,34,16,34,16,34,16,34,34,16,34,34,34,16,34,16,34,16,16,16,16,34,34,16,34,34,16,34,16,34,16,34,16,34,16,70,71,72,70,71,72,70,35,35,35,35,35,0,0,35,35,35,40,35,40,40,40,40,35,40,35,40,35,40,35,35,40,35,35,40,35,40,35,40,35,0,0,0,0,40,35,40,35,35,40,35,40,35,40,35,40,35,40,40,73,74,75,76,76,76,77,73,74,77,76,36,0,36,50,36,51,0,0,0,0,0,0,54,49,15,36,50,51,46,54,49,15,36,50,51,46,49,15,36,50,51,46,49,15,36,50,51,46,49,15,49,15,49,15,49,15,54,49,15,15,36,50,51,46,54,49,15,15,36,50,51,46,54,54,49,15,36,50,51,46,15,46,49,15,15,46,36,50,51,36,50,51,49,15,36,36,50,50,51,51,46,54,49,15,15,36,50,51,46,46,49,54,49,15,36,50,51,46,54,49,15,36,50,51,46,54,54,46,46,46,46,46,46,46,46,49,36,50,51,49,46,49,49,0,0,0,49,15,49,15,49,15,36,50,51,46,36,50,51,54,49,15,36,50,51,46,54,49,15,36,50,51,46,54,49,15,36,50,51,46,54,49,15,36,50,51,46,15,54,49,15,36,50,51,46,78,78,79,80,79,80,81,81],"f":[0,0,[[]],[[]],[1,1],[[]],[2],[2],[3,[[4,[1]]]],[2],0,[[1,5],6],[[]],0,[[],2],[[]],0,0,0,0,0,0,0,0,[[1,7],4],[[]],[[],4],[[],4],[[],8],[[]],[[]],[[9,10,11,12,[14,[13]],15],[[17,[16]]]],0,[[],18],[[],18],[19,18],[[[14,[13]],19],18],[[[14,[13]],19],18],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[21,21],[[]],[[]],[[],20],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[20,20],22],[[],22],[[20,5],6],[[21,5],6],[[23,5],6],[[23,5],6],[[]],[[]],[[]],[[24,20],[[27,[[26,[25]]]]]],[[],2],[[],2],[[],2],[[]],[[]],[[]],0,[[9,10,28,20,1,29,30,31,[14,[13]],[14,[13]]],[[4,[21,23]]]],[32],0,0,0,[[]],[[]],[[],33],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[16,16],[[]],[2],[2],[2],[2],[2],[2],[[34,5],6],[[34,5],6],[[16,5],6],[[]],[35,34],[36,34],[[]],[[],2],[[],2],[[]],[[]],[[16,37,29,30],[[4,[38,34]]]],[16,22],[16,2],[32],[34,[[17,[39]]]],[[]],[[],33],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[40,40],[[]],0,[2],[2],[2],[2],[2],[2],[[35,5],6],[[35,5],6],[[40,5],6],[36,35],[[]],[[]],[[],2],[[],2],[[]],[[]],[32],[[41,42,15,[14,[13]],30],[[4,[43,35]]]],[[41,31,[45,[44]],46,47,[14,[13]]],[[4,[[26,[[45,[[17,[48]]]]]],35]]]],[[[45,[[17,[48]]]],41,30],[[4,[[26,[[45,[48]]]],35]]]],[[[45,[[17,[48]]]],41,30],[[4,[38,35]]]],0,[35,[[17,[39]]]],[[]],[[],33],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,49],[15,15],[36,36],[50,50],[51,51],[46,46],[[]],[[]],[[]],[[]],[[]],[[]],[52,[[4,[49,53]]]],[52,[[4,[15,53]]]],[[[14,[13]]],[[4,[53]]]],[[[14,[13]]],[[4,[53]]]],[[44,[14,[13]]],[[4,[53]]]],[[44,[14,[13]]],[[4,[53]]]],[[44,52],[[4,[53]]]],[[44,52],[[4,[53]]]],[2],[2],[15],[2],[2],[2],[2],[2],[2],[2],[2],[15],[2],[2],[2],[2],[2],[54],[2],[2],[2],[2],[2],[2],[15,[[55,[13]]]],[[46,[14,[13]]],[[4,[50]]]],[[49,[0,[56,57]]]],[[15,[0,[56,57]]]],[[],2],[31,2],[[36,36],22],[[50,50],22],[[51,51],22],[[],22],[[],22],[[],22],[[49,5],6],[[15,5],6],[[36,5],6],[[36,5],6],[[50,5],6],[[50,5],6],[[51,5],6],[[51,5],6],[[46,5],6],[[]],[[]],[49,15],[[]],[[]],[[]],[[]],[[]],[[[14,[13]],31],[[4,[46,36]]]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,38],[54,38],[46,[[14,[[58,[[45,[13]]]]]]]],[46,38],[[46,41],59],[[46,60],[[4,[59,51]]]],[[46,60],[[4,[59,51]]]],[31,46],[46,[[14,[60]]]],[[46,41],61],0,[32],[32],[32],[49,[[26,[[45,[44]]]]]],[46,[[26,[[45,[31]]]]]],0,0,[31,2],[31,2],[31,2],[49,2],[15,2],[[[14,[13]]],[[55,[13,62]]]],[[[14,[13]]],[[55,[13,62]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[15,63]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0],"c":[],"p":[[3,"FarmerProtocolInfo"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[3,"Formatter"],[6,"Result"],[8,"Serializer"],[3,"TypeId"],[3,"PublicKey"],[6,"SectorIndex"],[6,"Blake2b256Hash"],[6,"SolutionRange"],[15,"u8"],[15,"slice"],[3,"SectorMetadataChecksummed"],[3,"SolutionCandidates"],[4,"Option"],[6,"Result"],[15,"u64"],[4,"PieceGetterRetryPolicy"],[3,"PlottedSector"],[15,"bool"],[4,"PlottingError"],[3,"PieceIndex"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"PieceGetter"],[3,"Kzg"],[3,"ErasureCoding"],[15,"u16"],[3,"Demand"],[3,"String"],[4,"ProvingError"],[4,"ReadingError"],[4,"SectorContentsMapFromBytesError"],[8,"Copy"],[8,"ExactSizeIterator"],[8,"Error"],[3,"PlotRecord"],[3,"PieceOffset"],[3,"SectorId"],[3,"Piece"],[15,"u32"],[15,"array"],[3,"SectorContentsMap"],[8,"Table"],[3,"Scalar"],[3,"SectorMetadata"],[4,"SectorContentsMapEncodeIntoError"],[4,"SectorContentsMapIterationError"],[8,"Input"],[3,"Error"],[3,"EncodedChunksUsed"],[3,"Vec"],[8,"Output"],[8,"Sized"],[3,"BitArray"],[8,"Iterator"],[3,"SBucket"],[8,"IndexedParallelIterator"],[3,"Global"],[8,"FnOnce"],[8,"FileExt"],[13,"FailedToRetrievePiece"],[13,"BadSectorOutputSize"],[13,"BadSectorMetadataOutputSize"],[13,"PieceNotFound"],[13,"PieceRecoveryFailed"],[13,"FailedToCreateChunkWitness"],[13,"FailedToCreatePolynomialForRecord"],[13,"FailedToDecodeMetadataForRecord"],[13,"WrongSectorSize"],[13,"WrongRecordSizeAfterDecoding"],[13,"FailedToReadChunk"],[13,"InvalidChunk"],[13,"FailedToErasureDecodeRecord"],[13,"InvalidBytesLength"],[13,"InvalidBytesLength"],[13,"InvalidEncodedRecordChunks"],[13,"SBucketOutOfRange"]]},\
"subspace_fraud_proof":{"doc":"Subspace fraud proof","t":"DILLLLLLLLLLLLLLLLLAALLLLLLLFALKLLDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLDILLLLLLLLLLLLLLLLLLLLLLLLLKLLIDLLLLLLLLLLLLLLLLLLKLKLLLLLLLKLKLL","n":["ProofVerifier","VerifyFraudProof","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","invalid_state_transition_proof","invalid_transaction_proof","new","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","validate_fraud_proof_in_tx_pool","verifier_api","verify","verify_fraud_proof","verify_fraud_proof","vzip","ExecutionProver","InvalidStateTransitionProofVerifier","VerifyInvalidStateTransitionProof","__clone_box","borrow","borrow","borrow_mut","borrow_mut","check_execution_proof","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_mut","into_mut","into_ref","into_ref","new","new","prove_execution","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","verify","verify_invalid_state_transition_proof","verify_invalid_state_transition_proof","vzip","vzip","InvalidTransactionProofVerifier","VerifyInvalidTransactionProof","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","new","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","verify","verify_invalid_transaction_proof","verify_invalid_transaction_proof","vzip","VerifierApi","VerifierClient","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","new","primary_hash","primary_hash","state_root","state_root","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","verify_post_state_root","verify_post_state_root","verify_pre_state_root","verify_pre_state_root","vzip"],"q":[[0,"subspace_fraud_proof"],[34,"subspace_fraud_proof::invalid_state_transition_proof"],[88,"subspace_fraud_proof::invalid_transaction_proof"],[118,"subspace_fraud_proof::verifier_api"]],"d":["Fraud proof verifier.","Verify fraud proof.","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","Invalid state transition proof","Invalid transaction proof.","Constructs a new instance of <code>ProofVerifier</code>.","","","","","","","Verifies the fraud proof extracted from extrinsic in the …","This module derives an trait <code>VerifierApi</code> from the runtime …","Verifies the fraud proof.","Verifies fraud proof.","","","Creates storage proof for verifying an execution without …","Invalid state transition proof verifier.","Verifies invalid state transition proof.","","","","","","Runs the execution using the partial state constructed …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Constructs a new instance of <code>ExecutionProver</code>.","Constructs a new instance of …","Returns a storage proof which can be used to reconstruct a …","","","","","","","","","","","","Verifies the invalid state transition proof.","Returns <code>Ok(())</code> if given <code>invalid_state_transition_proof</code> is …","","","","Invalid transaction proof verifier.","Verifies invalid transaction proof.","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","Constructs a new instance of …","","","","","","","Verifies the invalid transaction proof.","Returns <code>Ok(())</code> if given <code>invalid_transaction_proof</code> is …","","","This trait abstracts convenient APIs for the fraud proof …","A wrapper of primary chain client/system domain client in …","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","Constructs a new instance of <code>VerifierClient</code>.","Returns the hash of primary block at height …","","Returns the state root of specified domain block.","","","","","","","","Verifies whether <code>post_state_root</code> declared in the proof is …","","Verifies whether <code>pre_state_root</code> declared in the proof is …","",""],"i":[0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,2,2,2,0,0,2,11,2,2,0,0,0,27,18,27,18,27,18,27,27,18,27,18,27,18,27,18,27,18,18,27,27,18,18,27,27,18,27,18,27,18,27,18,27,18,27,18,27,18,27,18,27,18,27,18,27,18,27,27,6,27,18,27,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,4,35,35,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,30,38,30,38,38,38,38,38,38,38,30,38,30,38,38],"f":[0,0,[1],[[]],[[]],[2,2],[[]],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[],3],[[]],[[]],[[]],0,0,[[[5,[4]],[5,[6]]],[[2,[7,4,6]]]],[[]],[[],8],[[],8],[[],9],[[]],[[]],[[10,[0,[[11,[7]],12]],[14,[[13,[7]]]]],[[8,[15]]]],0,[[[2,[7,4,6]],[14,[[13,[7]]]]],[[8,[15]]]],[[[14,[13]]],[[8,[15]]]],[[[2,[7,4,6]],[14,[[13,[7]]]]],[[8,[15]]]],[[]],0,0,0,[1],[[]],[[]],[[]],[[]],[[[18,[7,[16,[7]],17]],19,[21,[20]],22,23],[[25,[[24,[20]]]]]],[[[27,[26,26]]],[[27,[26,26]]]],[[]],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[[16,[7]]]],[5,[17]]],[[18,[7,[16,[7]],17]]]],[[[5,[[0,[[28,[7]],12,29]]]],[0,[17,26]],30],[[27,[7,[0,[[28,[7]],12,29]],[0,[17,26]],[0,[31,32]],30]]]],[[[18,[7,[16,[7]],17]],19,[21,[20]],33],[[25,[23]]]],[[]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[27,[7,[0,[[28,[7]],12,29]],[0,[17,26]],[0,[31,32]],30]],34],[[8,[15]]]],[34,[[8,[15]]]],[[[27,[7,[0,[[28,[7]],12,29]],[0,[17,26]],[0,[31,32]],30]],34],[[8,[15]]]],[[]],[[]],0,0,[1],[[]],[[]],[[[35,[26]]],[[35,[26]]]],[[]],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[],3],[[]],[[]],[[]],[[[5,[[0,[[36,[7]],[28,[7]],12,29]]]],[5,[17]],30],[[35,[7,[0,[[36,[7]],[28,[7]],12,29]],[0,[31,32]],17,30]]]],[[]],[[],8],[[],8],[[],9],[[]],[[]],[[[35,[7,[0,[[36,[7]],[28,[7]],12,29]],[0,[31,32]],17,30]],37],[[8,[15]]]],[37,[[8,[15]]]],[[[35,[7,[0,[[36,[7]],[28,[7]],12,29]],[0,[31,32]],17,30]],37],[[8,[15]]]],[[]],0,0,[1],[[]],[[]],[38,38],[[]],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[],3],[[]],[[]],[[]],[5,38],[[39,40],[[8,[22,15]]]],[[[38,[[0,[[28,[7]],[36,[7]]]],7]],39,40],[[8,[22,15]]]],[[39,40,22],[[8,[41,15]]]],[[[38,[[0,[[28,[7]],[36,[7]]]],7]],39,40,22],[[8,[41,15]]]],[[]],[[],8],[[],8],[[],9],[[]],[[]],[34,[[8,[15]]]],[[[38,[[0,[[28,[7]],[36,[7]]]],7]],34],[[8,[15]]]],[34,[[8,[15]]]],[[[38,[[0,[[28,[7]],[36,[7]]]],7]],34],[[8,[15]]]],[[]]],"c":[],"p":[[3,"Private"],[3,"ProofVerifier"],[15,"usize"],[8,"VerifyInvalidTransactionProof"],[3,"Arc"],[8,"VerifyInvalidStateTransitionProof"],[8,"Block"],[4,"Result"],[3,"TypeId"],[8,"SpawnNamed"],[8,"VerifyFraudProof"],[8,"Send"],[6,"NumberFor"],[4,"FraudProof"],[4,"VerificationError"],[8,"Backend"],[8,"CodeExecutor"],[3,"ExecutionProver"],[4,"ExecutionPhase"],[15,"u8"],[15,"slice"],[3,"H256"],[3,"StorageProof"],[3,"Vec"],[6,"Result"],[8,"Clone"],[3,"InvalidStateTransitionProofVerifier"],[8,"ProvideRuntimeApi"],[8,"Sync"],[8,"VerifierApi"],[8,"Encode"],[8,"Decode"],[4,"Option"],[3,"InvalidStateTransitionProof"],[3,"InvalidTransactionProofVerifier"],[8,"HeaderBackend"],[3,"InvalidTransactionProof"],[3,"VerifierClient"],[3,"DomainId"],[15,"u32"],[6,"Hash"]]},\
"subspace_metrics":{"doc":"This Rust module serves as a bridge between two different …","t":"NNENLLLLLLLLDLFLLLLLLLL","n":["Both","Libp2p","RegistryAdapter","Substrate","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","metrics","register","start_prometheus_metrics_server","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"subspace_metrics"]],"d":["We use both Substrate and Libp2p metrics registries.","Uses only the Libp2p metrics registry.","An metrics registry adapter for Libp2p and Substrate …","Uses only the Substrate metrics registry.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Start prometheus metrics server on the provided address.","","","","","","","",""],"i":[5,5,0,5,5,1,5,1,5,1,5,1,0,1,0,5,1,5,1,5,1,5,1],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1,2]],[[[4,[3]],5],[[7,[6]]]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[]],[[]]],"c":[],"p":[[3,"metrics"],[3,"AppService"],[4,"SocketAddr"],[3,"Vec"],[4,"RegistryAdapter"],[8,"Future"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"subspace_networking":{"doc":"Networking functionality of Subspace Network, primarily …","t":"NNNNNDENNIDENNNDSNICEDDDNNDNNNDGSEDEDGDNNQGEDNNNNEENDNDMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMMLCMMLMMMMMMMLLLLLLLLLLLLLFMLMMMMLMLLLLLLLKLMMLMLLLLLLLLLLLLLLLMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLMMMMAAFGENILLLLLLLLLLLLKKLLLLLLNDDIENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLL","n":["BootstrapNode","BootstrapNode","CantPreallocateKnownPeersFile","Client","Client","Config","CreationError","Farmer","Farmer","GenericRequest","GenericRequestHandler","GetClosestPeersError","IncorrectResponseFormat","Io","Io","KeyWrapper","LOG_TARGET","LastSegmentHeaders","LocalRecordProvider","Multihash","NetworkParametersPersistenceError","NetworkingParametersManager","NewPeerInfo","Node","Node","Node","NodeRunner","NodeRunnerDropped","NodeRunnerDropped","NodeRunnerDropped","Notification","NotificationHandler","PROTOCOL_NAME","PeerInfo","PeerInfoConfig","PeerInfoProvider","PieceByIndexRequest","PieceByIndexRequestHandler","PieceByIndexResponse","ProtocolFailure","RelayServerExpected","Response","SegmentHeaderBySegmentIndexesRequestHandler","SegmentHeaderRequest","SegmentHeaderResponse","SegmentIndexes","SendCommand","SendCommand","SendCommand","SendRequestError","SubscribeError","Subscription","TopicSubscription","TransportError","UniqueRecordBinaryHeap","allow_non_global_addresses_in_dht","ban_peer","bootstrap","bootstrap_addresses","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connected_peers","connected_peers","construct","contains_key","create","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_autonat","encode","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","external_addresses","external_addresses","file_size","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","general_connected_peers_handler","general_target_connections","get_closest_peers","get_providers","get_value","gossipsub","id","identify","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_random_query_interval","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_farmer","kademlia","kademlia_mode","keypair","keys","libp2p","listen_on","listen_on_fallback_to_random_port","listeners","local_records_provider","max_established_incoming_connections","max_established_outgoing_connections","max_pending_incoming_connections","max_pending_outgoing_connections","metrics","networking_parameters_registry","new","new","new","new","new_bootstrap_node","new_client","new_farmer","new_node","on_connected_peer","on_disconnected_peer","on_new_listener","on_num_established_peer_connections_change","on_peer_info","peer_id","peer_id","peer_info","peer_info","peer_info_provider","piece","piece_index","poll_next","protocol_version","provide","provide","provide","provide","provide","publish","put_value","record","remove","request_response_protocols","reserved_peers","run","segment_headers","send_generic_request","set_limit","should_include_key","size","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","source","source","source","special_connected_peers_handler","special_target_connections","subscribe","temporary_ban_backoff","temporary_bans_cache_size","timeout","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","using_encoded","using_encoded","using_encoded","utils","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_timeout","yamux_config","placeholder","segment_header_number","segment_indexes","multihash","piece_provider","strip_peer_id","Multihash","MultihashCode","PieceIndex","ToMultihash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","from","init","into","to_multihash","to_multihash_by_code","to_owned","try_from","try_from","try_into","type_id","vzip","Limited","NoPieceValidator","PieceProvider","PieceValidator","RetryPolicy","Unlimited","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_piece","get_piece_from_peer","init","init","init","into","into","into","new","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_piece","validate_piece","vzip","vzip","vzip"],"q":[[0,"subspace_networking"],[545,"subspace_networking::PeerInfo"],[546,"subspace_networking::SegmentHeaderRequest"],[548,"subspace_networking::utils"],[551,"subspace_networking::utils::multihash"],[575,"subspace_networking::utils::piece_provider"]],"d":["DSN bootstrap node.","Provides peer-info for Boostrap Node peer type.","Can’t preallocate known peers file, probably not enough …","Unspecified client (testing, custom utilities, etc).","Provides peer-info for Client peer type.","<code>Node</code> configuration.","Errors that might happen during network creation.","DSN farmer.","Provides peer-info for Farmer peer type.","Generic request with associated response","Defines generic request-response protocol handler.","Defines errors for <code>get-closest-peers</code> operation.","Underlying protocol returned an incorrect format, …","I/O error.","I/O error.","Wrapper data structure that allows to work with keys as …","Specifies log-parameters for tracing.","Defines how many segment headers to return.","Trait to be implemented on providers of local records","","Networking parameters persistence errors.","Handles networking parameters. It manages network …","<code>PeerInfo</code> update and related data container.","Implementation of a network node on Subspace Network.","DSN node.","Provides peer-info for Node peer type.","Runner for the Node.","Node runner was dropped","Node runner was dropped","Node runner was dropped","Peer info notification stub.","Defines a subscription to a peer-info notification.","Defines request-response protocol name.","Peer info data","The configuration for peer-info protocol.","Handles constant peer info data.","Piece-by-hash protocol request.","Create a new piece-by-hash request handler.","Piece-by-hash protocol response.","Underlying protocol returned an error, impossible to get …","Circuit relay client error.","Response type that corresponds to this request","Create a new segment-header-by-segment-indexes request …","Segment header by segment indexes protocol request.","Segment header by segment indexes protocol response.","Segment headers by segment indexes.","Failed to send command to the node runner","Failed to send command to the node runner","Failed to send command to the node runner","Defines errors for <code>send-request</code> operation.","Defines errors for <code>subscribe</code> operation.","Failed to create subscription.","Topic subscription, will unsubscribe when last instance is …","Transport error when attempting to listen on multiaddr.","Limited-size max binary heap for Kademlia records’ keys.","Should non-global addresses be added to the DHT?","Ban peer with specified peer ID.","Bootstraps Kademlia network","Addresses to bootstrap Kademlia network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a reference to the <code>NetworkingParametersRegistry</code> …","Remove all contents, while keeping allocated capacity","","","","","","","","","","","","","","","","","","","","","Returns a collection of currently connected peers.","Currently connected peers.","Create a new network node and node runner instances.","Checks whether the heap contains the given key.","Creates new <code>GenericRequestHandler</code> by given handler.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable autonat protocol. Helps detecting whether we’re …","","","","","","","","","","","","","","","","","","","","","","","","","Node’s own addresses observed remotely.","Known external addresses to the local peer. The addresses …","Size of the backing file on disk","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Defines whether we maintain a persistent connection for …","Defines target total (in and out) connection number that …","Get closest peers by multihash key using Kademlia DHT.","Get item providers by its key. Initiate ‘providers’ …","Return a value from the Kademlia network of the DSN.","The configuration for the Gossip behaviour.","Node’s own local ID.","The configuration for the Identify behaviour.","","","","","","","","","","","","","","","","","","","","","","","How frequently should random queries be done using …","Insert a key in the heap evicting (popping) if the size …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether <code>PeerInfo</code> is a Farmer.","The configuration for the Kademlia behaviour.","Kademlia mode. None means “automatic mode”.","Identity keypair of a node used for authenticated …","Iterator over all keys in arbitrary order","","List of <code>Multiaddr</code> on which to listen for incoming …","Fallback to random port if specified (or default) port is …","Node’s own addresses where it listens for incoming …","Externally provided implementation of the local records …","Established incoming swarm connection limit.","Established outgoing swarm connection limit.","Pending incoming swarm connection limit.","Pending outgoing swarm connection limit.","Optional external prometheus metrics. None will disable …","A reference to the <code>NetworkingParametersRegistry</code> …","Object constructor. It accepts <code>NetworkingParametersProvider</code>…","Creates a new <code>Config</code>.","Creates a new <code>Config</code> with the following default settings:","Constructs a heap with given PeerId and size limit.","Creates a new Bootstrap Node peer-info provider.","Creates a new Client peer-info provider.","Creates a new Farmer peer-info provider.","Creates a new Node peer-info provider.","Callback is called when a peer is connected.","Callback is called when a peer is disconnected.","Callback is called when node starts listening on new …","Callback is called when number of established peer …","Callback is called when we receive new …","Converts public key from keypair to PeerId. It serves as …","Peer ID for this <code>PeerInfo</code> update.","Returns the peer info data.","<code>PeerInfo</code> update.","Specifies a source for peer information. None disables the …","Returned data.","Request key - piece index","","Defines protocol version for the network peers. Affects …","","","","","","Subcribe a messgo to some topic on the DSN.","Puts a value into the Kademlia network of the DSN.","Gets a provider record for key that is stored locally","Removes a key from the heap.","The configuration for the <code>RequestResponsesBehaviour</code> …","Defines set of peers with a permanent connection (and …","Drives the main networking future forward.","Returned data.","Sends the generic request to the peer and awaits the …","Set limit to new value, decreasing to value lower than …","Checks whether we include the key.","Returns heap-size","","","","","","","","","","","","Defines whether we maintain a persistent connection for …","Defines target total (in and out) connection number that …","Subcribe to some topic on the DSN.","Backoff policy for temporary banning of unreachable peers.","How many temporarily banned unreachable peers to keep in …","Adds a timeout to the setup and protocol upgrade process …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Miscellaneous utilities for networking.","","","","","","","","","","","","","","","","","","","","","","","Sets the protocol timeout.","Yamux multiplexing configuration.","Backward compatibility placeholder.","Number of segment headers to return.","Segment indexes to get.","Defines multihash codes for Subspace DSN.","Provides methods to retrieve pieces from DSN.","Helper function. Converts multiaddresses to a tuple with …","Type alias for libp2p Multihash. Constant 64 was copied …","Subspace Network multihash codes.","Piece index code.","Helper trait for converting to multihash.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Convert to multihash by the default multihash code.","Convert to multihash by the specified multihash code.","","","","","","","Retry N times (including zero)","Stub implementation for piece validation.","Piece provider with cancellation and optional piece …","Validates piece against using its commitment.","Defines retry policy on error during piece acquiring.","No restrictions on retries","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns piece by its index. Uses retry policy for error …","Get piece from a particular peer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates new piece provider.","","","","","","","","","","","Validates piece against using its commitment.","","","",""],"i":[11,41,37,11,41,0,0,11,41,0,0,0,40,37,22,0,67,14,0,0,0,0,0,0,11,41,0,38,39,40,0,0,67,0,0,0,0,0,0,40,22,67,0,0,0,14,38,39,40,0,0,39,0,22,0,21,1,1,21,5,21,66,82,37,22,31,38,39,40,1,9,10,11,41,12,13,14,15,42,16,8,5,21,66,82,37,22,31,38,39,40,1,9,10,11,41,12,13,14,15,42,16,8,5,8,1,9,10,11,12,13,14,15,16,8,1,9,10,11,12,13,14,15,16,8,1,42,0,8,82,11,12,13,14,15,11,12,13,14,15,11,12,13,14,15,11,12,13,14,15,21,11,5,21,66,82,37,22,31,38,39,40,1,9,10,11,41,12,13,14,15,42,16,8,5,21,66,82,37,22,31,38,39,40,1,9,10,11,41,12,13,14,15,42,16,8,5,5,21,66,82,37,22,31,31,38,39,40,1,9,10,11,41,12,13,14,15,42,16,8,21,12,13,15,11,12,13,14,15,12,13,14,15,12,12,12,13,13,13,14,14,14,15,15,15,1,21,5,21,37,37,22,22,31,38,38,39,39,40,40,1,9,10,11,41,12,13,14,15,42,16,8,5,21,66,82,37,37,22,22,22,31,38,38,38,39,39,39,39,40,40,40,40,1,9,10,11,41,12,13,14,15,42,16,8,21,21,1,1,1,21,1,21,5,21,66,82,37,22,31,38,39,40,1,9,10,11,41,12,13,14,15,42,16,8,21,8,5,21,66,82,37,22,31,38,39,40,1,9,10,11,41,12,13,14,15,42,16,8,11,21,21,21,8,0,21,21,1,21,21,21,21,21,21,21,5,21,9,8,41,41,41,41,1,1,1,1,1,0,42,41,42,21,13,12,31,21,37,22,38,39,40,1,1,18,8,21,21,66,15,1,8,8,8,31,11,12,13,14,15,37,22,38,39,40,21,21,1,21,21,21,11,12,13,14,15,1,9,10,11,12,13,14,15,16,8,37,22,38,39,40,5,21,66,82,37,22,31,38,39,40,1,9,10,11,41,12,13,14,15,42,16,8,5,21,66,82,37,22,31,38,39,40,1,9,10,11,41,12,13,14,15,42,16,8,5,21,66,82,37,22,31,38,39,40,1,9,10,11,41,12,13,14,15,42,16,8,12,13,15,0,5,21,66,82,37,22,31,38,39,40,1,9,10,11,41,12,13,14,15,42,16,8,9,21,83,84,85,0,0,0,0,0,73,0,73,73,73,73,73,73,73,73,73,73,73,73,86,86,73,73,73,73,73,73,75,0,0,0,0,75,81,77,75,81,77,75,75,75,75,81,77,75,81,77,75,81,77,75,75,75,75,75,75,81,77,75,77,77,81,77,75,81,77,75,77,75,81,77,75,81,77,75,81,77,75,76,81,81,77,75],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[4,[3]]]],[1,[[4,[0]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[6,[0]]]],[[[8,[7]]]],[1,1],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[[[16,[7]]],[[16,[7]]]],[[[8,[7]]],[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[4,[[17,[2]],0]]]],0,[[[21,[[0,[18,19,20]]]]],[[4,[22]]]],[[[8,[7]],7],23],[[[0,[24,19,20]]],[[6,[0]]]],[25,[[4,[11,26]]]],[25,[[4,[12,26]]]],[25,[[4,[13,26]]]],[25,[[4,[14,26]]]],[25,[[4,[15,26]]]],[[[28,[27]]],[[4,[26]]]],[[[28,[27]]],[[4,[26]]]],[[[28,[27]]],[[4,[26]]]],[[[28,[27]]],[[4,[26]]]],[[[28,[27]]],[[4,[26]]]],[[29,[28,[27]]],[[4,[26]]]],[[29,[28,[27]]],[[4,[26]]]],[[29,[28,[27]]],[[4,[26]]]],[[29,[28,[27]]],[[4,[26]]]],[[29,[28,[27]]],[[4,[26]]]],[[29,25],[[4,[26]]]],[[29,25],[[4,[26]]]],[[29,25],[[4,[26]]]],[[29,25],[[4,[26]]]],[[29,25],[[4,[26]]]],[[],21],[[],11],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[5],[30],[30],[30],[30],[30],[31],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],0,[12,[[17,[27]]]],[13,[[17,[27]]]],[15,[[17,[27]]]],[[11,[0,[32,33]]]],[[12,[0,[32,33]]]],[[13,[0,[32,33]]]],[[14,[0,[32,33]]]],[[15,[0,[32,33]]]],[[12,12],23],[[13,13],23],[[14,14],23],[[15,15],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[1,[[17,[34]]]],0,[[],30],[[21,35],36],[[37,35],36],[[37,35],36],[[22,35],36],[[22,35],36],[[31,35],36],[[38,35],36],[[38,35],36],[[39,35],36],[[39,35],36],[[40,35],36],[[40,35],36],[[1,35],36],[[9,35],36],[[10,35],36],[[11,35],36],[[41,35],36],[[12,35],36],[[13,35],36],[[14,35],36],[[15,35],36],[[42,35],36],[[[16,[43]],35],36],[[[8,[43]],35],36],[[]],[[]],[[]],[[]],[44,37],[[]],[[[45,[44]]],22],[[]],[44,22],[[]],[46,38],[3,38],[[]],[47,39],[[]],[3,39],[46,39],[[]],[26,40],[3,40],[46,40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[1,48],[[4,[49,38]]]],[[1,48],[[4,[49,0]]]],[[1,48],[[4,[49,0]]]],0,[1,2],0,[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,[[[8,[7]],7],[[50,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,23],0,0,0,[[[8,[7]]],51],0,0,0,[1,[[17,[34]]]],0,0,0,0,0,0,0,[[52,[53,[2]]],[[4,[5,37]]]],[[54,55,18,[50,[41]]],[[21,[18]]]],[56,9],[[2,30],[[8,[7]]]],[[],41],[[],41],[[],41],[[],41],[[1,[57,[24]]],58],[[1,[57,[24]]],58],[[1,[57,[24]]],58],[[1,[57,[24]]],58],[[1,[57,[24]]],58],[55,2],0,[41,11],0,0,0,0,[[[59,[31]],60],[[61,[50]]]],0,[62],[62],[62],[62],[62],[[1,63,[17,[27]]],[[4,[0]]]],[[1,48,[17,[27]]],[[4,[49,0]]]],[64,[[50,[65]]]],[[[8,[7]],7]],0,0,[[[66,[[0,[18,19,20]]]]]],0,[[1,2,67],[[4,[40]]]],[[[8,[7]],30]],[[[8,[7]],7],23],[[[8,[7]]],30],[31],[11,30],[12,30],[13,30],[14,30],[15,30],[37,[[50,[68]]]],[22,[[50,[68]]]],[38,[[50,[68]]]],[39,[[50,[68]]]],[40,[[50,[68]]]],0,0,[[1,63],[[4,[31,39]]]],0,0,0,[[[28,[27]]],[[17,[27,69]]]],[[[28,[27]]],[[17,[27,69]]]],[[[28,[27]]],[[17,[27,69]]]],[[[28,[27]]],[[17,[27,69]]]],[[[28,[27]]],[[17,[27,69]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[12,71]],[[13,71]],[[15,71]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,72],9],0,0,0,0,0,0,[[[17,[34]]],17],0,0,0,0,[[]],[[]],[73,73],[[]],[30],[30],[30],[[73,73],23],[[73,35],36],[[]],[[],30],[[]],[[],48],[73,48],[[]],[74,[[4,[73]]]],[[],4],[[],4],[[],70],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[75,75],[[]],[[],75],[30],[30],[30],[30],[30],[30],[30],[30],[30],[[75,75],23],[[],23],[[],23],[[],23],[[75,35],36],[[]],[[]],[[]],[[[77,[76]],78,75],[[4,[[50,[79]],[6,[68]]]]]],[[[77,[76]],2,78],[[50,[79]]]],[[],30],[[],30],[[],30],[[]],[[]],[[]],[[1,[50,[76]]],[[77,[76]]]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],70],[[],70],[[],70],[[2,78,79],[[59,[[6,[80]]]]]],[[81,2,78,79],[[59,[[6,[80]]]]]],[[]],[[]],[[]]],"c":[],"p":[[3,"Node"],[3,"PeerId"],[3,"SendError"],[4,"Result"],[3,"NetworkingParametersManager"],[3,"Box"],[8,"Clone"],[3,"UniqueRecordBinaryHeap"],[3,"PeerInfoConfig"],[3,"Notification"],[4,"PeerInfo"],[3,"PieceByIndexRequest"],[3,"PieceByIndexResponse"],[4,"SegmentHeaderRequest"],[3,"SegmentHeaderResponse"],[3,"KeyWrapper"],[3,"Vec"],[8,"LocalRecordProvider"],[8,"Send"],[8,"Sync"],[3,"Config"],[4,"CreationError"],[15,"bool"],[8,"Fn"],[8,"Input"],[3,"Error"],[15,"u8"],[15,"slice"],[15,"u32"],[15,"usize"],[3,"TopicSubscription"],[8,"Output"],[8,"Sized"],[3,"Multiaddr"],[3,"Formatter"],[6,"Result"],[4,"NetworkParametersPersistenceError"],[4,"GetClosestPeersError"],[4,"SubscribeError"],[4,"SendRequestError"],[4,"PeerInfoProvider"],[3,"NewPeerInfo"],[8,"Debug"],[3,"Error"],[4,"TransportError"],[3,"Canceled"],[4,"SubscriptionError"],[6,"Multihash"],[8,"Stream"],[4,"Option"],[8,"ExactSizeIterator"],[3,"Path"],[3,"HashSet"],[3,"String"],[3,"Keypair"],[15,"str"],[3,"Arc"],[3,"HandlerId"],[3,"Pin"],[3,"Context"],[4,"Poll"],[3,"Demand"],[6,"Sha256Topic"],[3,"Key"],[3,"ProviderRecord"],[3,"NodeRunner"],[8,"GenericRequest"],[8,"Error"],[3,"Global"],[3,"TypeId"],[8,"FnOnce"],[3,"Duration"],[4,"MultihashCode"],[15,"u64"],[4,"RetryPolicy"],[8,"PieceValidator"],[3,"PieceProvider"],[3,"PieceIndex"],[3,"Piece"],[8,"Future"],[3,"NoPieceValidator"],[3,"GenericRequestHandler"],[13,"Farmer"],[13,"LastSegmentHeaders"],[13,"SegmentIndexes"],[8,"ToMultihash"]]},\
"subspace_node":{"doc":"Subspace Node library.","t":"NNNDNDNNNNNDNELLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLAMMLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDDDEDNNNLLLLLLLLMLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BuildSpec","ChainInfo","CheckBlock","Cli","Domain","ExecutorDispatch","ExportBlocks","ExportState","ImportBlocks","Key","PurgeChain","PurgeChainCmd","Revert","Subcommand","__clone_box","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","author","base","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command","command","command_for_update","command_for_update","copyright_start_year","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","description","dispatch","domain","domain_args","domain_args","drop","drop","drop","drop","dsn_bootstrap_nodes","dsn_enable_private_ips","dsn_external_addresses","dsn_in_connections","dsn_listen_on","dsn_out_connections","dsn_pending_in_connections","dsn_pending_out_connections","dsn_reserved_peers","dsn_target_connections","enable_subspace_block_relay","executable_name","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","group_id","group_id","has_subcommand","impl_name","impl_version","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_in_subset","is_in_subset","is_in_subset","is_in_subset","load_spec","native_version","run","run","storage_monitor","subcommand","support_url","sync_from_dsn","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","Benchmark","BuildGenesisConfig","DomainCli","DomainGenesisBlockBuilder","DomainInstanceStarter","DomainSubcommand","EVMDomainExecutorDispatch","ExportExecutionReceipt","ExportState","Revert","additional_args","announce_block","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","author","base_path","block_importing_notification_stream","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","command","command_for_update","consensus_client","consensus_offchain_tx_pool_factory","consensus_sync_service","copyright_start_year","create_domain_configuration","default_heap_pages","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","dev_key_seed","disable_grandpa","dispatch","domain_cli","domain_id","domain_message_receiver","drop","drop","drop","drop","drop","executable_name","fmt","fmt","force_authoring","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","generate_genesis_block","generate_genesis_state_root","gossip_message_sink","group_id","has_subcommand","impl_name","impl_version","import_params","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","keystore_params","load_spec","max_runtime_instances","native_version","network_params","new","new","new_slot_notification_stream","operator","p2p_listen_port","prometheus_config","prometheus_listen_port","role","rpc_addr","rpc_cors","rpc_listen_port","rpc_max_connections","rpc_methods","run","select_chain","shared_params","start","support_url","telemetry_endpoints","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","tokio_handle","transaction_pool","trie_cache_maximum_size","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"subspace_node"],[188,"subspace_node::domain"]],"d":["Build a chain specification.","Db meta columns information.","Validate blocks.","Subspace Cli.","Run domain sub-commands.","Executor dispatch for subspace runtime","Export blocks.","Export the state of a given block into a chain spec.","Import blocks.","Key management cli utilities","Remove the whole chain.","This <code>purge-chain</code> command used to remove both consensus …","Revert the chain to a previous state.","Utilities for working with a node.","","","","","","","","","The base struct of the purge-chain command.","","","","","","","","","","","","","","","","","","","","","","","","","","","Domain arguments","Domain arguments","","","","","Bootstrap nodes for DSN.","Determines whether we allow keeping non-global (private, …","Known external addresses","Defines max established incoming connection limit for DSN.","Where local DSN node will listen for incoming connections.","Defines max established outgoing swarm connection limit …","Defines max pending incoming connection limit for DSN.","Defines max pending outgoing swarm connection limit for …","Reserved peers for DSN.","Defines target total (in and out) connection number for …","Use the block request handler implementation from subspace …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Run the purge command","Run a node.","Parameters used to create the storage monitor.","Various utility commands.","","Enables DSN-sync on startup.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sub-commands concerned with benchmarking.","Build the genesis config of the evm domain chain in json …","","<code>DomainGenesisBlockBuilder</code> is used on the consensus node …","<code>DomainInstanceStarter</code> used to start a domain instance node …","Sub-commands supported by the executor.","EVM domain executor instance.","The <code>export-execution-receipt</code> command used to get the ER …","Export the state of a given block into a chain spec.","Revert the chain to a previous state.","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates domain configuration from domain cli.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Constructs the genesis domain block from a serialized …","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a new instance of <code>DomainGenesisBlockBuilder</code>.","Constructs a new instance of <code>DomainCli</code>.","","Run the node as an Operator","","","","","","","","","","Run a domain node.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[14,14,14,0,14,0,14,14,14,14,14,0,14,0,4,4,15,4,15,14,14,15,4,65,4,14,15,65,4,14,15,4,4,4,15,4,15,15,65,4,14,15,65,4,14,15,15,65,0,4,15,65,4,14,15,15,15,15,15,15,15,15,15,15,15,15,15,4,14,15,65,4,14,15,4,14,15,4,14,15,65,65,4,4,14,14,15,15,65,65,4,4,14,14,15,15,65,4,14,15,4,15,14,15,15,65,4,14,15,65,4,14,15,65,4,14,15,65,4,14,15,65,4,14,15,65,4,14,15,65,4,14,15,65,4,14,15,15,65,4,15,15,15,15,15,4,65,4,14,15,65,4,14,15,65,4,14,15,65,4,14,15,65,4,14,15,65,4,14,15,65,4,14,15,65,4,14,15,4,14,15,4,14,15,65,4,14,15,36,36,0,0,0,0,0,36,36,36,31,31,31,31,36,36,31,31,59,59,66,41,36,31,59,66,41,36,31,31,31,31,59,59,59,31,31,31,59,66,41,36,31,59,66,41,36,31,31,31,31,66,59,31,59,59,66,41,36,31,31,36,31,31,59,66,41,36,31,36,31,36,31,59,59,66,66,41,41,36,36,31,31,59,59,66,66,41,41,36,36,31,31,59,66,41,36,31,41,41,59,31,36,31,31,31,59,66,41,36,31,59,66,41,36,31,59,66,41,36,31,59,66,41,36,31,59,66,41,36,31,59,66,41,36,31,59,66,41,36,31,59,66,41,36,31,31,31,31,66,31,41,31,59,31,31,31,31,31,31,31,31,31,31,31,59,31,59,31,31,59,66,41,36,31,59,66,41,36,31,59,31,31,59,66,41,36,31,59,66,41,36,31,59,66,41,36,31,59,66,41,36,31,59,66,41,36,31,59,66,41,36,31,36,31,36,31,59,66,41,36,31],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[[],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[[]],[[],2],[[],2],[[],2],[[],2],[[],5],[6],[6],[6],[6],[6],[6],[6],[6],[[],3],[[7,[9,[8]]],[[11,[[10,[8]]]]]],0,0,0,[6],[6],[6],[6],0,0,0,0,0,0,0,0,0,0,0,[[],3],[[4,12],13],[[14,12],13],[[15,12],13],[[]],[[]],[[]],[[]],[16,[[18,[4,17]]]],[16,[[18,[14,17]]]],[16,[[18,[15,17]]]],[16,[[18,[4,17]]]],[16,[[18,[14,17]]]],[16,[[18,[15,17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[19]]]],[[],[[11,[19]]]],[7,20],[[],3],[[],3],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[24,[21]]],[[24,[23,21]]]],[[[24,[21]]],[[24,[23,21]]]],[[[24,[21]]],[[24,[23,21]]]],[[[24,[21]]],[[24,[23,21]]]],[[[25,[21]]],[[25,[23,21]]]],[[[25,[21]]],[[25,[23,21]]]],[[[25,[21]]],[[25,[23,21]]]],[[[25,[21]]],[[25,[23,21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[15,7],[[18,[[22,[26]],3]]]],[[],27],[[4,28,[11,[28]]],29],0,0,0,[[],3],0,[[]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],30],[[],30],[[],30],[[],30],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,16],[[18,[17]]]],[[14,16],[[18,[17]]]],[[15,16],[[18,[17]]]],[[4,16],[[18,[17]]]],[[14,16],[[18,[17]]]],[[15,16],[[18,[17]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[31,32],[31,[[29,[20]]]],[2,2],[2,2],[2,2],[2,2],[[],3],[31,[[29,[[11,[33]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[31,20],[[29,[3]]]],[[],2],[[],2],0,0,0,[[],5],[[31,34],[[29,[28]]]],[31,[[29,[[11,[35]]]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],3],[[31,20],[[29,[[11,[3]]]]]],[31,[[29,[20]]]],[[7,[9,[8]]],[[11,[[10,[8]]]]]],0,0,0,[6],[6],[6],[6],[6],[[],3],[[36,12],13],[[31,12],13],[31,[[29,[20]]]],[[]],[[]],[[]],[[]],[[]],[16,[[18,[36,17]]]],[16,[[18,[31,17]]]],[16,[[18,[36,17]]]],[16,[[18,[31,17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[37,[38,[37]],[0,[39,40]]]],42,43],[[44,[37]]]],[[[41,[37,[38,[37]],[0,[39,40,45,46]]]],42,43],[[11,[47]]]],0,[[],[[11,[19]]]],[7,20],[[],3],[[],3],[31,[[11,[48]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[24,[21]]],[[24,[23,21]]]],[[[24,[21]]],[[24,[23,21]]]],[[[24,[21]]],[[24,[23,21]]]],[[[24,[21]]],[[24,[23,21]]]],[[[24,[21]]],[[24,[23,21]]]],[[[25,[21]]],[[25,[23,21]]]],[[[25,[21]]],[[25,[23,21]]]],[[[25,[21]]],[[25,[23,21]]]],[[[25,[21]]],[[25,[23,21]]]],[[[25,[21]]],[[25,[23,21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[31,[[11,[49]]]],[[31,7],[[18,[[22,[26]],3]]]],[31,[[29,[[11,[6]]]]]],[[],27],[31,[[11,[50]]]],[[[24,[[38,[37]]]],[0,[39,40]]],[[41,[37,[38,[37]],[0,[39,40]]]]]],[[[11,[51]],32],31],0,0,[[],52],[[31,52,[22,[26]]],[[29,[[11,[53]]]]]],[[],52],[[31,20],[[29,[54]]]],[[31,52],[[29,[[11,[55]]]]]],[[31,20],[[29,[[11,[[10,[3]]]]]]]],[[],52],[31,[[29,[56]]]],[31,[[29,[57]]]],0,0,[31,58],[[59,[61,[60]]],[[18,[[22,[62]]]]]],[[],3],[[31,[22,[26]]],[[29,[[11,[63]]]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],0,[[31,20],[[29,[64]]]],[31,[[29,[[11,[6]]]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],30],[[],30],[[],30],[[],30],[[],30],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[36,16],[[18,[17]]]],[[31,16],[[18,[17]]]],[[36,16],[[18,[17]]]],[[31,16],[[18,[17]]]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[3,"Command"],[3,"String"],[3,"PurgeChainCmd"],[15,"i32"],[15,"usize"],[15,"str"],[15,"u8"],[15,"slice"],[3,"Vec"],[4,"Option"],[3,"Formatter"],[6,"Result"],[4,"Subcommand"],[3,"Cli"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[15,"bool"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"Arc"],[3,"Rc"],[8,"ChainSpec"],[3,"NativeVersion"],[3,"Configuration"],[6,"Result"],[3,"TypeId"],[3,"DomainCli"],[8,"Iterator"],[3,"BasePath"],[3,"Handle"],[15,"u64"],[4,"DomainSubcommand"],[8,"Block"],[8,"Backend"],[8,"RuntimeVersionOf"],[8,"Clone"],[3,"DomainGenesisBlockBuilder"],[3,"DomainId"],[3,"DomainInstanceData"],[6,"Result"],[8,"Send"],[8,"Sync"],[3,"H256"],[3,"ImportParams"],[3,"KeystoreParams"],[3,"NetworkParams"],[3,"PathBuf"],[15,"u16"],[3,"PrometheusConfig"],[4,"Role"],[4,"SocketAddr"],[15,"u32"],[4,"RpcMethods"],[3,"SharedParams"],[3,"DomainInstanceStarter"],[6,"Block"],[3,"BootstrapResult"],[8,"Error"],[3,"TelemetryEndpoints"],[3,"Options"],[3,"ExecutorDispatch"],[3,"EVMDomainExecutorDispatch"]]},\
"subspace_proof_of_space":{"doc":"Subspace proof of space implementation based on Chia","t":"NQEIQNSIILLAALLKLLLKLLKKLLLLLKAKLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Chia","Generator","PosTableType","Quality","Quality","Shim","TABLE_TYPE","Table","TableGenerator","borrow","borrow_mut","chia","chiapos","clone","clone_into","create_proof","deref","deref_mut","drop","find_quality","fmt","from","generate","generate","generate_parallel","generate_parallel","generator","init","into","is_proof_valid","shim","to_bytes","to_owned","try_from","try_into","type_id","ChiaQuality","ChiaTable","ChiaTableGenerator","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_proof","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","find_quality","fmt","fmt","fmt","from","from","from","generate","generate","generate_parallel","generate_parallel","init","init","init","into","into","into","is_proof_valid","to_bytes","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Tables","TablesCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create","create","create","create","create","create","create","create","create","create","create","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_simple","create_simple","create_simple","create_simple","create_simple","create_simple","create_simple","create_simple","create_simple","create_simple","create_simple","default","deref","deref","deref_mut","deref_mut","drop","drop","find_proof","find_proof","find_proof","find_proof","find_proof","find_proof","find_proof","find_proof","find_proof","find_proof","find_proof","find_quality","find_quality","find_quality","find_quality","find_quality","find_quality","find_quality","find_quality","find_quality","find_quality","find_quality","fmt","fmt","from","from","init","init","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify","verify","verify","verify","verify","verify","verify","verify","verify","verify","verify","ShimQuality","ShimTable","ShimTableGenerator","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_proof","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","find_quality","fmt","fmt","fmt","from","from","from","generate","generate","init","init","init","into","into","into","is_proof_valid","to_bytes","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"subspace_proof_of_space"],[36,"subspace_proof_of_space::chia"],[87,"subspace_proof_of_space::chiapos"],[183,"subspace_proof_of_space::shim"]],"d":["Chia table","Instance that can be used to generate tables with better …","Proof of space table type","Abstraction that represents quality of the solution in the …","Abstraction that represents quality of the solution in the …","Shim table","Proof of space table type","Proof of space kind","Stateful table generator with better performance","","","Chia proof of space implementation","Chia proof of space reimplementation in Rust","","","Create proof for this solution","","","","Try to find quality of the proof at <code>challenge_index</code> if …","","Returns the argument unchanged.","Generate new table with 32 bytes seed.","Generate new table with 32 bytes seed.","Generate new table with 32 bytes seed using parallelism.","Generate new table with 32 bytes seed using parallelism.","Returns a stateful table generator with better performance","","Calls <code>U::from(self)</code>.","Check whether proof created earlier is valid and return …","Shim proof of space implementation","Get underlying bytes representation of the quality","","","","","Abstraction that represents quality of the solution in the …","Subspace proof of space table.","Subspace proof of space table generator.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Collection of Chia tables","Caches that can be used to optimize creation of multiple …","","","","","","","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create new instance","","","","","","","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Abstraction that represents quality of the solution in the …","Subspace proof of space table.","Subspace proof of space table generator.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[1,23,0,0,23,1,23,0,0,1,1,0,0,1,1,24,1,1,1,23,1,1,25,23,25,23,23,1,1,23,0,24,1,1,1,1,0,0,0,13,12,14,13,12,14,12,12,13,12,13,12,14,13,12,14,13,12,14,14,13,12,14,13,12,14,12,14,12,14,13,12,14,13,12,14,14,13,12,13,12,14,13,12,14,13,12,14,0,0,15,18,15,18,15,15,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,15,15,18,15,18,15,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,15,18,15,18,15,18,15,18,15,15,18,15,18,15,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,21,20,22,21,20,22,20,20,21,20,21,20,22,21,20,22,21,20,22,22,21,20,22,21,20,22,20,22,21,20,22,21,20,22,22,21,20,21,20,22,21,20,22,21,20,22],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,[1,1],[[]],[[],2],[3],[3],[3],[4,5],[[1,6],7],[[]],[8],[8],[8],[8],[[]],[[],3],[[]],[[8,4,2],[[5,[9]]]],0,[[],9],[[]],[[],10],[[],10],[[],11],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[12,12],[[]],[13,2],[[],12],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[14,4],5],[[13,6],7],[[12,6],7],[[14,6],7],[[]],[[]],[[]],[[12,8],14],[8,14],[[12,8],14],[8,14],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[8,4,2],[[5,[9]]]],[13,9],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],0,0,[[]],[[]],[[]],[[]],[15,15],[[]],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]],15],18],[[[17,[16]]],18],[[[17,[16]]],18],[[[17,[16]]],18],[[[17,[16]]],18],[[[17,[16]]],18],[[[17,[16]]],18],[[[17,[16]]],18],[[[17,[16]]],18],[[[17,[16]]],18],[[[17,[16]]],18],[[[17,[16]]],18],[[],15],[3],[3],[3],[3],[3],[3],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[18,[17,[16]]],19],[[15,6],7],[[18,6],7],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[[17,[16]],[17,[16]],[17,[16]]],[[5,[[17,[16]]]]]],[[[17,[16]],[17,[16]],[17,[16]]],[[5,[[17,[16]]]]]],[[[17,[16]],[17,[16]],[17,[16]]],[[5,[[17,[16]]]]]],[[[17,[16]],[17,[16]],[17,[16]]],[[5,[[17,[16]]]]]],[[[17,[16]],[17,[16]],[17,[16]]],[[5,[[17,[16]]]]]],[[[17,[16]],[17,[16]],[17,[16]]],[[5,[[17,[16]]]]]],[[[17,[16]],[17,[16]],[17,[16]]],[[5,[[17,[16]]]]]],[[[17,[16]],[17,[16]],[17,[16]]],[[5,[[17,[16]]]]]],[[[17,[16]],[17,[16]],[17,[16]]],[[5,[[17,[16]]]]]],[[[17,[16]],[17,[16]],[17,[16]]],[[5,[[17,[16]]]]]],[[[17,[16]],[17,[16]],[17,[16]]],[[5,[[17,[16]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[[]],[21,2],[[],20],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[22,4],5],[[21,6],7],[[20,6],7],[[22,6],7],[[]],[[]],[[]],[[20,8],22],[8,22],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[8,4,2],[[5,[9]]]],[21,9],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11]],"c":[],"p":[[4,"PosTableType"],[3,"PosProof"],[15,"usize"],[15,"u32"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"PosSeed"],[3,"PosQualityBytes"],[4,"Result"],[3,"TypeId"],[3,"ChiaTableGenerator"],[3,"ChiaQuality"],[3,"ChiaTable"],[3,"TablesCache"],[15,"u8"],[15,"array"],[3,"Tables"],[8,"Iterator"],[3,"ShimTableGenerator"],[3,"ShimQuality"],[3,"ShimTable"],[8,"Table"],[8,"Quality"],[8,"TableGenerator"]]},\
"subspace_proof_of_time":{"doc":"Proof of time implementation.","t":"NELLLLLLLLLLFLLLLLFMM","n":["NotMultipleOfCheckpoints","PotError","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","prove","provide","to_string","try_from","try_into","type_id","verify","iterations","num_checkpoints"],"q":[[0,"subspace_proof_of_time"],[19,"subspace_proof_of_time::PotError"]],"d":["Iterations is not multiple of number of checkpoints times …","Proof of time error","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Run PoT proving and produce checkpoints.","","","","","","Verify checkpoint, number of iterations is set across …","Slot iterations provided","Number of checkpoints"],"i":[2,0,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,0,15,15],"f":[0,0,[[]],[[]],[1],[1],[1],[[2,3],4],[[2,3],4],[[]],[[],1],[[]],[[5,6],[[8,[7,2]]]],[9],[[],10],[[],8],[[],8],[[],11],[[5,6,[13,[12]]],[[8,[14,2]]]],0,0],"c":[],"p":[[15,"usize"],[4,"PotError"],[3,"Formatter"],[6,"Result"],[3,"PotSeed"],[3,"NonZeroU32"],[3,"PotCheckpoints"],[4,"Result"],[3,"Demand"],[3,"String"],[3,"TypeId"],[3,"PotOutput"],[15,"slice"],[15,"bool"],[13,"NotMultipleOfCheckpoints"]]},\
"subspace_rpc_primitives":{"doc":"Primitives for Subspace RPC.","t":"DRNEDDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLMMLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLL","n":["FarmerAppInfo","MAX_SEGMENT_HEADERS_PER_REQUEST","MajorSyncing","NodeSyncStatus","RewardSignatureResponse","RewardSigningInfo","SlotInfo","SolutionResponse","Synced","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","dsn_bootstrap_nodes","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","genesis_hash","global_challenge","hash","hash","init","init","init","init","init","init","into","into","into","into","into","into","is_synced","protocol_info","public_key","serialize","serialize","serialize","serialize","serialize","serialize","signature","slot_number","slot_number","solution_range","solutions","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","voting_solution_range","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"subspace_rpc_primitives"]],"d":["Information necessary for farmer application","Defines a limit for number of segments that can be …","Node is major syncing","Information about new slot that just arrived","Signature in response to reward hash signing request.","Reward info that needs to be signed.","Information about new slot that just arrived","Response of a slot challenge consisting of an optional …","Node is fully synced","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bootstrap nodes for DSN.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Genesis hash of the chain","Global slot challenge","Hash to be signed.","Hash that was signed.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether node is synced","Protocol info for farmer","Public key of the plot identity that should create …","","","","","","","Pre-header or vote hash signature.","Slot number","Slot number.","Acceptable solution range for block authoring","Solution farmer has for the challenge.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Acceptable solution range for voting","","","","","",""],"i":[0,0,6,0,0,0,0,0,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,6,6,6,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,4,5,1,2,3,4,5,6,1,2,3,4,5,6,6,1,4,1,2,3,4,5,6,5,2,3,2,3,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,2,1,2,3,4,5,6],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[8,[[9,[1]]]],[8,[[9,[2]]]],[8,[[9,[3]]]],[8,[[9,[4]]]],[8,[[9,[5]]]],[8,[[9,[6]]]],[7],[7],[7],[7],[7],[7],0,[[6,6],10],[[],10],[[],10],[[],10],[[1,11],12],[[2,11],12],[[3,11],12],[[4,11],12],[[5,11],12],[[6,11],12],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[6,10],0,0,[[1,13],9],[[2,13],9],[[3,13],9],[[4,13],9],[[5,13],9],[[6,13],9],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"FarmerAppInfo"],[3,"SlotInfo"],[3,"SolutionResponse"],[3,"RewardSigningInfo"],[3,"RewardSignatureResponse"],[4,"NodeSyncStatus"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Serializer"],[3,"TypeId"]]},\
"subspace_runtime":{"doc":"","t":"DGGGGGGGENGNNNGGDDDDDDNDDDDDGNNNNGGDDDGEGNNNNGGNGEDRDDDDDDDDGNNNDDDGNNGNDEDNNDDDDDDGNNDDDEGGEEEDEEDEGDDDGDDDDDDGNNNDDGGNNNGDGNNNGGNDGNGNGGNNNDDGGNNNRDGNNNGNDRRLLLLLLLLLLLLLLALLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMNLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLF","n":["AccountIdConverter","Address","AllPallets","AllPalletsReversedWithSystemFirst","AllPalletsWithSystem","AllPalletsWithSystemReversed","AllPalletsWithoutSystem","AllPalletsWithoutSystemReversed","AllowAuthoringBy","Anyone","Balances","Balances","Balances","Balances","BalancesConfig","Block","BlockAuthoringDelay","BlockHashCount","BlockReward","BlockTreePruningDepth","BlockchainHistorySize","ConfirmationDepthK","ContentAddressable","CreditSupply","DomainInfo","DomainInstantiationDeposit","DomainRuntimeUpgradeDelay","DomainTxRangeAdjustmentInterval","Domains","Domains","Domains","Domains","Domains","DomainsConfig","Executive","ExistentialDeposit","ExpectedBlockTime","ExpectedVotesPerBlock","FeedId","FeedProcessorKind","Feeds","Feeds","Feeds","Feeds","FirstFarmer","GenesisConfig","GrandpaFinalityVerifier","GrandpaFinalityVerifier","Header","HoldIdentifier","InitialDomainTxRange","MILLISECS_PER_BLOCK","MaxBundlesPerBlock","MaxDomainBlockSize","MaxDomainBlockWeight","MaxDomainNameLength","MaxFeeds","MaxHolds","MaxPendingStakingOperation","MaximumReceiptDrift","Messenger","Messenger","Messenger","Messenger","MinOperatorStake","MinSectorLifetime","MinVestedTransfer","ObjectStore","ObjectStore","ObjectStore","OffencesSubspace","OffencesSubspace","OnXDMRewards","OriginCaller","PalletInfo","ParachainLike","PolkadotLike","PotEntropyInjectionDelay","PotEntropyInjectionInterval","PotEntropyInjectionLookbackDepth","RecentHistoryFraction","RecentSegments","RelayConfirmationDepth","Rewards","Rewards","RootFarmer","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeCall","RuntimeConfigs","RuntimeConfigsConfig","RuntimeError","RuntimeEvent","RuntimeFreezeReason","RuntimeGenesisConfig","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","SS58Prefix","SelfChainId","SessionKeys","ShouldAdjustSolutionRange","SignedExtra","SlotProbability","StakeEpochDuration","StakeWithdrawalLockingPeriod","StakingOnReward","StorageFeesEscrowBlockReward","StorageFeesEscrowBlockTax","Subspace","Subspace","Subspace","Subspace","SubspaceBlockLength","SubspaceBlockWeights","SubspaceConfig","Sudo","Sudo","Sudo","Sudo","SudoConfig","SudoId","System","System","System","System","SystemConfig","Timestamp","Timestamp","TotalSpacePledged","TransactionFees","TransactionFees","TransactionPayment","TransactionPayment","TransactionPaymentConfig","Transporter","Transporter","Transporter","Transporter","TransporterEndpointId","TreasuryAccount","UncheckedExtrinsic","Utility","Utility","Utility","Utility","VERSION","Version","Vesting","Vesting","Vesting","Vesting","VestingConfig","Void","VoteReward","WASM_BINARY","WASM_BINARY_BLOATY","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account_nonce","add_filter","api","api_version","apply_extrinsic","as_system_ref","assimilate_storage","balances","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_messages","block_tree_pruning_depth","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","bundle_producer_election_params","caller","chain_constants","chain_id","check_inherents","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","construct_runtime_api","convert","crate_version","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_into_raw_public_keys","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","dispatch","dispatch_bypass_filter","domain_best_number","domain_best_number","domain_block_limit","domain_instance_data","domain_instantiation_id","domain_runtime_code","domain_state_root","domain_state_root","domain_tx_range","domains","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_block","execute_in_transaction","extract_block_object_mapping","extract_pre_validation_object","extract_proof","extract_segment_headers","extract_successful_bundles","extract_xdm_proof_state_roots","extrinsics_shuffling_seed","feed_processor","filter_call","finalize_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_dispatch_error","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate","generate_session_keys","genesis_state_root","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_metadata","get_call_names","get_dispatch_info","get_endpoint_handler","get_module_names","get_raw","global_randomnesses","has_api","has_api_with","head_receipt_number","history_size","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inbox_response_message_unsigned","index","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize_block","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_caller","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_raw_public_keys","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","into_system","is_clear","is_domain_info_confirmed","is_in_block_list","is_inherent","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","key_ids","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_pieces_in_sector","metadata","metadata","metadata_at_version","metadata_at_version","metadata_versions","metadata_versions","module_name","name","native_version","non_empty_er_exists","none","none","offchain_worker","oldest_receipt_number","on_reward","on_xdm_rewards","operator","outbox_message_unsigned","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pre_dispatch","proof_recorder","query_fee_details","query_info","query_length_to_fee","query_weight_to_fee","record_proof","register_extension","relay_confirmation_depth","reset_filter","root","root","root_plot_public_key","runtime_configs","runtime_id","segment_commitment","serialize","serialize","serialize","set_call_context","set_caller_from","should_adjust_solution_range","should_relay_inbox_message_response","should_relay_outbox_message","signed","signed","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot_duration","solution_ranges","staking_pending_deposit","staking_pending_unlock","staking_staked","submit_bundle_unsigned","submit_report_equivocation_extrinsic","submit_vote_extrinsic","subspace","sudo","system","system","timestamp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_payment","try_convert_back","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_transaction","validate_unsigned","validated_object_call_hashes","version","vesting","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","dispatch"],"q":[[0,"subspace_runtime"],[2191,"subspace_runtime::api"]],"d":["","The address format for describing accounts.","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","","Anyone can author new blocks at genesis.","","","","","","Block type as expected by this runtime.","","","","","","","Content addressable Feed processor,","","","","Runtime upgrade is delayed for 1 day at 6 sec block time.","","","","","","","","Executive: handles dispatch to the various modules.","","","","","FeedProcessorId represents the available FeedProcessor …","","","","","Author of the first block will be able to author blocks …","","","","Block header type as expected by this runtime.","","","Since Subspace is probabilistic this is the average …","","Use the consensus chain’s <code>Normal</code> extrinsics block size …","Use the consensus chain’s <code>Normal</code> extrinsics block weight …","","","","","","","","","","","","","","","","","","","","Provides an implementation of <code>PalletInfo</code> to provide …","Parachain Feed processor that just indexes the entire block","Polkadot like relay chain Feed processor that validates …","","","","","","","","","Specified root farmer is allowed to author blocks unless …","","","Implements all runtime apis for the client side.","","","","","","A reason for placing a freeze on funds.","","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing funds.","","","","","The SignedExtension to the basic transaction logic.","","","","","","","","","","","We allow for 3.75 MiB for <code>Normal</code> extrinsic with 5 MiB …","We allow for 2 seconds of compute with a 6 second average …","","","","","","","","","","","","","","","","","","","","","","","","","","","Unchecked extrinsic type as expected by this runtimeecode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Convert to runtime origin with caller being system signed …","Returns the argument unchanged.","Convert to runtime origin, using as filter: …","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Optionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Generate a set of keys with optionally using the given …","","","","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The version information used to identify this runtime when …","","Create with system none origin and …","","","","","","","","","","","","","","","","","","","","","","","Create with system root origin and …","","","","","","","","","","","","","","","Create with system signed origin and …i":[0,0,0,0,0,0,0,0,0,49,0,37,50,38,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,35,37,50,38,0,0,0,0,0,0,0,0,37,50,38,49,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,37,50,38,0,0,0,0,37,38,0,37,0,0,0,33,33,0,0,0,0,0,0,0,37,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,50,38,0,0,0,0,37,50,38,0,0,0,37,50,38,0,0,38,0,0,37,0,37,0,0,37,50,38,0,0,0,0,37,50,38,0,0,0,37,50,38,0,14,0,0,0,33,34,35,36,37,4,14,38,39,40,41,42,36,4,0,8,36,14,16,16,33,34,35,49,37,50,14,38,39,40,41,42,33,34,35,49,37,50,14,38,39,40,41,42,33,34,35,49,37,50,14,38,39,40,41,42,36,36,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,16,36,4,36,36,36,33,33,34,35,36,37,4,14,38,39,40,41,42,33,34,35,36,37,4,14,38,39,40,41,42,35,39,40,41,42,221,176,220,33,34,35,49,37,50,14,38,39,40,41,42,33,34,35,49,37,50,14,38,39,40,41,42,33,34,35,49,37,50,14,38,39,40,41,42,34,36,33,34,35,49,37,50,14,38,39,40,41,42,33,49,16,35,39,40,41,42,35,39,40,41,42,35,39,40,41,42,35,39,40,41,42,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,34,49,16,38,38,174,36,36,36,35,36,174,36,36,16,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,33,34,35,49,37,50,14,38,36,33,34,35,36,37,14,38,39,40,41,42,33,33,33,34,34,34,35,35,35,36,36,36,37,37,37,14,14,14,38,38,38,39,39,39,40,40,40,41,41,41,42,42,42,36,8,36,36,8,36,36,36,36,36,4,36,33,34,35,49,36,37,50,4,14,38,39,40,41,42,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,50,50,50,50,50,50,50,50,50,50,50,50,4,4,4,4,14,14,38,38,38,38,38,38,38,38,38,38,38,38,38,16,39,40,41,42,221,8,50,170,170,171,171,172,172,173,173,174,174,175,175,176,176,177,177,33,33,34,34,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,35,35,194,194,195,195,196,196,197,197,198,198,199,199,200,200,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,49,49,220,220,36,36,37,37,50,50,4,4,14,14,38,38,16,16,39,39,40,40,41,41,42,42,221,221,8,8,170,170,171,171,172,172,173,173,174,174,175,175,176,176,177,177,33,33,34,34,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,35,35,194,194,195,195,196,196,197,197,198,198,199,199,200,200,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,49,49,220,220,36,36,37,37,50,50,4,4,14,14,38,38,16,16,39,39,40,40,41,41,42,42,221,221,8,8,34,36,36,170,171,172,173,178,178,178,179,179,179,180,180,180,181,181,181,182,182,182,183,183,183,184,184,184,185,185,185,186,186,186,187,187,187,188,188,188,189,189,189,190,190,190,191,191,191,192,192,192,193,193,193,194,194,194,195,195,195,196,196,196,197,197,197,198,198,198,199,199,199,200,200,200,201,201,201,202,202,202,203,203,203,204,204,204,205,205,205,206,206,206,207,207,207,208,208,208,209,209,209,210,210,210,211,211,211,212,212,212,213,213,213,214,214,214,215,215,215,216,216,216,217,217,217,218,218,218,219,219,219,38,38,38,36,38,34,36,8,8,36,36,33,34,35,49,37,50,14,38,39,40,41,42,36,220,36,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,36,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,4,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,34,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,8,14,33,36,36,36,38,38,38,38,38,38,38,38,38,38,38,38,34,35,14,39,40,41,42,36,36,36,36,36,36,36,220,220,0,36,4,4,36,36,177,175,36,36,35,39,40,41,42,36,8,36,36,36,36,8,8,36,4,4,4,36,16,36,36,34,49,16,8,4,36,36,36,4,4,33,34,35,49,37,50,14,38,36,36,35,35,35,36,36,36,16,16,16,14,36,33,34,35,49,37,50,14,38,39,40,41,42,33,34,35,36,37,4,14,38,39,40,41,42,16,176,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,50,50,50,50,50,50,50,50,50,50,50,50,4,14,38,16,39,40,41,42,221,8,4,33,34,35,49,37,50,14,38,39,40,41,42,33,34,35,49,37,50,14,38,39,40,41,42,33,34,35,49,37,50,14,38,39,40,41,42,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,33,34,35,49,36,37,50,14,38,39,40,41,42,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,36,36,36,36,16,170,171,172,173,174,175,176,177,33,34,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,49,220,36,37,50,4,14,38,16,39,40,41,42,221,8,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[2,3],[[4,5]],0,[[[8,[6,[7,[6]]]]],[[12,[[10,[9]],11]]]],[[],13],[14,[[10,[15]]]],[[16,17],[[12,[18]]]],0,[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],23],[[],[[25,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16],[26,[[10,[[28,[27]]]]]],[4],[[],29],[[],30],[[24,31],32],[[]],[33,33],[34,34],[35,35],[36,36],[37,37],[4,4],[14,14],[38,38],[39,39],[40,40],[41,41],[42,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[35,35],43],[[39,39],43],[[40,40],43],[[41,41],43],[[42,42],43],[[[7,[6]]],44],[2,45],[[],[[10,[46]]]],[47,[[12,[33,48]]]],[47,[[12,[34,48]]]],[47,[[12,[35,48]]]],[47,[[12,[49,48]]]],[47,[[12,[37,48]]]],[47,[[12,[50,48]]]],[47,[[12,[14,48]]]],[47,[[12,[38,48]]]],[47,[[12,[39,48]]]],[47,[[12,[40,48]]]],[47,[[12,[41,48]]]],[47,[[12,[42,48]]]],[[[51,[19]]],[[12,[48]]]],[[[51,[19]]],[[12,[48]]]],[[[51,[19]]],[[12,[48]]]],[[[51,[19]]],[[12,[48]]]],[[[51,[19]]],[[12,[48]]]],[[[51,[19]]],[[12,[48]]]],[[[51,[19]]],[[12,[48]]]],[[[51,[19]]],[[12,[48]]]],[[[51,[19]]],[[12,[48]]]],[[[51,[19]]],[[12,[48]]]],[[[51,[19]]],[[12,[48]]]],[[[51,[19]]],[[12,[48]]]],[[9,[51,[19]]],[[12,[48]]]],[[9,[51,[19]]],[[12,[48]]]],[[9,[51,[19]]],[[12,[48]]]],[[9,[51,[19]]],[[12,[48]]]],[[9,[51,[19]]],[[12,[48]]]],[[9,[51,[19]]],[[12,[48]]]],[[9,[51,[19]]],[[12,[48]]]],[[9,[51,[19]]],[[12,[48]]]],[[9,[51,[19]]],[[12,[48]]]],[[9,[51,[19]]],[[12,[48]]]],[[9,[51,[19]]],[[12,[48]]]],[[9,[51,[19]]],[[12,[48]]]],[[[51,[19]]],[[10,[22]]]],[[[22,[19]]],[[10,[22]]]],[[9,47],[[12,[48]]]],[[9,47],[[12,[48]]]],[[9,47],[[12,[48]]]],[[9,47],[[12,[48]]]],[[9,47],[[12,[48]]]],[[9,47],[[12,[48]]]],[[9,47],[[12,[48]]]],[[9,47],[[12,[48]]]],[[9,47],[[12,[48]]]],[[9,47],[[12,[48]]]],[[9,47],[[12,[48]]]],[[9,47],[[12,[48]]]],[[],33],[[],49],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[53,[[12,[34]]]],[53,[[12,[49]]]],[53,[[12,[16]]]],[[38,4],54],[[38,4],54],[26,[[10,[55]]]],[26,[[10,[56]]]],[26,[[10,[57]]]],[26,10],[26,35],[26,[[10,[[22,[19]]]]]],[[26,55,58],[[10,[58]]]],[[26,56,59],[[10,[59]]]],[26,60],0,[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[[33,[0,[61,62]]]],[[34,[0,[61,62]]]],[[35,[0,[61,62]]]],[[49,[0,[61,62]]]],[[37,[0,[61,62]]]],[[50,[0,[61,62]]]],[[14,[0,[61,62]]]],[[38,[0,[61,62]]]],[[],[[12,[9]]]],[[33,33],63],[[34,34],63],[[35,35],63],[[36,36],63],[[37,37],63],[[14,14],63],[[38,38],63],[[39,39],63],[[40,40],63],[[41,41],63],[[42,42],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[24],[[[8,[6,[7,[6]]]],64]],[[24,[22,[58]]],65],[[],[[66,[24,56,59]]]],[[[8,[6,[7,[6]]]]],[[10,[67]]]],[[],[[10,[[22,[68]]]]]],[[26,22],[[69,[24,56,59,27]]]],[[[22,[19]]],[[10,[[70,[55]]]]]],[[],71],[[],[[73,[72]]]],[4,63],[[]],[[33,74],75],[[34,74],75],[[35,74],75],[[49,74],[[12,[76]]]],[[36,74],75],[[37,74],75],[[50,74],75],[[4,74],[[12,[76]]]],[[14,74],75],[[38,74],75],[[39,74],75],[[40,74],75],[[41,74],75],[[42,74],75],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[77,[36]]],37],[[[78,[36]]],37],[[[79,[36]]],37],[[[80,[36]]],37],[[[81,[36]]],37],[[[82,[36]]],37],[83,37],[[[84,[36]]],37],[[]],[[[85,[36]]],37],[[[86,[36]]],37],[87,37],[[[88,[36]]],37],[[[89,[36]]],37],[[[90,[36]]],37],[[[91,[36]]],37],[[[92,[36]]],50],[[[93,[36]]],50],[[[94,[36]]],50],[[[95,[36]]],50],[[[96,[36]]],50],[[[97,[36]]],50],[[[98,[36]]],50],[[]],[[[99,[36]]],50],[[[100,[36]]],50],[[[101,[36]]],50],[[[102,[36]]],50],[14,4],[10,4],[[]],[[[103,[36]]],4],[[[103,[36]]],14],[[]],[[[105,[104,36]]],38],[[[105,[106,36]]],38],[[[105,[107,36]]],38],[[[105,[108,36]]],38],[[[105,[109,36]]],38],[[[105,[110,36]]],38],[[]],[[[105,[111,36]]],38],[[[105,[112,36]]],38],[[[105,[113,36]]],38],[[[105,[114,36]]],38],[[[105,[115,36]]],38],[[[105,[116,36]]],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[117,[[10,[50]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[[22,[19]]]]],[[22,[19]]]],[[[10,[[22,[19]]]]],[[22,[19]]]],[26,[[10,[118]]]],[[],55],[[],27],[[],119],[[],119],[[],120],[[],[[121,[120]]]],[[],120],[[],[[121,[55]]]],[[],55],[[],55],[[],122],[[],122],[[],[[121,[122]]]],[[],123],[[],123],[[],[[121,[123]]]],[[],124],[[],124],[[],[[121,[124]]]],[[],[[121,[55]]]],[[],55],[[],55],[[],19],[[],[[121,[19]]]],[[],19],[[],124],[[],[[121,[124]]]],[[],124],[[]],[[]],[[],121],[[],[[121,[125]]]],[[],125],[[],125],[[],[[121,[9]]]],[[],9],[[],9],[[],126],[[],[[121,[126]]]],[[],126],[[]],[[],121],[[]],[[],126],[[],126],[[],[[121,[126]]]],[[],63],[[],63],[[],[[121,[63]]]],[[],27],[[],[[121,[27]]]],[[],27],[[],[[121,[9]]]],[[],9],[[],9],[[]],[[]],[[],121],[[]],[[],121],[[]],[[],55],[[],[[121,[55]]]],[[],55],[[],30],[[],30],[[],[[121,[30]]]],[[],[[121,[127]]]],[[],127],[[],127],[[],[[121,[55]]]],[[],55],[[],55],[[],128],[[],[[121,[128]]]],[[],128],[[],128],[[],[[121,[128]]]],[[],128],[[],55],[[],[[121,[55]]]],[[],55],[[],[[121,[27]]]],[[],27],[[],27],[[],9],[[],[[121,[9]]]],[[],9],[[],129],[[],129],[[],[[121,[129]]]],[[],9],[[],9],[[],[[121,[9]]]],[[],27],[[],[[121,[27]]]],[[],27],[[],9],[[],9],[[],[[121,[9]]]],[[],9],[[],[[121,[9]]]],[[],9],[[],56],[[],56],[[],[[121,[56]]]],[[],56],[[],[[121,[56]]]],[[],56],[[],[[121,[2]]]],[[],2],[[],2],[[],[[121,[9]]]],[[],9],[[],9],[[],2],[[],[[121,[2]]]],[[],2],[[],27],[[],[[121,[27]]]],[[],27],[[],27],[[],27],[[],[[121,[27]]]],[[],9],[[],9],[[],[[121,[9]]]],[[],27],[[],27],[[],[[121,[27]]]],[38,130],[131,[[51,[131]]]],[38,132],[133,[[10,[[73,[134]]]]]],[[],[[51,[131]]]],[[34,135],[[51,[19]]]],[[],136],[[[8,[6,[7,[6]]]]],[[12,[63,11]]]],[[[8,[6,[7,[6]]]],5],[[12,[63,11]]]],[26,[[25,[24]]]],[[],126],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[[137,[55]]],10],[[],[[10,[52]]]],[31,22],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[6,[7,[6]]]],[139,[[138,[6]]]]],[[12,[[140,[6]],18]]]],[14,[[10,[15]]]],[[],63],[[26,[141,[55]]],63],[142,63],[[],63],[38,[[10,[[105,[116,36]]]]]],[38,[[10,[[105,[112,36]]]]]],[38,[[10,[[105,[113,36]]]]]],[38,[[10,[[105,[110,36]]]]]],[38,[[10,[[105,[106,36]]]]]],[38,[[10,[[105,[104,36]]]]]],[38,[[10,[[105,[109,36]]]]]],[38,[[10,[[105,[115,36]]]]]],[38,[[10,[[105,[108,36]]]]]],[38,[[10,[[105,[107,36]]]]]],[38,[[10,[[105,[114,36]]]]]],[38,[[10,[[105,[111,36]]]]]],[[],[[51,[135]]]],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],143],[[],144],[[],145],[9,[[10,[145]]]],[9,[[10,[145]]]],[[],[[22,[9]]]],[[],[[22,[9]]]],[[],[[10,[131]]]],[[],[[10,[131]]]],[[],146],[26,63],[[],4],[[],4],[[]],[26,[[25,[24]]]],[[2,27]],[27],[147,10],[[[137,[55]]],10],[[35,35],[[10,[43]]]],[[39,39],[[10,[43]]]],[[40,40],[[10,[43]]]],[[41,41],[[10,[43]]]],[[42,42],[[10,[43]]]],[[],[[12,[148]]]],[[[8,[6,[7,[6]]]]],[[10,[[149,[6]]]]]],[9,[[150,[27]]]],[9,[[151,[27]]]],[9,27],[129,27],[[[8,[6,[7,[6]]]]]],[[[8,[6,[7,[6]]]],152]],[[],55],[4],[[],4],[[],4],[[],[[10,[142]]]],0,[26,[[10,[153]]]],[154,[[10,[155]]]],[[34,156],12],[[49,156],12],[[16,156],12],[[[8,[6,[7,[6]]]],157]],[[4,[158,[4]]]],[[],63],[[30,159],63],[[30,159],63],[[],4],[[],4],[33,52],[34,52],[35,52],[49,52],[37,52],[50,52],[14,52],[38,52],[[],160],[[],161],[147,35],[147,35],[147,35],[[[162,[[25,[24]],56,59,27]]]],[163,10],[[[164,[[25,[24]],142]]]],0,0,0,0,[[],125],[[[51,[19]]],[[22,[19,21]]]],[[[51,[19]]],[[22,[19,21]]]],[[[51,[19]]],[[22,[19,21]]]],[[[51,[19]]],[[22,[19,21]]]],[[[51,[19]]],[[22,[19,21]]]],[[[51,[19]]],[[22,[19,21]]]],[[[51,[19]]],[[22,[19,21]]]],[[[51,[19]]],[[22,[19,21]]]],[[[51,[19]]],[[22,[19,21]]]],[[[51,[19]]],[[22,[19,21]]]],[[[51,[19]]],[[22,[19,21]]]],[[[51,[19]]],[[22,[19,21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[45,[[10,[2]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[37,[[12,[[78,[36]]]]]],[37,[[12,[[85,[36]]]]]],[37,[[12,[[89,[36]]]]]],[37,[[12,[87]]]],[37,[[12,[[90,[36]]]]]],[37,[[12,[83]]]],[37,[[12,[[80,[36]]]]]],[37,[[12,[[79,[36]]]]]],[37,[[12,[[84,[36]]]]]],[[],12],[37,[[12,[[82,[36]]]]]],[37,[[12,[[91,[36]]]]]],[37,[[12,[[88,[36]]]]]],[37,[[12,[[81,[36]]]]]],[37,[[12,[[86,[36]]]]]],[37,[[12,[[77,[36]]]]]],[50,[[12,[[100,[36]]]]]],[50,[[12,[[99,[36]]]]]],[50,[[12,[[94,[36]]]]]],[50,[[12,[[95,[36]]]]]],[50,[[12,[[93,[36]]]]]],[50,[[12,[[97,[36]]]]]],[50,[[12,[[96,[36]]]]]],[50,[[12,[[102,[36]]]]]],[50,[[12,[[92,[36]]]]]],[[],12],[50,[[12,[[101,[36]]]]]],[50,[[12,[[98,[36]]]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[4,64],[[12,[4]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],166],[[],166],[[],166],[[],[[166,[167]]]],[[],166],[[],166],[[],166],[[],166],[[],166],[[],166],[[],166],[[],166],[[],166],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[168,169],[168,169],[[],[[22,[58]]]],[[],120],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[131,[51,[19]]],[[10,[[22,[19]]]]]]],"c":[2,3,5,7,45],"p":[[3,"Private"],[6,"AccountId"],[6,"Nonce"],[3,"RuntimeOrigin"],[8,"Fn"],[8,"Block"],[8,"CallApiAt"],[3,"RuntimeApiImpl"],[15,"u32"],[4,"Option"],[4,"ApiError"],[4,"Result"],[6,"ApplyExtrinsicResult"],[4,"OriginCaller"],[4,"RawOrigin"],[3,"RuntimeGenesisConfig"],[3,"Storage"],[3,"String"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"BlockMessagesWithStorageKey"],[6,"Block"],[6,"NumberFor"],[3,"DomainId"],[6,"Balance"],[3,"BundleProducerElectionParams"],[4,"ChainConstants"],[4,"ChainId"],[3,"InherentData"],[3,"CheckInherentsResult"],[4,"FeedProcessorKind"],[3,"SessionKeys"],[4,"HoldIdentifier"],[3,"Runtime"],[4,"RuntimeEvent"],[4,"RuntimeCall"],[4,"RuntimeFreezeReason"],[4,"RuntimeHoldReason"],[4,"RuntimeLockId"],[4,"RuntimeSlashReason"],[4,"Ordering"],[3,"ApiRef"],[4,"MultiAccountId"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"AllowAuthoringBy"],[4,"RuntimeError"],[15,"slice"],[15,"usize"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[6,"BlockNumber"],[6,"BlockNumber"],[3,"DomainBlockLimit"],[6,"Hash"],[6,"Hash"],[3,"U256"],[8,"Output"],[8,"Sized"],[15,"bool"],[8,"FnOnce"],[3,"BlockObjectMapping"],[4,"PreValidationObject"],[3,"StorageProof"],[4,"SegmentHeader"],[6,"OpaqueBundles"],[3,"ExtractedStateRootsFromProof"],[3,"Randomness"],[8,"FeedProcessor"],[3,"Box"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[6,"Origin"],[6,"Vesting"],[6,"CallableCallFor"],[6,"Subspace"],[6,"Transporter"],[6,"Utility"],[6,"Messenger"],[6,"ObjectStore"],[6,"Timestamp"],[6,"Balances"],[6,"Feeds"],[6,"Sudo"],[6,"Domains"],[6,"System"],[4,"DispatchError"],[3,"H256"],[15,"u128"],[3,"RuntimeVersion"],[8,"From"],[3,"BlockWeights"],[3,"BlockLength"],[6,"SlotNumber"],[6,"Moment"],[3,"HistorySize"],[6,"EndpointId"],[15,"u64"],[3,"Weight"],[3,"CallMetadata"],[15,"str"],[3,"DispatchInfo"],[4,"Endpoint"],[8,"EndpointHandler"],[3,"KeyTypeId"],[3,"GlobalRandomnesses"],[3,"CrossDomainMessage"],[6,"HashingFor"],[8,"Backend"],[6,"StorageChanges"],[3,"BlockInfo"],[6,"FarmerPublicKey"],[15,"u16"],[3,"RuntimeMetadataPrefixed"],[3,"OpaqueMetadata"],[3,"NativeVersion"],[6,"OperatorId"],[4,"TransactionValidityError"],[6,"ProofRecorder"],[3,"FeeDetails"],[3,"RuntimeDispatchInfo"],[8,"Extension"],[6,"RuntimeId"],[3,"SegmentIndex"],[6,"SegmentCommitment"],[8,"Serializer"],[4,"CallContext"],[8,"Into"],[6,"MessageId"],[3,"SlotDuration"],[3,"SolutionRanges"],[6,"OpaqueBundle"],[6,"EquivocationProof"],[3,"SignedVote"],[3,"TypeId"],[3,"Type"],[4,"MetaForm"],[4,"TransactionSource"],[6,"TransactionValidity"],[3,"ConfirmationDepthK"],[3,"CreditSupply"],[3,"TotalSpacePledged"],[3,"BlockchainHistorySize"],[3,"DomainInfo"],[3,"OnXDMRewards"],[3,"AccountIdConverter"],[3,"StakingOnReward"],[3,"Version"],[3,"BlockHashCount"],[3,"SubspaceBlockWeights"],[3,"SubspaceBlockLength"],[3,"BlockAuthoringDelay"],[3,"PotEntropyInjectionInterval"],[3,"PotEntropyInjectionLookbackDepth"],[3,"PotEntropyInjectionDelay"],[3,"SlotProbability"],[3,"ExpectedBlockTime"],[3,"ExpectedVotesPerBlock"],[3,"RecentSegments"],[3,"RecentHistoryFraction"],[3,"MinSectorLifetime"],[3,"ShouldAdjustSolutionRange"],[3,"ExistentialDeposit"],[3,"MaxHolds"],[3,"StorageFeesEscrowBlockReward"],[3,"StorageFeesEscrowBlockTax"],[3,"RelayConfirmationDepth"],[3,"SelfChainId"],[3,"TransporterEndpointId"],[3,"MaximumReceiptDrift"],[3,"InitialDomainTxRange"],[3,"DomainTxRangeAdjustmentInterval"],[3,"DomainRuntimeUpgradeDelay"],[3,"MinOperatorStake"],[3,"MaxDomainBlockSize"],[3,"MaxDomainBlockWeight"],[3,"MaxBundlesPerBlock"],[3,"DomainInstantiationDeposit"],[3,"MaxDomainNameLength"],[3,"BlockTreePruningDepth"],[3,"StakeWithdrawalLockingPeriod"],[3,"StakeEpochDuration"],[3,"TreasuryAccount"],[3,"MaxPendingStakingOperation"],[3,"SudoId"],[3,"BlockReward"],[3,"VoteReward"],[3,"MaxFeeds"],[3,"MinVestedTransfer"],[3,"PalletInfo"],[3,"RuntimeApi"]]},\
"subspace_runtime_primitives":{"doc":"Runtime primitives for Subspace Network.","t":"GGGRIIGRGGRRRRGKKAGGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AccountId","Balance","BlockNumber","DECIMAL_PLACES","FindBlockRewardAddress","FindVotingRewardAddresses","Hash","MIN_REPLICATION_FACTOR","Moment","Nonce","SHANNON","SSC","STORAGE_FEES_ESCROW_BLOCK_REWARD","STORAGE_FEES_ESCROW_BLOCK_TAX","Signature","find_block_reward_address","find_voting_reward_addresses","opaque","Block","Header","UncheckedExtrinsic","__clone_box","borrow","borrow_mut","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from","from_bytes","from_mut","from_ref","init","into","is_clear","serialize","size_hint","to_keyed_vec","to_owned","try_from","try_into","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","vzip"],"q":[[0,"subspace_runtime_primitives"],[18,"subspace_runtime_primitives::opaque"]],"d":["Some way of identifying an account on the chain. We …","Balance of an account.","Block number in Subspace network.","Subspace Credits have 18 decimal places.","A trait for finding the address for a block reward based …","A trait for finding the addresses for voting reward based …","A hash of some data used by the chain.","Minimum desired number of replicas of the blockchain to be …","Type used for expressing timestamp.","Index of a transaction in the chain.","The smallest unit of the token is called Shannon.","One Subspace Credit.","How much (ratio) of storage fees escrow should be given to …","How much (ratio) of storage fees collected in a block …","Alias to 512-bit hash when used in the context of a …","Find the address for a block rewards based on the …","Find the addresses for voting rewards based on …","Opaque types. These are used by the CLI to instantiate …","Opaque block type.","Opaque block header type.","Simple blob to hold an extrinsic without committing to its …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],2],0,0,0,0,[3],[[]],[[]],[[]],[4,4],[[]],[5,[[7,[4,6]]]],[[[9,[8]]],[[7,[6]]]],[[10,[9,[8]]],[[7,[6]]]],[[10,5],[[7,[6]]]],[[],4],[11],[11],[12,[[7,[4]]]],[11],[4,[[2,[8,13]]]],[[4,[0,[14,15]]]],[[4,4],16],[[],16],[[],16],[[],16],[[4,17],[[7,[18]]]],[[[21,[19,19,19,20]]],4],[[]],[[[9,[8]]],[[7,[4,6]]]],[[]],[[]],[[],11],[[]],[[],16],[[4,22],7],[4,11],[[[9,[8]]],[[2,[8,13]]]],[[]],[[],7],[[],7],[[],23],[[],[[25,[24]]]],[[]],[[]],[[4,26]],[[]]],"c":[],"p":[[4,"Option"],[3,"Vec"],[3,"Private"],[3,"UncheckedExtrinsic"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"u8"],[15,"slice"],[15,"u32"],[15,"usize"],[8,"Deserializer"],[3,"Global"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[3,"Error"],[8,"Encode"],[8,"SignedExtension"],[3,"UncheckedExtrinsic"],[8,"Serializer"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[8,"FnOnce"],[8,"FindBlockRewardAddress"],[8,"FindVotingRewardAddresses"]]},\
"subspace_service":{"doc":"Service and ServiceFactory implementation. Specialized …","t":"NNNCEGGGGGGNDNDNNNDNENMMMMMLLLLLLLLLLMLLLLLLLLLLLLLLLAMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFFMLMAMMMLMMMMMMLMLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLMMMMNDENLMMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLMLMLLLLLLLLLLLLLLLLDMLLMMFMLLLMLLLLLLLLLLLLMMMMMMMLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AddrFormatInvalid","Consensus","Create","DsnConfig","Error","FraudProofVerifier","FullBackend","FullClient","FullSelectChain","InvalidStateTransitionProofVerifier","InvalidTransactionProofVerifier","Io","NewFull","Other","OtherPartialComponents","Prometheus","Reuse","Sub","SubspaceConfiguration","SubspaceDsn","SubspaceNetworking","Telemetry","archived_segment_notification_stream","backend","base","block_import","block_importing_notification_stream","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","dsn","enable_subspace_block_relay","fmt","fmt","fmt","fmt","force_new_slot_notifications","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","network_service","network_starter","new_full","new_partial","new_slot_notification_stream","provide","reward_signing_notification_stream","rpc","rpc_handlers","segment_headers_store","select_chain","source","subspace_link","subspace_networking","sync_from_dsn","sync_service","task_manager","telemetry","to_string","transaction_pool","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tx_pre_validator","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","bootstrap_nodes","config","metrics_registry","node","CreationError","DsnConfig","DsnConfigurationError","NetworkParameterManagerError","__clone_box","allow_non_global_addresses_in_dht","base_path","bootstrap_nodes","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","external_addresses","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","keypair","listen_on","max_in_connections","max_out_connections","max_pending_in_connections","max_pending_out_connections","provide","reserved_peers","source","target_connections","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","FullDeps","archived_segment_notification_stream","borrow","borrow_mut","chain_spec","client","create_full","deny_unsafe","deref","deref_mut","drop","dsn_bootstrap_nodes","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","kzg","new_slot_notification_stream","pool","reward_signing_notification_stream","segment_headers_store","subscription_executor","sync_oracle","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","ConsensusChainTxPreValidator","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","new","pre_validate_transaction","to_owned","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"subspace_service"],[183,"subspace_service::SubspaceNetworking"],[187,"subspace_service::dsn"],[263,"subspace_service::rpc"],[301,"subspace_service::tx_pre_validator"]],"d":["Address parsing error.","Substrate consensus error.","Networking must be instantiated internally","","Error type for Subspace service.","","","Subspace-like full client.","","","","IO error.","Full node along with some other components.","Other.","Other partial components returned by <code>new_partial()</code>","Prometheus error.","Use existing networking instance","Substrate service error.","Subspace-specific service configuration.","Subspace networking (DSN) error.","Subspace networking instantiation variant","Telemetry error.","Archived segment stream.","Full client backend.","Base configuration.","Subspace block import","Stream of notifications about blocks about to be imported.","","","","","","","","","","","Full client.","","","","","","","","","","","","","","","","","Use the block request handler implementation from subspace …","","","","","Whether slot notifications need to be present even if node …","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Network service.","Network starter.","Builds a new service for a full client.","Creates <code>PartialComponents</code> for Subspace client.","New slot stream.","","Block signing stream.","A collection of node-specific RPC methods. Substrate …","RPC handlers.","Segment headers store","Chain selection rule.","","Subspace link","Subspace networking (DSN).","Enables DSN-sync on startup.","Sync service.","Task manager.","Telemetry","","Transaction pool.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bootstrap nodes used (that can be also sent to the farmer …","Configuration to use for DSN instantiation","DSN metrics registry (libp2p type).","Node instance","Can’t instantiate the DSN.","DSN configuration parameters.","Errors that might happen during DSN configuration.","Network parameter manager error.","","Determines whether we allow keeping non-global (private, …","System base path.","Bootstrap nodes for DSN.","","","","","","","","","","","","","Known external addresses","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Identity keypair of a node used for authenticated …","Where local DSN node will listen for incoming connections.","Defines max established incoming swarm connection limit.","Defines max established outgoing swarm connection limit.","Defines max pending incoming swarm connection limit.","Defines max pending outgoing swarm connection limit.","","Reserved nodes for DSN.","","Defines target total (in and out) connection number for …","","","","","","","","","","","","","","","","","Full client dependencies.","A stream with notifications about archived segment …","","","A copy of the chain spec.","The client instance to use.","Instantiate all full RPC extensions.","Whether to deny unsafe calls.","","","","Bootstrap nodes for DSN.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Kzg instance.","A stream with notifications about new slot arrival with …","Transaction pool instance.","A stream with notifications about headers that need to be …","Segment header provider.","Executor to drive the subscription manager in the Grandpa …","Subspace sync oracle.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[2,2,5,0,0,0,0,0,0,0,0,2,0,2,0,2,5,2,0,2,0,2,35,35,6,31,35,31,35,2,5,6,31,35,2,5,6,35,31,35,2,5,6,31,35,2,5,6,31,35,2,5,6,0,6,2,2,5,6,6,31,35,2,2,2,2,2,2,2,2,5,6,31,31,35,35,2,2,5,5,6,6,31,31,35,35,2,2,5,5,6,6,31,35,2,5,6,31,35,2,5,6,31,35,2,5,6,31,35,2,5,6,31,35,2,5,6,31,35,2,5,6,31,35,2,5,6,35,35,0,0,35,2,35,0,35,31,35,2,31,6,6,35,35,31,2,35,31,35,2,5,6,31,35,2,5,6,0,31,35,2,5,6,31,35,2,5,6,31,35,2,5,6,31,35,2,5,6,31,35,2,5,6,65,66,65,65,11,0,0,11,46,46,46,46,11,46,11,46,46,46,11,46,11,46,11,46,46,11,11,46,11,11,11,46,11,11,46,46,11,11,46,46,11,46,11,46,11,46,11,46,11,46,11,46,11,46,46,46,46,46,46,46,11,46,11,46,46,11,11,46,11,46,11,46,11,46,11,46,11,46,11,46,0,57,57,57,57,57,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[2,3],4],[[2,3],4],[[5,3],4],[[6,3],4],0,[[]],[[]],[7,2],[8,2],[[]],[9,2],[10,2],[11,2],[12,2],[13,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[[15,[14]]],[[15,[16,14]]]],[[[15,[14]]],[[15,[16,14]]]],[[[15,[14]]],[[15,[16,14]]]],[[[15,[14]]],[[15,[16,14]]]],[[[15,[14]]],[[15,[16,14]]]],[[[17,[14]]],[[17,[16,14]]]],[[[17,[14]]],[[17,[16,14]]]],[[[17,[14]]],[[17,[16,14]]]],[[[17,[14]]],[[17,[16,14]]]],[[[17,[14]]],[[17,[16,14]]]],[[[18,[14]]],[[18,[16,14]]]],[[[18,[14]]],[[18,[16,14]]]],[[[18,[14]]],[[18,[16,14]]]],[[[18,[14]]],[[18,[16,14]]]],[[[18,[14]]],[[18,[16,14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[6,[32,[[24,[[0,[[20,[19,[24,[[0,[[20,[19,[24,[[0,[20,21,22]],23]]]],21,22]],23]]]],21,22]],23]],25,26,[27,[19]],[30,[19,[24,[[0,[[20,[19,[24,[[0,[[20,[19,24]],21,22]],23]]]],21,22]],23]],[29,[19,[24,[[0,[[20,[19,[24,[[0,[[20,[19,24]],21,22]],23]]]],21,22]],23]],[28,[[0,[[20,[19,[24,[[0,[[20,[19,24]],21,22]],23]]]],21,22]],23]]]]]],[31,[[0,[[20,[19,[24,[[0,[[20,[19,[24,[[0,[20,21,22]],23]]]],21,22]],23]]]],21,22]],23]]]],33,34],[[36,[[35,[[24,[[0,[[20,[19,[24,[[0,[[20,[19,24]],21,22]],23]]]],21,22]],23]],[29,[19,[24,[[0,[[20,[19,[24,[[0,[[20,[19,24]],21,22]],23]]]],21,22]],23]],[28,[[0,[[20,[19,[24,[[0,[[20,[19,24]],21,22]],23]]]],21,22]],23]]]]]],2]]]],[[37,[39,[38]]],[[36,[[32,[[24,[[0,[[20,[19,[24,[[0,[[20,[19,24]],21,22]],23]]]],21,22]],23]],25,26,[27,[19]],[30,[19,[24,[[0,[[20,[19,[24,[[0,[[20,[19,24]],21,22]],23]]]],21,22]],23]],[29,[19,[24,[[0,[[20,[19,[24,[[0,[20,21,22]],23]]]],21,22]],23]],[28,[[0,[[20,[19,[24,[[0,[20,21,22]],23]]]],21,22]],23]]]]]],[31,[[0,[[20,[19,[24,[[0,[[20,[19,24]],21,22]],23]]]],21,22]],23]]]],10]]]],0,[40],0,0,0,0,0,[2,[[39,[41]]]],0,0,0,0,0,0,[[],42],0,[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,[[],43],[[],43],[[],43],[[],43],[[],43],[[],44],[[],44],[[],44],[[],44],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[45],0,0,0,[[]],[[]],[[]],[[]],[46,46],[[]],[1],[1],[1],[1],[1],[1],0,[[11,3],4],[[11,3],4],[[46,3],4],[47,11],[48,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[]],[[]],[[[15,[14]]],[[15,[16,14]]]],[[[15,[14]]],[[15,[16,14]]]],[[[17,[14]]],[[17,[16,14]]]],[[[17,[14]]],[[17,[16,14]]]],[[[18,[14]]],[[18,[16,14]]]],[[[18,[14]]],[[18,[16,14]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[40],0,[11,[[39,[41]]]],0,[[]],[[],42],[[],36],[[],36],[[],36],[[],36],[[],43],[[],43],[[],44],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],0,0,[[[57,[[0,[[49,[19]],[50,[19]],[51,[19]],[52,[19]],21,22]],53,[0,[54,21,22,55]],[0,[56,21,22]]]]],[[36,[58,[15,[41]]]]]],0,[1],[1],[1],0,[[]],[[]],[[]],[[]],[[]],[[],1],[[]],[[[15,[14]]],[[15,[16,14]]]],[[[17,[14]]],[[17,[16,14]]]],[[[18,[14]]],[[18,[16,14]]]],[[]],[[]],0,0,0,0,0,0,0,[[],36],[[],36],[[],43],[[],44],[[]],[[]],[[]],0,[45],[[]],[[]],[[[29,[55]]],[[29,[55]]]],[[]],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[],1],[[]],[[[15,[14]]],[[15,[16,14]]]],[[[17,[14]]],[[17,[16,14]]]],[[[18,[14]]],[[18,[16,14]]]],[[]],[[]],[[17,[15,[59]]],29],[[[29,[60,[0,[[49,[60]],21,22]],[0,[[61,[60]],55,21,22]]]],62],[[64,[[15,[63]]]]]],[[]],[[],36],[[],36],[[],43],[[],44],[[]],[[]],[[]]],"c":[],"p":[[15,"usize"],[4,"Error"],[3,"Formatter"],[6,"Result"],[4,"SubspaceNetworking"],[3,"SubspaceConfiguration"],[4,"Error"],[4,"Error"],[3,"AddrParseError"],[4,"Error"],[4,"DsnConfigurationError"],[3,"Error"],[4,"Error"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"Arc"],[3,"Rc"],[6,"Block"],[8,"ConstructRuntimeApi"],[8,"Send"],[8,"Sync"],[8,"NativeExecutionDispatch"],[6,"FullClient"],[6,"FullBackend"],[6,"FullSelectChain"],[6,"DefaultImportQueue"],[6,"FraudProofVerifier"],[3,"ConsensusChainTxPreValidator"],[6,"FullPool"],[3,"OtherPartialComponents"],[3,"PartialComponents"],[15,"bool"],[3,"SlotProportion"],[3,"NewFull"],[4,"Result"],[3,"Configuration"],[8,"Fn"],[4,"Option"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"TypeId"],[15,"str"],[3,"Private"],[3,"DsnConfig"],[4,"CreationError"],[4,"NetworkParametersPersistenceError"],[8,"ProvideRuntimeApi"],[8,"BlockBackend"],[8,"HeaderBackend"],[8,"HeaderMetadata"],[8,"TransactionPool"],[8,"SyncOracle"],[8,"Clone"],[8,"AuxStore"],[3,"FullDeps"],[3,"RpcModule"],[8,"SpawnNamed"],[8,"Block"],[8,"VerifyFraudProof"],[4,"TransactionSource"],[8,"Future"],[3,"Pin"],[13,"Reuse"],[13,"Create"]]},\
"subspace_solving":{"doc":"Set of modules that implement utilities for solving and …","t":"R","n":["REWARD_SIGNING_CONTEXT"],"q":[[0,"subspace_solving"]],"d":["Signing context used for creating reward signatures by …"],"i":[0],"f":[0],"c":[],"p":[]},\
"subspace_test_client":{"doc":"Subspace test client only.","t":"GGGDLLALLLALLLLLLLLLLLLLLFLLLLLLLGFFFFF","n":["Backend","Client","FraudProofVerifier","TestExecutorDispatch","borrow","borrow_mut","chain_spec","deref","deref_mut","dispatch","domain_chain_spec","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","native_version","start_farmer","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","TestChainSpec","get_account_id_from_seed","get_from_seed","subspace_local_testnet_config","get_account_id_from_seed","testnet_evm_genesis"],"q":[[0,"subspace_test_client"],[33,"subspace_test_client::chain_spec"],[37,"subspace_test_client::domain_chain_spec"]],"d":["The backend type being used by the test service.","The client type being used by the test service.","The fraud proof verifier being used the test service.","Subspace native executor instance.","","","Chain specification for the test runtime.","","","","Chain specification for the evm domain.","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","Run a farmer.","","","","","","","","The <code>ChainSpec</code> parameterized for subspace test runtime.","Generate an account ID from seed.","Generate a crypto pair from seed.","Local testnet config (multivalidator Alice + Bob).","Helper function to generate an account ID from seed.","Get the genesis config of the evm domain"],"i":[0,0,0,0,24,24,0,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,24,24,24,24,24,24,24,0,0,0,0,0,0],"f":[0,0,0,0,[[]],[[]],0,[1],[1],[[2,[4,[3]]],[[6,[[5,[3]]]]]],0,[1],[[]],[[]],[[]],[[]],[[]],[[],1],[[]],[[[8,[7]]],[[8,[9,7]]]],[[[10,[7]]],[[10,[9,7]]]],[[[11,[7]]],[[11,[9,7]]]],[[]],[[]],[[],12],[[[17,[13,[16,[14,13,15]]]]]],[[],18],[[],18],[[],19],[[],2],[[]],[[]],[[]],0,[2,20],[2],[[],21],[2,22],[[],23]],"c":[],"p":[[15,"usize"],[15,"str"],[15,"u8"],[15,"slice"],[3,"Vec"],[4,"Option"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"Arc"],[3,"Rc"],[3,"NativeVersion"],[6,"Client"],[6,"Block"],[6,"FraudProofVerifier"],[3,"ConsensusChainTxPreValidator"],[3,"NewFull"],[4,"Result"],[3,"TypeId"],[6,"AccountId"],[6,"TestChainSpec"],[6,"AccountId"],[3,"RuntimeGenesisConfig"],[3,"TestExecutorDispatch"]]},\
"subspace_test_runtime":{"doc":"","t":"DGGGGGGGENGNNNGGDDDDDDDRDDDDGNNNNGGDDGGNNNNGGNDGEDDRDDDDDDDDGNNNDDDGNNGNDEDDDDDDDGNNDDDEEEEDEEDERRGRDDDGGDDDDDGNNNDDGGNNNGDGNNNGGNDDGNGNGGNNNDDGGNNNRDGNNNGNDRRLLLLLLLLLLLLLALLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMNLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLF","n":["AccountIdConverter","Address","AllPallets","AllPalletsReversedWithSystemFirst","AllPalletsWithSystem","AllPalletsWithSystemReversed","AllPalletsWithoutSystem","AllPalletsWithoutSystemReversed","AllowAuthoringBy","Anyone","Balances","Balances","Balances","Balances","BalancesConfig","Block","BlockAuthoringDelay","BlockHashCount","BlockReward","BlockTreePruningDepth","BlockchainHistorySize","ConfirmationDepthK","CreditSupply","DECIMAL_PLACES","DomainInfo","DomainInstantiationDeposit","DomainRuntimeUpgradeDelay","DomainTxRangeAdjustmentInterval","Domains","Domains","Domains","Domains","Domains","DomainsConfig","Executive","ExpectedBlockTime","ExpectedVotesPerBlock","FeedId","Feeds","Feeds","Feeds","Feeds","FirstFarmer","GenesisConfig","GrandpaFinalityVerifier","GrandpaFinalityVerifier","GrandpaValidator","Header","HoldIdentifier","InitialDomainTxRange","LiquidityInfo","MILLISECS_PER_BLOCK","MaxBundlesPerBlock","MaxDomainBlockSize","MaxDomainBlockWeight","MaxDomainNameLength","MaxFeeds","MaxHolds","MaxPendingStakingOperation","MaximumReceiptDrift","Messenger","Messenger","Messenger","Messenger","MinOperatorStake","MinSectorLifetime","MinVestedTransfer","ObjectStore","ObjectStore","ObjectStore","OffencesSubspace","OffencesSubspace","OnChargeTransaction","OriginCaller","PalletInfo","PotEntropyInjectionDelay","PotEntropyInjectionInterval","PotEntropyInjectionLookbackDepth","RecentHistoryFraction","RecentSegments","RelayConfirmationDepth","Rewards","Rewards","RootFarmer","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeCall","RuntimeError","RuntimeEvent","RuntimeFreezeReason","RuntimeGenesisConfig","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","SHANNON","SLOT_DURATION","SS58Prefix","SSC","SelfChainId","SessionKeys","ShouldAdjustSolutionRange","SignedExtra","SignedPayload","SlotProbability","StakeEpochDuration","StakeWithdrawalLockingPeriod","StorageFeesEscrowBlockReward","StorageFeesEscrowBlockTax","Subspace","Subspace","Subspace","Subspace","SubspaceBlockLength","SubspaceBlockWeights","SubspaceConfig","Sudo","Sudo","Sudo","Sudo","SudoConfig","SudoId","System","System","System","System","SystemConfig","Timestamp","Timestamp","TotalSpacePledged","TransactionByteFee","TransactionFees","TransactionFees","TransactionPayment","TransactionPayment","TransactionPaymentConfig","Transporter","Transporter","Transporter","Transporter","TransporterEndpointId","TreasuryAccount","UncheckedExtrinsic","Utility","Utility","Utility","Utility","VERSION","Version","Vesting","Vesting","Vesting","Vesting","VestingConfig","Void","VoteReward","WASM_BINARY","WASM_BINARY_BLOATY","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account_nonce","add_filter","api","api_version","apply_extrinsic","as_system_ref","assimilate_storage","balances","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_messages","block_tree_pruning_depth","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","bundle_producer_election_params","caller","chain_constants","chain_id","check_inherents","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","construct_runtime_api","convert","correct_and_deposit_fee","crate_version","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_into_raw_public_keys","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","delete","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","dispatch","dispatch_bypass_filter","domain_best_number","domain_best_number","domain_block_limit","domain_instance_data","domain_instantiation_id","domain_runtime_code","domain_state_root","domain_state_root","domain_tx_range","domains","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_block","execute_in_transaction","extract_block_object_mapping","extract_pre_validation_object","extract_proof","extract_segment_headers","extract_successful_bundles","extract_xdm_proof_state_roots","extrinsics_shuffling_seed","feed_processor","filter_call","finalize_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_dispatch_error","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate","generate_session_keys","genesis_state_root","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_metadata","get_call_names","get_dispatch_info","get_endpoint_handler","get_module_names","get_raw","global_randomnesses","has_api","has_api_with","head_receipt_number","history_size","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inbox_response_message_unsigned","index","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize_block","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_caller","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_raw_public_keys","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","into_system","is_domain_info_confirmed","is_in_block_list","is_inherent","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","key_ids","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_pieces_in_sector","metadata","metadata","metadata_at_version","metadata_at_version","metadata_versions","metadata_versions","module_name","name","native_version","non_empty_er_exists","none","none","object_mappings","offchain_worker","oldest_receipt_number","operator","outbox_message_unsigned","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pre_dispatch","proof_recorder","put","query_fee_details","query_info","query_length_to_fee","query_weight_to_fee","record_proof","register_extension","relay_confirmation_depth","reset_filter","root","root","root_plot_public_key","runtime_id","segment_commitment","serialize","serialize","serialize","set_call_context","set_caller_from","should_adjust_solution_range","should_relay_inbox_message_response","should_relay_outbox_message","signed","signed","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot_duration","solution_ranges","staking_pending_deposit","staking_pending_unlock","staking_staked","submit_bundle_unsigned","submit_report_equivocation_extrinsic","submit_vote_extrinsic","subspace","sudo","system","system","timestamp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_payment","try_convert_back","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_transaction","validate_unsigned","validated_object_call_hashes","version","vesting","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","withdraw_fee","dispatch"],"q":[[0,"subspace_test_runtime"],[2167,"subspace_test_runtime::api"]],"d":["","The address format for describing accounts.","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","","Anyone can author new blocks at genesis.","","","","","","Block type as expected by this runtime.","","","","","","","","Subspace Credits have 18 decimal places.","","","","","","","","","","","Executive: handles dispatch to the various modules.","","","Type used to represent a FeedId or ChainId","","","","","Author of the first block will be able to author blocks …","","","","","Block header type as expected by this runtime.","","","","Since Subspace is probabilistic this is the average …","","Use the consensus chain’s <code>Normal</code> extrinsics block size …","Use the consensus chain’s <code>Normal</code> extrinsics block weight …","","","","","","","","","","","","","","","","","","Implementation of …","","Provides an implementation of <code>PalletInfo</code> to provide …","","","","","","","","","Specified root farmer is allowed to author blocks unless …","","","Implements all runtime apis for the client side.","","","","A reason for placing a freeze on funds.","","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing funds.","The smallest unit of the token is called Shannon.","","","One Subspace Credit.","","","","The SignedExtension to the basic transaction logic.","The payload being signed in transactions.","","","","","","","","","","We allow for 3.75 MiB for <code>Normal</code> extrinsic with 5 MiB …","We allow for 2 seconds of compute with a 6 second average …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unchecked extrinsic type as expected by this runtimeecode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Convert to runtime origin with caller being system signed …","Convert to runtime origin, using as filter: …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Optionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Generate a set of keys with optionally using the given …","","","","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The version information used to identify this runtime when …","","Create with system none origin and …","","","","","","","","","","","","","","","","","","","","","","","","Create with system root origin and …","","","","","","","","","","","","","Create with system signed origin and …i":[0,0,0,0,0,0,0,0,0,51,0,36,52,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,36,52,37,0,0,0,0,0,0,36,52,37,51,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,52,37,0,0,0,0,36,37,0,36,0,0,0,0,0,0,0,0,0,0,36,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,52,37,0,0,0,0,36,52,37,0,0,0,36,52,37,0,0,37,0,0,0,36,0,36,0,0,36,52,37,0,0,0,0,36,52,37,0,0,0,36,52,37,0,14,0,0,0,33,34,35,36,4,14,37,38,39,40,41,35,4,0,8,35,14,16,16,33,34,51,36,52,14,37,38,39,40,41,33,34,51,36,52,14,37,38,39,40,41,33,34,51,36,52,14,37,38,39,40,41,35,35,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,16,35,4,35,35,35,33,34,35,36,4,14,37,38,39,40,41,33,34,35,36,4,14,37,38,39,40,41,34,38,39,40,41,228,184,182,227,33,34,51,36,52,14,37,38,39,40,41,33,34,51,36,52,14,37,38,39,40,41,33,34,51,36,52,14,37,38,39,40,41,33,35,33,34,51,36,52,14,37,38,39,40,41,51,16,34,38,39,40,41,34,38,39,40,41,34,38,39,40,41,34,38,39,40,41,55,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,33,51,16,37,37,183,35,35,35,34,35,183,35,35,16,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,33,34,51,36,52,14,37,35,33,34,35,36,14,37,38,39,40,41,33,33,33,34,34,34,35,35,35,36,36,36,14,14,14,37,37,37,38,38,38,39,39,39,40,40,40,41,41,41,35,8,35,35,8,35,35,35,35,35,4,35,33,34,51,35,36,52,4,14,37,38,39,40,41,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,52,52,52,52,52,52,52,52,52,52,52,52,4,4,4,4,14,14,37,37,37,37,37,37,37,37,37,37,37,37,37,16,38,39,40,41,228,8,52,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,55,55,33,33,185,185,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,194,194,195,195,196,196,197,197,198,198,199,199,200,200,34,34,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,222,222,223,223,224,224,225,225,226,226,227,227,51,51,35,35,36,36,52,52,4,4,14,14,37,37,16,16,38,38,39,39,40,40,41,41,228,228,8,8,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,55,55,33,33,185,185,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,194,194,195,195,196,196,197,197,198,198,199,199,200,200,34,34,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,222,222,223,223,224,224,225,225,226,226,227,227,51,51,35,35,36,36,52,52,4,4,14,14,37,37,16,16,38,38,39,39,40,40,41,41,228,228,8,8,33,35,35,177,178,179,180,185,185,185,186,186,186,187,187,187,188,188,188,189,189,189,190,190,190,191,191,191,192,192,192,193,193,193,194,194,194,195,195,195,196,196,196,197,197,197,198,198,198,199,199,199,200,200,200,201,201,201,202,202,202,203,203,203,204,204,204,205,205,205,206,206,206,207,207,207,208,208,208,209,209,209,210,210,210,211,211,211,212,212,212,213,213,213,214,214,214,215,215,215,216,216,216,217,217,217,218,218,218,219,219,219,220,220,220,221,221,221,222,222,222,223,223,223,224,224,224,225,225,225,226,226,226,37,37,37,35,37,33,35,8,8,35,35,33,34,51,36,52,14,37,38,39,40,41,35,227,35,177,178,179,180,181,182,183,184,55,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,35,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,4,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,33,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,8,14,35,35,35,37,37,37,37,37,37,37,37,37,37,37,37,33,34,14,38,39,40,41,35,35,35,35,35,35,35,227,227,0,35,4,4,55,35,35,35,35,34,38,39,40,41,35,8,55,35,35,35,35,8,8,35,4,4,4,35,35,35,33,51,16,8,4,35,35,35,4,4,33,34,51,36,52,14,37,35,35,34,34,34,35,35,35,16,16,16,14,35,33,34,51,36,52,14,37,38,39,40,41,33,34,35,36,4,14,37,38,39,40,41,16,184,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,52,52,52,52,52,52,52,52,52,52,52,52,4,14,37,16,38,39,40,41,228,8,4,33,34,51,36,52,14,37,38,39,40,41,33,34,51,36,52,14,37,38,39,40,41,33,34,51,36,52,14,37,38,39,40,41,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,33,34,51,35,36,52,14,37,38,39,40,41,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,35,35,35,35,16,177,178,179,180,181,182,183,184,55,33,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,51,35,36,52,4,14,37,16,38,39,40,41,228,8,182,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[2,3],[[4,5]],0,[[[8,[6,[7,[6]]]]],[[12,[[10,[9]],11]]]],[[],13],[14,[[10,[15]]]],[[16,17],[[12,[18]]]],0,[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],23],[[],[[25,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16],[26,[[10,[[28,[27]]]]]],[4],[[],29],[[],30],[[24,31],32],[33,33],[34,34],[35,35],[36,36],[4,4],[14,14],[37,37],[38,38],[39,39],[40,40],[41,41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[34,34],42],[[38,38],42],[[39,39],42],[[40,40],42],[[41,41],42],[[[7,[6]]],43],[2,44],[[2,[45,[37]],[46,[37]]],[[12,[47]]]],[[],[[10,[48]]]],[49,[[12,[33,50]]]],[49,[[12,[34,50]]]],[49,[[12,[51,50]]]],[49,[[12,[36,50]]]],[49,[[12,[52,50]]]],[49,[[12,[14,50]]]],[49,[[12,[37,50]]]],[49,[[12,[38,50]]]],[49,[[12,[39,50]]]],[49,[[12,[40,50]]]],[49,[[12,[41,50]]]],[[[53,[19]]],[[12,[50]]]],[[[53,[19]]],[[12,[50]]]],[[[53,[19]]],[[12,[50]]]],[[[53,[19]]],[[12,[50]]]],[[[53,[19]]],[[12,[50]]]],[[[53,[19]]],[[12,[50]]]],[[[53,[19]]],[[12,[50]]]],[[[53,[19]]],[[12,[50]]]],[[[53,[19]]],[[12,[50]]]],[[[53,[19]]],[[12,[50]]]],[[[53,[19]]],[[12,[50]]]],[[9,[53,[19]]],[[12,[50]]]],[[9,[53,[19]]],[[12,[50]]]],[[9,[53,[19]]],[[12,[50]]]],[[9,[53,[19]]],[[12,[50]]]],[[9,[53,[19]]],[[12,[50]]]],[[9,[53,[19]]],[[12,[50]]]],[[9,[53,[19]]],[[12,[50]]]],[[9,[53,[19]]],[[12,[50]]]],[[9,[53,[19]]],[[12,[50]]]],[[9,[53,[19]]],[[12,[50]]]],[[9,[53,[19]]],[[12,[50]]]],[[[53,[19]]],[[10,[22]]]],[[[22,[19]]],[[10,[22]]]],[[9,49],[[12,[50]]]],[[9,49],[[12,[50]]]],[[9,49],[[12,[50]]]],[[9,49],[[12,[50]]]],[[9,49],[[12,[50]]]],[[9,49],[[12,[50]]]],[[9,49],[[12,[50]]]],[[9,49],[[12,[50]]]],[[9,49],[[12,[50]]]],[[9,49],[[12,[50]]]],[[9,49],[[12,[50]]]],[[],51],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[55,[54]],56],57],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[59,[[12,[33]]]],[59,[[12,[51]]]],[59,[[12,[16]]]],[[37,4],60],[[37,4],60],[26,[[10,[61]]]],[26,[[10,[62]]]],[26,[[10,[63]]]],[26,10],[26,34],[26,[[10,[[22,[19]]]]]],[[26,61,64],[[10,[64]]]],[[26,62,65],[[10,[65]]]],[26,66],0,[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[[33,[0,[67,68]]]],[[34,[0,[67,68]]]],[[51,[0,[67,68]]]],[[36,[0,[67,68]]]],[[52,[0,[67,68]]]],[[14,[0,[67,68]]]],[[37,[0,[67,68]]]],[[],[[12,[9]]]],[[33,33],69],[[34,34],69],[[35,35],69],[[36,36],69],[[14,14],69],[[37,37],69],[[38,38],69],[[39,39],69],[[40,40],69],[[41,41],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[24],[[[8,[6,[7,[6]]]],70]],[[24,[22,[64]]],71],[[],[[72,[24,62,65]]]],[[[8,[6,[7,[6]]]]],[[10,[73]]]],[[],[[10,[[22,[74]]]]]],[[26,22],[[75,[24,62,65,27]]]],[[[22,[19]]],[[10,[[76,[61]]]]]],[[],77],[[],[[79,[78]]]],[4,69],[[]],[[33,80],81],[[34,80],81],[[51,80],[[12,[82]]]],[[35,80],81],[[36,80],81],[[52,80],81],[[4,80],[[12,[82]]]],[[14,80],81],[[37,80],81],[[38,80],81],[[39,80],81],[[40,80],81],[[41,80],81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[83,[35]]],36],[[[84,[35]]],36],[[[85,[35]]],36],[[[86,[35]]],36],[[[87,[35]]],36],[[[88,[35]]],36],[[[89,[35]]],36],[[[90,[35]]],36],[91,36],[[]],[92,36],[[[93,[35]]],36],[[[94,[35]]],36],[[[95,[35]]],36],[[[96,[35]]],36],[[[97,[35]]],36],[[[98,[35]]],52],[[[99,[35]]],52],[[[100,[35]]],52],[[[101,[35]]],52],[[[102,[35]]],52],[[[103,[35]]],52],[[[104,[35]]],52],[[[105,[35]]],52],[[[106,[35]]],52],[[[107,[35]]],52],[[]],[[[108,[35]]],52],[14,4],[10,4],[[[109,[35]]],4],[[]],[[]],[[[109,[35]]],14],[[[111,[110,35]]],37],[[[111,[112,35]]],37],[[[111,[113,35]]],37],[[[111,[114,35]]],37],[[[111,[115,35]]],37],[[[111,[116,35]]],37],[[]],[[[111,[117,35]]],37],[[[111,[118,35]]],37],[[[111,[119,35]]],37],[[[111,[120,35]]],37],[[[111,[121,35]]],37],[[[111,[122,35]]],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[123,[[10,[52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[[22,[19]]]]],[[22,[19]]]],[[[10,[[22,[19]]]]],[[22,[19]]]],[26,[[10,[124]]]],[[],27],[[],125],[[],125],[[],27],[[],126],[[],126],[[],[[127,[126]]]],[[],61],[[],61],[[],[[127,[61]]]],[[],128],[[],128],[[],[[127,[128]]]],[[],[[127,[129]]]],[[],129],[[],129],[[],130],[[],130],[[],[[127,[130]]]],[[],61],[[],[[127,[61]]]],[[],61],[[],19],[[],[[127,[19]]]],[[],19],[[],130],[[],[[127,[130]]]],[[],130],[[],127],[[]],[[]],[[],[[127,[131]]]],[[],131],[[],131],[[],69],[[],69],[[],[[127,[69]]]],[[],[[127,[9]]]],[[],9],[[],9],[[],9],[[],[[127,[9]]]],[[],9],[[],132],[[],132],[[],[[127,[132]]]],[[]],[[]],[[],127],[[],[[127,[132]]]],[[],132],[[],132],[[],[[127,[9]]]],[[],9],[[],9],[[],127],[[]],[[]],[[]],[[],127],[[]],[[],61],[[],[[127,[61]]]],[[],61],[[],[[127,[30]]]],[[],30],[[],30],[[],133],[[],[[127,[133]]]],[[],133],[[],61],[[],[[127,[61]]]],[[],61],[[],134],[[],[[127,[134]]]],[[],134],[[],134],[[],[[127,[134]]]],[[],134],[[],[[127,[61]]]],[[],61],[[],61],[[],[[127,[27]]]],[[],27],[[],27],[[],9],[[],9],[[],[[127,[9]]]],[[],135],[[],135],[[],[[127,[135]]]],[[],9],[[],9],[[],[[127,[9]]]],[[],[[127,[27]]]],[[],27],[[],27],[[],9],[[],[[127,[9]]]],[[],9],[[],9],[[],9],[[],[[127,[9]]]],[[],[[127,[61]]]],[[],61],[[],61],[[],62],[[],62],[[],[[127,[62]]]],[[],[[127,[2]]]],[[],2],[[],2],[[],9],[[],[[127,[9]]]],[[],9],[[],2],[[],[[127,[2]]]],[[],2],[[],27],[[],[[127,[27]]]],[[],27],[[],27],[[],[[127,[27]]]],[[],27],[[],9],[[],9],[[],[[127,[9]]]],[[],27],[[],[[127,[27]]]],[[],27],[37,136],[137,[[53,[137]]]],[37,138],[139,[[10,[[79,[140]]]]]],[[],[[53,[137]]]],[[33,141],[[53,[19]]]],[[],142],[[[8,[6,[7,[6]]]]],[[12,[69,11]]]],[[[8,[6,[7,[6]]]],5],[[12,[69,11]]]],[26,[[25,[24]]]],[[],132],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[[143,[61]]],10],[[],[[10,[58]]]],[31,22],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[[55,[54]],56,[53,[19]]],57],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[6,[7,[6]]]],[145,[[144,[6]]]]],[[12,[[146,[6]],18]]]],[14,[[10,[15]]]],[[26,[147,[61]]],69],[148,69],[[],69],[37,[[10,[[111,[112,35]]]]]],[37,[[10,[[111,[118,35]]]]]],[37,[[10,[[111,[120,35]]]]]],[37,[[10,[[111,[122,35]]]]]],[37,[[10,[[111,[117,35]]]]]],[37,[[10,[[111,[121,35]]]]]],[37,[[10,[[111,[113,35]]]]]],[37,[[10,[[111,[116,35]]]]]],[37,[[10,[[111,[119,35]]]]]],[37,[[10,[[111,[115,35]]]]]],[37,[[10,[[111,[110,35]]]]]],[37,[[10,[[111,[114,35]]]]]],[[],[[53,[141]]]],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],149],[[],150],[[],151],[9,[[10,[151]]]],[9,[[10,[151]]]],[[],[[22,[9]]]],[[],[[22,[9]]]],[[],[[10,[137]]]],[[],[[10,[137]]]],[[],152],[26,69],[[],4],[[],4],[[[55,[54]],56,[53,[19]]],[[22,[153]]]],[[]],[26,[[25,[24]]]],[154,10],[[[143,[61]]],10],[[34,34],[[10,[42]]]],[[38,38],[[10,[42]]]],[[39,39],[[10,[42]]]],[[40,40],[[10,[42]]]],[[41,41],[[10,[42]]]],[[],[[12,[47]]]],[[[8,[6,[7,[6]]]]],[[10,[[155,[6]]]]]],[[[55,[54]],56,[53,[19]]],[[12,[[10,[156]],123]]]],[9,[[157,[27]]]],[9,[[158,[27]]]],[9,27],[135,27],[[[8,[6,[7,[6]]]]]],[[[8,[6,[7,[6]]]],159]],[[],61],[4],[[],4],[[],4],[[],[[10,[148]]]],[26,[[10,[160]]]],[161,[[10,[162]]]],[[33,163],12],[[51,163],12],[[16,163],12],[[[8,[6,[7,[6]]]],164]],[[4,[165,[4]]]],[[],69],[[30,166],69],[[30,166],69],[[],4],[[],4],[33,58],[34,58],[51,58],[36,58],[52,58],[14,58],[37,58],[[],167],[[],168],[154,34],[154,34],[154,34],[[[169,[[25,[24]],62,65,27]]]],[170,10],[[[171,[[25,[24]],148]]]],0,0,0,0,[[],131],[[[53,[19]]],[[22,[19,21]]]],[[[53,[19]]],[[22,[19,21]]]],[[[53,[19]]],[[22,[19,21]]]],[[[53,[19]]],[[22,[19,21]]]],[[[53,[19]]],[[22,[19,21]]]],[[[53,[19]]],[[22,[19,21]]]],[[[53,[19]]],[[22,[19,21]]]],[[[53,[19]]],[[22,[19,21]]]],[[[53,[19]]],[[22,[19,21]]]],[[[53,[19]]],[[22,[19,21]]]],[[[53,[19]]],[[22,[19,21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[44,[[10,[2]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[36,[[12,[[87,[35]]]]]],[36,[[12,[91]]]],[36,[[12,[[96,[35]]]]]],[36,[[12,[[90,[35]]]]]],[36,[[12,[[94,[35]]]]]],[36,[[12,[[93,[35]]]]]],[36,[[12,[[83,[35]]]]]],[36,[[12,[[86,[35]]]]]],[36,[[12,[[97,[35]]]]]],[36,[[12,[[89,[35]]]]]],[[],12],[36,[[12,[[84,[35]]]]]],[36,[[12,[[85,[35]]]]]],[36,[[12,[92]]]],[36,[[12,[[95,[35]]]]]],[36,[[12,[[88,[35]]]]]],[52,[[12,[[98,[35]]]]]],[52,[[12,[[103,[35]]]]]],[52,[[12,[[101,[35]]]]]],[52,[[12,[[100,[35]]]]]],[52,[[12,[[108,[35]]]]]],[52,[[12,[[99,[35]]]]]],[52,[[12,[[107,[35]]]]]],[52,[[12,[[106,[35]]]]]],[52,[[12,[[105,[35]]]]]],[52,[[12,[[104,[35]]]]]],[[],12],[52,[[12,[[102,[35]]]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[4,70],[[12,[4]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],[[22,[19,21]]]],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],172],[[],173],[[],173],[[],[[173,[174]]]],[[],173],[[],173],[[],173],[[],173],[[],173],[[],173],[[],173],[[],173],[[],173],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[175,176],[175,176],[[],[[22,[64]]]],[[],126],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,37,[45,[37]]],[[12,[47]]]],[[137,[53,[19]]],[[10,[[22,[19]]]]]]],"c":[2,3,5,7,43],"p":[[3,"Private"],[6,"AccountId"],[6,"Nonce"],[3,"RuntimeOrigin"],[8,"Fn"],[8,"Block"],[8,"CallApiAt"],[3,"RuntimeApiImpl"],[15,"u32"],[4,"Option"],[4,"ApiError"],[4,"Result"],[6,"ApplyExtrinsicResult"],[4,"OriginCaller"],[4,"RawOrigin"],[3,"RuntimeGenesisConfig"],[3,"Storage"],[3,"String"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"BlockMessagesWithStorageKey"],[6,"Block"],[6,"NumberFor"],[3,"DomainId"],[6,"Balance"],[3,"BundleProducerElectionParams"],[4,"ChainConstants"],[4,"ChainId"],[3,"InherentData"],[3,"CheckInherentsResult"],[3,"SessionKeys"],[4,"HoldIdentifier"],[3,"Runtime"],[4,"RuntimeEvent"],[4,"RuntimeCall"],[4,"RuntimeFreezeReason"],[4,"RuntimeHoldReason"],[4,"RuntimeLockId"],[4,"RuntimeSlashReason"],[4,"Ordering"],[3,"ApiRef"],[4,"MultiAccountId"],[6,"DispatchInfoOf"],[6,"PostDispatchInfoOf"],[4,"TransactionValidityError"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"AllowAuthoringBy"],[4,"RuntimeError"],[15,"slice"],[8,"Chain"],[3,"GrandpaValidator"],[6,"FeedId"],[6,"DispatchResult"],[15,"usize"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[6,"BlockNumber"],[6,"BlockNumber"],[3,"DomainBlockLimit"],[6,"Hash"],[6,"Hash"],[3,"U256"],[8,"Output"],[8,"Sized"],[15,"bool"],[8,"FnOnce"],[3,"BlockObjectMapping"],[4,"PreValidationObject"],[3,"StorageProof"],[4,"SegmentHeader"],[6,"OpaqueBundles"],[3,"ExtractedStateRootsFromProof"],[3,"Randomness"],[8,"FeedProcessor"],[3,"Box"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[6,"Origin"],[6,"Timestamp"],[6,"CallableCallFor"],[6,"System"],[6,"Vesting"],[6,"Utility"],[6,"ObjectStore"],[6,"Transporter"],[6,"Domains"],[6,"Sudo"],[6,"Feeds"],[6,"Balances"],[6,"Messenger"],[6,"Subspace"],[4,"DispatchError"],[3,"H256"],[15,"u128"],[3,"RuntimeVersion"],[8,"From"],[3,"BlockWeights"],[3,"BlockLength"],[6,"SlotNumber"],[6,"Moment"],[3,"HistorySize"],[6,"EndpointId"],[15,"u64"],[3,"Weight"],[3,"CallMetadata"],[15,"str"],[3,"DispatchInfo"],[4,"Endpoint"],[8,"EndpointHandler"],[3,"KeyTypeId"],[3,"GlobalRandomnesses"],[3,"CrossDomainMessage"],[6,"HashingFor"],[8,"Backend"],[6,"StorageChanges"],[3,"BlockInfo"],[6,"FarmerPublicKey"],[15,"u16"],[3,"RuntimeMetadataPrefixed"],[3,"OpaqueMetadata"],[3,"NativeVersion"],[4,"FeedObjectMapping"],[6,"OperatorId"],[6,"ProofRecorder"],[6,"FeedMetadata"],[3,"FeeDetails"],[3,"RuntimeDispatchInfo"],[8,"Extension"],[6,"RuntimeId"],[3,"SegmentIndex"],[6,"SegmentCommitment"],[8,"Serializer"],[4,"CallContext"],[8,"Into"],[6,"MessageId"],[3,"SlotDuration"],[3,"SolutionRanges"],[6,"OpaqueBundle"],[6,"EquivocationProof"],[3,"SignedVote"],[3,"TypeId"],[3,"Type"],[4,"MetaForm"],[4,"TransactionSource"],[6,"TransactionValidity"],[3,"CreditSupply"],[3,"TotalSpacePledged"],[3,"BlockchainHistorySize"],[3,"TransactionByteFee"],[3,"LiquidityInfo"],[3,"OnChargeTransaction"],[3,"DomainInfo"],[3,"AccountIdConverter"],[3,"Version"],[3,"BlockHashCount"],[3,"SubspaceBlockWeights"],[3,"SubspaceBlockLength"],[3,"BlockAuthoringDelay"],[3,"PotEntropyInjectionInterval"],[3,"PotEntropyInjectionLookbackDepth"],[3,"PotEntropyInjectionDelay"],[3,"SlotProbability"],[3,"ExpectedBlockTime"],[3,"ShouldAdjustSolutionRange"],[3,"ExpectedVotesPerBlock"],[3,"ConfirmationDepthK"],[3,"RecentSegments"],[3,"RecentHistoryFraction"],[3,"MinSectorLifetime"],[3,"MaxHolds"],[3,"StorageFeesEscrowBlockReward"],[3,"StorageFeesEscrowBlockTax"],[3,"RelayConfirmationDepth"],[3,"SelfChainId"],[3,"TransporterEndpointId"],[3,"MaximumReceiptDrift"],[3,"InitialDomainTxRange"],[3,"DomainTxRangeAdjustmentInterval"],[3,"DomainRuntimeUpgradeDelay"],[3,"MinOperatorStake"],[3,"MaxDomainBlockSize"],[3,"MaxDomainBlockWeight"],[3,"MaxBundlesPerBlock"],[3,"DomainInstantiationDeposit"],[3,"MaxDomainNameLength"],[3,"BlockTreePruningDepth"],[3,"StakeWithdrawalLockingPeriod"],[3,"StakeEpochDuration"],[3,"TreasuryAccount"],[3,"MaxPendingStakingOperation"],[3,"SudoId"],[3,"BlockReward"],[3,"VoteReward"],[3,"MaxFeeds"],[3,"MinVestedTransfer"],[3,"PalletInfo"],[3,"RuntimeApi"]]},\
"subspace_test_service":{"doc":"Subspace test service only.","t":"DMLLLLMLLLMLLLLLLLLLLLLLLMMLLFLOLLLLOOLLLMLMLLLLMMLLMLLLLLLLL","n":["MockConsensusNode","backend","block_importing_notification_stream","borrow","borrow_mut","clear_tx_pool","client","deref","deref_mut","drop","executor","from","from_mut","from_mut","from_ref","from_ref","from_subset","get_bundle_from_tx_pool","init","into","into_any","into_any_rc","into_mut","into_ref","is_in_subset","network_service","network_starter","new_slot_notification_stream","next_slot","node_config","notify_new_slot_and_wait_for_bundle","produce_block_with","produce_block_with_extrinsics","produce_block_with_slot","produce_block_with_slot_at","produce_blocks","produce_blocks","produce_blocks_until","produce_slot","produce_slot_and_wait_for_bundle_submission","prune_tx_from_pool","rpc_handlers","run","select_chain","set_next_slot","start_cross_domain_gossip_message_worker","start_network","submit_transaction","sync_service","task_manager","to_subset","to_subset_unchecked","transaction_pool","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","xdm_gossip_worker_builder"],"q":[[0,"subspace_test_service"]],"d":["A mock Subspace consensus node instance used for testing.","Backend.","Subscribe the block importing notification","","","Remove all tx from the tx pool","Client’s instance.","","","","Code executor.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get the bundle that created at <code>slot</code> from the transaction …","","Calls <code>U::from(self)</code>.","","","","","","Network service.","Network starter","Subscribe the new slot notification","Return the next slot number","Create a Subspace <code>Configuration</code>.","Notify the executor about the new slot and wait for the …","Producing one block for both the primary node and the …","Produce a new block on top of the current best block, with …","Produce a new block on top of the current best block, with …","Produce a new block with the slot on top of <code>parent_hash</code>, …","Produce <code>n</code> number of blocks.","Produce the given number of blocks for both the primary …","Keep producing block with a fixed interval until the given …","Produce a slot only, without waiting for the potential …","Produce a new slot and wait for a bundle produced at this …","Remove a ready transaction from transaction pool.","RPC handlers.","Run a mock consensus node","The SelectChain Strategy","Set the next slot number","Start the cross domain gossip message worker.","Start the mock consensus node network","Submit a tx to the tx pool","Sync service.","<code>TaskManager</code>’s instance.","","","Transaction pool.","","","","","","","","Get the cross domain gossip message worker builder"],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[1,2],[[]],[[]],[1,[[5,[[4,[3]]]]]],0,[6],[6],[6],0,[[]],[[]],[[]],[[]],[[]],[[]],[[1,7],[[15,[[14,[[9,[8]],10,11,12,13]]]]]],[[],6],[[]],[[[4,[16]]],[[4,[17,16]]]],[[[18,[16]]],[[18,[17,16]]]],[[]],[[]],[[],19],0,0,[1,2],[1,7],[[20,21,[23,[22]],19,19,19,24],25],[[1,26],[[15,[[14,[[9,[8]],10,11,12,13]]]]]],0,[[1,23],[[5,[[4,[3]]]]]],[[1,26],[[5,[[4,[3]]]]]],[[1,26,[15,[23]]],[[5,[[4,[3]]]]]],[[1,7],[[5,[[4,[3]]]]]],0,0,[1,26],[1],[[1,27],[[5,[[4,[3]]]]]],0,[[20,21,24],1],0,[[1,7]],[1],[1],[[1,27],[[5,[12,28]]]],0,0,[[],15],[[]],0,[[],5],[[],5],[[],29],[[],30],[[]],[[]],[[]],[1,31]],"c":[],"p":[[3,"MockConsensusNode"],[3,"TracingUnboundedReceiver"],[8,"Error"],[3,"Box"],[4,"Result"],[15,"usize"],[15,"u64"],[6,"Block"],[6,"NumberFor"],[6,"Hash"],[6,"BlockNumber"],[3,"H256"],[6,"Balance"],[6,"OpaqueBundle"],[4,"Option"],[3,"Global"],[8,"Any"],[3,"Rc"],[15,"bool"],[3,"Handle"],[4,"Keyring"],[3,"MultiaddrWithPeerId"],[3,"Vec"],[3,"BasePath"],[3,"Configuration"],[3,"Slot"],[3,"OpaqueExtrinsic"],[4,"Error"],[3,"TypeId"],[15,"str"],[3,"GossipWorkerBuilder"]]},\
"subspace_transaction_pool":{"doc":"","t":"DQGDGGIGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLKLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BasicPoolWrapper","Block","BlockExtrinsicOf","FullChainApiWrapper","FullPool","FullPoolWithChainVerifier","PreValidateTransaction","ValidationFuture","__clone_box","api","block_body","block_header","block_id_to_hash","block_id_to_number","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_ref","from_ref","futures","hash_and_length","hash_of","import_notification_stream","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","maintain","new_full","on_broadcasted","pool","pre_validate_transaction","ready","ready_at","ready_transaction","remove_invalid","status","submit_and_watch","submit_at","submit_local","submit_one","to_owned","tree_route","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","validate_transaction","vzip","vzip"],"q":[[0,"subspace_transaction_pool"]],"d":["","","","","A transaction pool for a full node.","A transaction pool with chain verifier.","This trait allows to perform some extra validation on the …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Gets shared reference to the underlying pool.","Returns <code>Ok(())</code> if the extrinsic passes the pre-validation.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,12,0,0,0,0,0,0,14,4,14,14,14,14,4,14,4,14,14,14,4,14,4,14,4,14,4,14,4,14,4,14,4,14,4,4,4,14,4,14,4,14,4,14,4,14,4,0,4,4,12,4,4,4,4,4,4,4,4,4,14,14,4,14,4,14,4,14,4,14,4,14,4,14,14,4,14],"f":[0,0,0,0,0,0,0,0,[1],[[[4,[2,3]]],3],[[[14,[2,[0,[[5,[2]],[6,[2]],[7,[2]],[8,[2]],[9,[2]],10,11]],[0,[12,10,11,13]]]]]],[[[14,[2,[0,[[5,[2]],[6,[2]],[7,[2]],[8,[2]],[9,[2]],10,11]],[0,[12,10,11,13]]]]],[[16,[15]]]],[[[14,[2,[0,[[5,[2]],[6,[2]],[7,[2]],[8,[2]],[9,[2]],10,11]],[0,[12,10,11,13]]]],17],[[18,[15]]]],[[[14,[2,[0,[[5,[2]],[6,[2]],[7,[2]],[8,[2]],[9,[2]],10,11]],[0,[12,10,11,13]]]],17],[[18,[[15,[19]]]]]],[[]],[[]],[[]],[[]],[[[14,[13,13,13]]],[[14,[13,13,13]]]],[[]],[20],[20],[20],[20],[20],[20],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[2,3]]],21],[[[14,[2,[0,[[5,[2]],[6,[2]],[7,[2]],[8,[2]],[9,[2]],10,11]],[0,[12,10,11,13]]]]]],[[[4,[2,3]],[22,[[4,[2,3]]]]],[[23,[[4,[2,3]]]]]],[[[4,[2,3]]],[[24,[[23,[[4,[2,3]]]]]]]],[[],20],[[],20],[[]],[[]],[[[26,[25]]],[[26,[27,25]]]],[[[26,[25]]],[[26,[27,25]]]],[[[28,[25]]],[[28,[27,25]]]],[[[28,[25]]],[[28,[27,25]]]],[[[29,[25]]],[[29,[27,25]]]],[[[29,[25]]],[[29,[27,25]]]],[[[4,[2,3]],30],[[32,[[26,[31]]]]]],[[33,34,[28,[[0,[[5,[2]],[6,[2]],[8,[2]],[9,[2]],[35,[2]],[36,[2]],[7,[2]],10,11]]]],[0,[12,10,11,13]]],[[28,[[37,[2,[0,[[5,[2]],[6,[2]],[8,[2]],[9,[2]],[35,[2]],[36,[2]],[7,[2]],10,11]],[0,[12,10,11,13]]]]]]]],[[[4,[2,3]],[39,[[23,[[4,[2,3]]]],[21,[38]]]]]],[[[4,[2,3]]],[[28,[[40,[3]]]]]],[41,[[32,[[26,[31]]]]]],[[[4,[2,3]]],[[26,[42]]]],[[[4,[2,3]],19],[[32,[[26,[31]]]]]],[[[4,[2,3]],[23,[[4,[2,3]]]]],[[15,[28]]]],[[[4,[2,3]],[43,[[23,[[4,[2,3]]]]]]],[[21,[28]]]],[[[4,[2,3]]],44],[[[4,[2,3]],17,41,[22,[[4,[2,3]]]]],[[46,[[32,[[26,[[45,[[4,[2,3]]]]]]]]]]]],[[[4,[2,3]],17,41,[21,[[22,[[4,[2,3]]]]]]],[[46,[[21,[[16,[[23,[[4,[2,3]]]]]]]]]]]],[[[4,[2,[14,[2,[0,[[5,[2]],[6,[2]],[8,[2]],[9,[2]],[7,[2]],10,11]],[0,[12,10,11,13]]]]]],[47,[[4,[2,[14,[2,[0,[[5,[2]],[6,[2]],[8,[2]],[9,[2]],[7,[2]],10,11]],[0,[12,10,11,13]]]]]]]]],16],[[[4,[2,3]],17,41,[22,[[4,[2,3]]]]],[[46,[[23,[[4,[2,3]]]]]]]],[[]],[[[14,[2,[0,[[5,[2]],[6,[2]],[7,[2]],[8,[2]],[9,[2]],10,11]],[0,[12,10,11,13]]]]],[[16,[48]]]],[[],16],[[],16],[[],16],[[],16],[[],49],[[],49],[[],50],[[],50],[[]],[[]],[[]],[[]],[[[14,[2,[0,[[5,[2]],[6,[2]],[7,[2]],[8,[2]],[9,[2]],10,11]],[0,[12,10,11,13]]]],17,41]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Block"],[8,"ChainApi"],[3,"BasicPoolWrapper"],[8,"ProvideRuntimeApi"],[8,"BlockBackend"],[8,"BlockIdTo"],[8,"HeaderBackend"],[8,"HeaderMetadata"],[8,"Send"],[8,"Sync"],[8,"PreValidateTransaction"],[8,"Clone"],[3,"FullChainApiWrapper"],[4,"Option"],[4,"Result"],[4,"BlockId"],[6,"Result"],[6,"NumberFor"],[15,"usize"],[3,"Vec"],[6,"TransactionFor"],[6,"TxHash"],[6,"ImportNotificationStream"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"Arc"],[3,"Rc"],[4,"ChainEvent"],[8,"Future"],[3,"Pin"],[3,"Configuration"],[3,"TaskManager"],[8,"ExecutorProvider"],[8,"UsageProvider"],[6,"FullPool"],[3,"String"],[3,"HashMap"],[3,"Pool"],[4,"TransactionSource"],[8,"ReadyTransactions"],[15,"slice"],[3,"PoolStatus"],[6,"TransactionStatusStreamFor"],[6,"PoolFuture"],[6,"LocalTransactionFor"],[3,"TreeRoute"],[3,"TypeId"],[15,"str"]]},\
"subspace_verification":{"doc":"Verification primitives for Subspace.","t":"ENNNNNNNDNDLLLLLLFFLLLLMLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLMLLLLLLFLLMMMLMMMMLLMLLLLLLLLLLLLLLLLLFLLLMMMMMM","n":["Error","InvalidAuditChunkOffset","InvalidChunkWitness","InvalidHistorySize","InvalidPiece","InvalidPieceOffset","InvalidProofOfSpace","OutsideSolutionRange","PieceCheckParams","SectorExpired","VerifySolutionParams","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_block_weight","check_reward_signature","clone","clone","clone_into","clone_into","current_history_size","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","derive_next_solution_range","derive_pot_entropy","derive_randomness","drop","drop","drop","encode_to","encode_to","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","global_randomness","init","init","init","into","into","into","is_within_solution_range","max_encoded_len","max_encoded_len","max_pieces_in_sector","min_sector_lifetime","piece_check_params","provide","recent_history_fraction","recent_segments","sector_expiration_check_segment_commitment","segment_commitment","size_hint","size_hint","solution_range","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","verify_solution","vzip","vzip","vzip","current_history_size","expiration_history_size","half_solution_range","max_pieces_in_sector","piece_offset","solution_distance"],"q":[[0,"subspace_verification"],[97,"subspace_verification::Error"]],"d":["Errors encountered by the Subspace consensus primitives.","Invalid audit chunk offset","Invalid chunk witness","Invalid history size","Piece verification failed","Invalid piece offset","Invalid proof of space","Solution is outside of challenge range","Parameters for checking piece validity","Sector expired","Parameters for solution verification","","","","","","","Calculate weight derived from provided solution range","Check the reward signature validity.","","","","","Current size of the history","","","","","","","","","","","","","","","Derives next solution range based on the total era slots …","Derive proof of time entropy from chunk and proof of time …","Derive on-chain randomness from solution.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Global randomness","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if solution distance is within the solution …","","","How many pieces one sector is supposed to contain (max)","Minimum lifetime of a plotted sector, measured in archived …","Parameters for checking piece validity.","","Fraction of pieces from the “recent history” (…","Number of latest archived segments that are considered “…","Segment commitment at <code>min_sector_lifetime</code> from sector …","Segment commitment of segment to which piece belongs","","","Solution range","","","","","","","","","","","","","","","","","","Verify whether solution is valid, returns solution …","","","","Current history size","Expiration history size","Half of solution range","How many pieces one sector is supposed to contain (max)","Index of the piece that failed verification","Solution distance"],"i":[0,26,26,26,26,26,26,26,0,26,0,26,10,11,26,10,11,0,0,10,11,10,11,10,10,11,10,11,10,11,10,11,26,10,11,26,10,11,0,0,0,26,10,11,10,11,26,26,26,26,10,11,26,10,11,11,26,10,11,26,10,11,0,10,11,10,10,11,26,10,10,10,10,10,11,11,10,11,10,11,26,26,10,11,26,10,11,26,10,11,26,10,11,0,26,10,11,38,38,39,40,40,39],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[[4,[3]],5,6,7],[[9,[8]]]],[10,10],[11,11],[[]],[[]],0,[12,[[9,[10,13]]]],[12,[[9,[11,13]]]],[[[4,[3]]],[[9,[13]]]],[[[4,[3]]],[[9,[13]]]],[[14,[4,[3]]],[[9,[13]]]],[[14,[4,[3]]],[[9,[13]]]],[[14,12],[[9,[13]]]],[[14,12],[[9,[13]]]],[15],[15],[15],[15],[15],[15],[[16,16,1,17],18],[[19,20],21],[[22,16],23],[15],[15],[15],[[10,[0,[24,25]]]],[[11,[0,[24,25]]]],[[26,26],27],[[],27],[[26,28],29],[[26,28],29],[[10,28],29],[[11,28],29],[[]],[[]],[[]],0,[[],15],[[],15],[[],15],[[]],[[]],[[]],[[30,1,31,1],27],[[],15],[[],15],0,0,0,[32],0,0,0,0,[10,15],[11,15],0,[[[4,[3]]],[[34,[3,33]]]],[[[4,[3]]],[[34,[3,33]]]],[[]],[[]],[[],35],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],36],[[],36],[[],36],[[]],[[]],[[]],[[22,16,11,37],[[9,[1,26]]]],[[]],[[]],[[]],0,0,0,0,0,0],"c":[],"p":[[6,"SolutionRange"],[6,"BlockWeight"],[15,"u8"],[15,"slice"],[3,"RewardSignature"],[3,"PublicKey"],[3,"SigningContext"],[4,"SignatureError"],[4,"Result"],[3,"PieceCheckParams"],[3,"VerifySolutionParams"],[8,"Input"],[3,"Error"],[15,"u32"],[15,"usize"],[6,"SlotNumber"],[6,"BlockNumber"],[15,"u64"],[3,"Scalar"],[3,"PotOutput"],[6,"Blake3Hash"],[3,"Solution"],[3,"Randomness"],[8,"Output"],[8,"Sized"],[4,"Error"],[15,"bool"],[3,"Formatter"],[6,"Result"],[6,"Blake2b256Hash"],[3,"SectorSlotChallenge"],[3,"Demand"],[3,"Global"],[3,"Vec"],[3,"String"],[3,"TypeId"],[3,"Kzg"],[13,"SectorExpired"],[13,"OutsideSolutionRange"],[13,"InvalidPieceOffset"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
