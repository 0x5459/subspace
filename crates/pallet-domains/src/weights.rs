
//! Autogenerated weights for pallet_domains
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-08-09, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/subspace-node
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_domains
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./crates/pallet-domains/src/weights.rs
// --template
// ./frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_domains.
pub trait WeightInfo {
	fn submit_bundle() -> Weight;
	fn pending_staking_operation() -> Weight;
	fn register_domain_runtime() -> Weight;
	fn upgrade_domain_runtime() -> Weight;
	fn instantiate_domain() -> Weight;
	fn register_operator() -> Weight;
	fn nominate_operator() -> Weight;
	fn switch_domain() -> Weight;
	fn deregister_operator() -> Weight;
	fn withdraw_stake() -> Weight;
	fn auto_stake_block_rewards() -> Weight;
}

/// Weights for pallet_domains using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: Domains HeadReceiptNumber (r:1 w:1)
	/// Proof Skipped: Domains HeadReceiptNumber (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains BlockTree (r:2 w:2)
	/// Proof Skipped: Domains BlockTree (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainBlocks (r:1 w:2)
	/// Proof Skipped: Domains DomainBlocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains ExecutionInbox (r:3 w:2)
	/// Proof Skipped: Domains ExecutionInbox (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains SuccessfulBundles (r:1 w:1)
	/// Proof Skipped: Domains SuccessfulBundles (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains HeadDomainNumber (r:1 w:1)
	/// Proof Skipped: Domains HeadDomainNumber (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainTxRangeState (r:1 w:1)
	/// Proof Skipped: Domains DomainTxRangeState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains InboxedBundle (r:0 w:2)
	/// Proof Skipped: Domains InboxedBundle (max_values: None, max_size: None, mode: Measured)
	fn submit_bundle() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3952`
		//  Estimated: `12367`
		// Minimum execution time: 99_000_000 picoseconds.
		Weight::from_parts(107_000_000, 12367)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(12_u64))
	}
	/// Storage: Domains DomainStakingSummary (r:1 w:1)
	/// Proof Skipped: Domains DomainStakingSummary (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingSlashes (r:1 w:0)
	/// Proof Skipped: Domains PendingSlashes (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Operators (r:1 w:1)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingOperatorSwitches (r:1 w:0)
	/// Proof Skipped: Domains PendingOperatorSwitches (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingOperatorDeregistrations (r:1 w:0)
	/// Proof Skipped: Domains PendingOperatorDeregistrations (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingWithdrawals (r:1025 w:1024)
	/// Proof Skipped: Domains PendingWithdrawals (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Nominators (r:1024 w:1024)
	/// Proof Skipped: Domains Nominators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Balances Holds (r:1024 w:1024)
	/// Proof: Balances Holds (max_values: None, max_size: Some(2750), added: 5225, mode: MaxEncodedLen)
	/// Storage: System Account (r:1024 w:1024)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Domains PendingNominatorUnlocks (r:1 w:1)
	/// Proof Skipped: Domains PendingNominatorUnlocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingUnlocks (r:1 w:1)
	/// Proof Skipped: Domains PendingUnlocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingDeposits (r:1 w:0)
	/// Proof Skipped: Domains PendingDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains LastEpochStakingDistribution (r:0 w:1)
	/// Proof Skipped: Domains LastEpochStakingDistribution (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingStakingOperationCount (r:0 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	fn pending_staking_operation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `332847`
		//  Estimated: `5351390`
		// Minimum execution time: 133_495_000_000 picoseconds.
		Weight::from_parts(137_797_000_000, 5351390)
			.saturating_add(T::DbWeight::get().reads(4105_u64))
			.saturating_add(T::DbWeight::get().writes(4102_u64))
	}
	/// Storage: Domains NextRuntimeId (r:1 w:1)
	/// Proof Skipped: Domains NextRuntimeId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Domains RuntimeRegistry (r:0 w:1)
	/// Proof Skipped: Domains RuntimeRegistry (max_values: None, max_size: None, mode: Measured)
	fn register_domain_runtime() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `43`
		//  Estimated: `1528`
		// Minimum execution time: 15_145_000_000 picoseconds.
		Weight::from_parts(15_254_000_000, 1528)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Domains RuntimeRegistry (r:1 w:0)
	/// Proof Skipped: Domains RuntimeRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains ScheduledRuntimeUpgrades (r:0 w:1)
	/// Proof Skipped: Domains ScheduledRuntimeUpgrades (max_values: None, max_size: None, mode: Measured)
	fn upgrade_domain_runtime() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `438682`
		//  Estimated: `442147`
		// Minimum execution time: 14_847_000_000 picoseconds.
		Weight::from_parts(14_971_000_000, 442147)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Domains RuntimeRegistry (r:1 w:0)
	/// Proof Skipped: Domains RuntimeRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Domains NextDomainId (r:1 w:1)
	/// Proof Skipped: Domains NextDomainId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System BlockHash (r:1 w:0)
	/// Proof: System BlockHash (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	/// Storage: Balances Holds (r:1 w:1)
	/// Proof: Balances Holds (max_values: None, max_size: Some(2750), added: 5225, mode: MaxEncodedLen)
	/// Storage: Domains BlockTree (r:1 w:1)
	/// Proof Skipped: Domains BlockTree (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Digest (r:1 w:1)
	/// Proof Skipped: System Digest (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Domains DomainBlocks (r:0 w:1)
	/// Proof Skipped: Domains DomainBlocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainRegistry (r:0 w:1)
	/// Proof Skipped: Domains DomainRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainStakingSummary (r:0 w:1)
	/// Proof Skipped: Domains DomainStakingSummary (max_values: None, max_size: None, mode: Measured)
	fn instantiate_domain() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `438839`
		//  Estimated: `442304`
		// Minimum execution time: 219_000_000 picoseconds.
		Weight::from_parts(224_000_000, 442304)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: Domains PendingStakingOperationCount (r:1 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainStakingSummary (r:1 w:1)
	/// Proof Skipped: Domains DomainStakingSummary (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains NextOperatorId (r:1 w:1)
	/// Proof Skipped: Domains NextOperatorId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Balances Holds (r:1 w:1)
	/// Proof: Balances Holds (max_values: None, max_size: Some(2750), added: 5225, mode: MaxEncodedLen)
	/// Storage: Domains Operators (r:0 w:1)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingDeposits (r:0 w:1)
	/// Proof Skipped: Domains PendingDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains OperatorIdOwner (r:0 w:1)
	/// Proof Skipped: Domains OperatorIdOwner (max_values: None, max_size: None, mode: Measured)
	fn register_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `427`
		//  Estimated: `6215`
		// Minimum execution time: 68_000_000 picoseconds.
		Weight::from_parts(76_000_000, 6215)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: Domains Operators (r:1 w:0)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingStakingOperationCount (r:1 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingWithdrawals (r:1 w:0)
	/// Proof Skipped: Domains PendingWithdrawals (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingDeposits (r:1 w:1)
	/// Proof Skipped: Domains PendingDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Nominators (r:1 w:0)
	/// Proof Skipped: Domains Nominators (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Balances Holds (r:1 w:1)
	/// Proof: Balances Holds (max_values: None, max_size: Some(2750), added: 5225, mode: MaxEncodedLen)
	fn nominate_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `789`
		//  Estimated: `6215`
		// Minimum execution time: 67_000_000 picoseconds.
		Weight::from_parts(68_000_000, 6215)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Domains OperatorIdOwner (r:1 w:0)
	/// Proof Skipped: Domains OperatorIdOwner (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainStakingSummary (r:2 w:1)
	/// Proof Skipped: Domains DomainStakingSummary (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Operators (r:1 w:1)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingStakingOperationCount (r:1 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingOperatorSwitches (r:1 w:1)
	/// Proof Skipped: Domains PendingOperatorSwitches (max_values: None, max_size: None, mode: Measured)
	fn switch_domain() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `577`
		//  Estimated: `6517`
		// Minimum execution time: 34_000_000 picoseconds.
		Weight::from_parts(37_000_000, 6517)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Domains OperatorIdOwner (r:1 w:0)
	/// Proof Skipped: Domains OperatorIdOwner (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Operators (r:1 w:1)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingStakingOperationCount (r:1 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingOperatorDeregistrations (r:1 w:1)
	/// Proof Skipped: Domains PendingOperatorDeregistrations (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainStakingSummary (r:1 w:1)
	/// Proof Skipped: Domains DomainStakingSummary (max_values: None, max_size: None, mode: Measured)
	fn deregister_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `543`
		//  Estimated: `4008`
		// Minimum execution time: 29_000_000 picoseconds.
		Weight::from_parts(30_000_000, 4008)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Domains PendingDeposits (r:1 w:0)
	/// Proof Skipped: Domains PendingDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Operators (r:1 w:1)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingStakingOperationCount (r:1 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Nominators (r:1 w:0)
	/// Proof Skipped: Domains Nominators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains OperatorIdOwner (r:1 w:0)
	/// Proof Skipped: Domains OperatorIdOwner (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingWithdrawals (r:1 w:1)
	/// Proof Skipped: Domains PendingWithdrawals (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainStakingSummary (r:1 w:0)
	/// Proof Skipped: Domains DomainStakingSummary (max_values: None, max_size: None, mode: Measured)
	fn withdraw_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `788`
		//  Estimated: `4253`
		// Minimum execution time: 35_000_000 picoseconds.
		Weight::from_parts(36_000_000, 4253)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Domains Nominators (r:1 w:0)
	/// Proof Skipped: Domains Nominators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Operators (r:1 w:0)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingStakingOperationCount (r:1 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PreferredOperator (r:0 w:1)
	/// Proof Skipped: Domains PreferredOperator (max_values: None, max_size: None, mode: Measured)
	fn auto_stake_block_rewards() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `514`
		//  Estimated: `3979`
		// Minimum execution time: 23_000_000 picoseconds.
		Weight::from_parts(24_000_000, 3979)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Domains HeadReceiptNumber (r:1 w:1)
	/// Proof Skipped: Domains HeadReceiptNumber (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains BlockTree (r:2 w:2)
	/// Proof Skipped: Domains BlockTree (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainBlocks (r:1 w:2)
	/// Proof Skipped: Domains DomainBlocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains ExecutionInbox (r:3 w:2)
	/// Proof Skipped: Domains ExecutionInbox (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains SuccessfulBundles (r:1 w:1)
	/// Proof Skipped: Domains SuccessfulBundles (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains HeadDomainNumber (r:1 w:1)
	/// Proof Skipped: Domains HeadDomainNumber (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainTxRangeState (r:1 w:1)
	/// Proof Skipped: Domains DomainTxRangeState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains InboxedBundle (r:0 w:2)
	/// Proof Skipped: Domains InboxedBundle (max_values: None, max_size: None, mode: Measured)
	fn submit_bundle() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3952`
		//  Estimated: `12367`
		// Minimum execution time: 99_000_000 picoseconds.
		Weight::from_parts(107_000_000, 12367)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(12_u64))
	}
	/// Storage: Domains DomainStakingSummary (r:1 w:1)
	/// Proof Skipped: Domains DomainStakingSummary (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingSlashes (r:1 w:0)
	/// Proof Skipped: Domains PendingSlashes (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Operators (r:1 w:1)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingOperatorSwitches (r:1 w:0)
	/// Proof Skipped: Domains PendingOperatorSwitches (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingOperatorDeregistrations (r:1 w:0)
	/// Proof Skipped: Domains PendingOperatorDeregistrations (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingWithdrawals (r:1025 w:1024)
	/// Proof Skipped: Domains PendingWithdrawals (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Nominators (r:1024 w:1024)
	/// Proof Skipped: Domains Nominators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Balances Holds (r:1024 w:1024)
	/// Proof: Balances Holds (max_values: None, max_size: Some(2750), added: 5225, mode: MaxEncodedLen)
	/// Storage: System Account (r:1024 w:1024)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Domains PendingNominatorUnlocks (r:1 w:1)
	/// Proof Skipped: Domains PendingNominatorUnlocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingUnlocks (r:1 w:1)
	/// Proof Skipped: Domains PendingUnlocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingDeposits (r:1 w:0)
	/// Proof Skipped: Domains PendingDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains LastEpochStakingDistribution (r:0 w:1)
	/// Proof Skipped: Domains LastEpochStakingDistribution (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingStakingOperationCount (r:0 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	fn pending_staking_operation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `332847`
		//  Estimated: `5351390`
		// Minimum execution time: 133_495_000_000 picoseconds.
		Weight::from_parts(137_797_000_000, 5351390)
			.saturating_add(RocksDbWeight::get().reads(4105_u64))
			.saturating_add(RocksDbWeight::get().writes(4102_u64))
	}
	/// Storage: Domains NextRuntimeId (r:1 w:1)
	/// Proof Skipped: Domains NextRuntimeId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Domains RuntimeRegistry (r:0 w:1)
	/// Proof Skipped: Domains RuntimeRegistry (max_values: None, max_size: None, mode: Measured)
	fn register_domain_runtime() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `43`
		//  Estimated: `1528`
		// Minimum execution time: 15_145_000_000 picoseconds.
		Weight::from_parts(15_254_000_000, 1528)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Domains RuntimeRegistry (r:1 w:0)
	/// Proof Skipped: Domains RuntimeRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains ScheduledRuntimeUpgrades (r:0 w:1)
	/// Proof Skipped: Domains ScheduledRuntimeUpgrades (max_values: None, max_size: None, mode: Measured)
	fn upgrade_domain_runtime() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `438682`
		//  Estimated: `442147`
		// Minimum execution time: 14_847_000_000 picoseconds.
		Weight::from_parts(14_971_000_000, 442147)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Domains RuntimeRegistry (r:1 w:0)
	/// Proof Skipped: Domains RuntimeRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Domains NextDomainId (r:1 w:1)
	/// Proof Skipped: Domains NextDomainId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System BlockHash (r:1 w:0)
	/// Proof: System BlockHash (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	/// Storage: Balances Holds (r:1 w:1)
	/// Proof: Balances Holds (max_values: None, max_size: Some(2750), added: 5225, mode: MaxEncodedLen)
	/// Storage: Domains BlockTree (r:1 w:1)
	/// Proof Skipped: Domains BlockTree (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Digest (r:1 w:1)
	/// Proof Skipped: System Digest (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Domains DomainBlocks (r:0 w:1)
	/// Proof Skipped: Domains DomainBlocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainRegistry (r:0 w:1)
	/// Proof Skipped: Domains DomainRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainStakingSummary (r:0 w:1)
	/// Proof Skipped: Domains DomainStakingSummary (max_values: None, max_size: None, mode: Measured)
	fn instantiate_domain() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `438839`
		//  Estimated: `442304`
		// Minimum execution time: 219_000_000 picoseconds.
		Weight::from_parts(224_000_000, 442304)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: Domains PendingStakingOperationCount (r:1 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainStakingSummary (r:1 w:1)
	/// Proof Skipped: Domains DomainStakingSummary (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains NextOperatorId (r:1 w:1)
	/// Proof Skipped: Domains NextOperatorId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Balances Holds (r:1 w:1)
	/// Proof: Balances Holds (max_values: None, max_size: Some(2750), added: 5225, mode: MaxEncodedLen)
	/// Storage: Domains Operators (r:0 w:1)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingDeposits (r:0 w:1)
	/// Proof Skipped: Domains PendingDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains OperatorIdOwner (r:0 w:1)
	/// Proof Skipped: Domains OperatorIdOwner (max_values: None, max_size: None, mode: Measured)
	fn register_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `427`
		//  Estimated: `6215`
		// Minimum execution time: 68_000_000 picoseconds.
		Weight::from_parts(76_000_000, 6215)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: Domains Operators (r:1 w:0)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingStakingOperationCount (r:1 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingWithdrawals (r:1 w:0)
	/// Proof Skipped: Domains PendingWithdrawals (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingDeposits (r:1 w:1)
	/// Proof Skipped: Domains PendingDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Nominators (r:1 w:0)
	/// Proof Skipped: Domains Nominators (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Balances Holds (r:1 w:1)
	/// Proof: Balances Holds (max_values: None, max_size: Some(2750), added: 5225, mode: MaxEncodedLen)
	fn nominate_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `789`
		//  Estimated: `6215`
		// Minimum execution time: 67_000_000 picoseconds.
		Weight::from_parts(68_000_000, 6215)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Domains OperatorIdOwner (r:1 w:0)
	/// Proof Skipped: Domains OperatorIdOwner (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainStakingSummary (r:2 w:1)
	/// Proof Skipped: Domains DomainStakingSummary (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Operators (r:1 w:1)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingStakingOperationCount (r:1 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingOperatorSwitches (r:1 w:1)
	/// Proof Skipped: Domains PendingOperatorSwitches (max_values: None, max_size: None, mode: Measured)
	fn switch_domain() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `577`
		//  Estimated: `6517`
		// Minimum execution time: 34_000_000 picoseconds.
		Weight::from_parts(37_000_000, 6517)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Domains OperatorIdOwner (r:1 w:0)
	/// Proof Skipped: Domains OperatorIdOwner (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Operators (r:1 w:1)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingStakingOperationCount (r:1 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingOperatorDeregistrations (r:1 w:1)
	/// Proof Skipped: Domains PendingOperatorDeregistrations (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainStakingSummary (r:1 w:1)
	/// Proof Skipped: Domains DomainStakingSummary (max_values: None, max_size: None, mode: Measured)
	fn deregister_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `543`
		//  Estimated: `4008`
		// Minimum execution time: 29_000_000 picoseconds.
		Weight::from_parts(30_000_000, 4008)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Domains PendingDeposits (r:1 w:0)
	/// Proof Skipped: Domains PendingDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Operators (r:1 w:1)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingStakingOperationCount (r:1 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Nominators (r:1 w:0)
	/// Proof Skipped: Domains Nominators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains OperatorIdOwner (r:1 w:0)
	/// Proof Skipped: Domains OperatorIdOwner (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingWithdrawals (r:1 w:1)
	/// Proof Skipped: Domains PendingWithdrawals (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains DomainStakingSummary (r:1 w:0)
	/// Proof Skipped: Domains DomainStakingSummary (max_values: None, max_size: None, mode: Measured)
	fn withdraw_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `788`
		//  Estimated: `4253`
		// Minimum execution time: 35_000_000 picoseconds.
		Weight::from_parts(36_000_000, 4253)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Domains Nominators (r:1 w:0)
	/// Proof Skipped: Domains Nominators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains Operators (r:1 w:0)
	/// Proof Skipped: Domains Operators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PendingStakingOperationCount (r:1 w:1)
	/// Proof Skipped: Domains PendingStakingOperationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: Domains PreferredOperator (r:0 w:1)
	/// Proof Skipped: Domains PreferredOperator (max_values: None, max_size: None, mode: Measured)
	fn auto_stake_block_rewards() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `514`
		//  Estimated: `3979`
		// Minimum execution time: 23_000_000 picoseconds.
		Weight::from_parts(24_000_000, 3979)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
}
